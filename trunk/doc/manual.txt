
                           TThhee MMuutttt NNeexxtt GGeenneerraattiioonn EE--MMaaiill CClliieenntt

                      by Andreas Krennmair <ak@synflood.at> and others
                originally based on _m_u_t_t by Michael Elkins <me@cs.hmc.edu> and others

                                     version devel-r388

                                          AAbbssttrraacctt

            Michael Elinks on mutt, circa 1995: ``All mail clients suck. This one just
            sucks less.'' - Sven Guckes on mutt, ca. 2003: ``But it still sucks!''

       _1_.  _I_n_t_r_o_d_u_c_t_i_o_n

       _1_._1  _O_v_e_r_v_i_e_w

       MMuutttt--nngg is a small but very powerful text-based MIME mail client.  Mutt-ng is
       highly configurable, and is well suited to the mail power user with advanced
       features like key bindings, keyboard macros, mail threading, regular expression
       searches and a powerful pattern matching language for selecting groups of mes-
       sages.

       This documentation additionally contains documentation to MMuutttt--NNGG, a fork from
       Mutt with the goal to fix all the little annoyances of Mutt, to integrate all
       the Mutt patches that are floating around in the web, and to add other new fea-
       tures. Features specific to Mutt-ng will be discussed in an extra section.
       Don't be confused when most of the documentation talk about Mutt and not Mutt-
       ng, Mutt-ng contains all Mutt features, plus many more.

       _1_._2  _M_u_t_t_-_n_g _H_o_m_e _P_a_g_e

       http://www.muttng.org

       _1_._3  _M_a_i_l_i_n_g _L_i_s_t_s

          +o mutt-ng-users@lists.berlios.de -- This is where the mutt-ng user support
            happens.

       The Mutt Next Generation E-Mail Client                                        1

       The Mutt Next Generation E-Mail Client                                        2

          +o mutt-ng-devel@lists.berlios.de -- The development mailing list for mutt-ng

       _1_._4  _S_o_f_t_w_a_r_e _D_i_s_t_r_i_b_u_t_i_o_n _S_i_t_e_s

       So far, there are no official releases of Mutt-ng, but you can download daily
       snapshots from http://mutt-ng.berlios.de/snapshots/

       _1_._5  _I_R_C

       Visit channel _#_m_u_t_t_n_g on irc.freenode.net (www.freenode.net) to chat with other
       people interested in Mutt-ng.

       _1_._6  _W_e_b_l_o_g

       If you want to read fresh news about the latest development in Mutt-ng, and get
       informed about stuff like interesting, Mutt-ng-related articles and packages
       for your favorite distribution, you can read and/or subscribe to our Mutt-ng
       development weblog.

       _1_._7  _C_o_p_y_r_i_g_h_t

       Mutt is Copyright (C) 1996-2000 Michael R. Elkins <me@cs.hmc.edu> and others

       This program is free software; you can redistribute it and/or modify it under
       the terms of the GNU General Public License as published by the Free Software
       Foundation; either version 2 of the License, or (at your option) any later ver-
       sion.

       This program is distributed in the hope that it will be useful, but WITHOUT ANY
       WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
       PARTICULAR PURPOSE.  See the GNU General Public License for more details.

       You should have received a copy of the GNU General Public License along with
       this program; if not, write to the Free Software Foundation, Inc., 59 Temple
       Place - Suite 330, Boston, MA  02111, USA.

       _2_.  _G_e_t_t_i_n_g _S_t_a_r_t_e_d

       _2_._1  _B_a_s_i_c _C_o_n_c_e_p_t_s

       The Mutt Next Generation E-Mail Client                                        3

       _2_._1_._1  _S_c_r_e_e_n_s _a_n_d _M_e_n_u_s

       mutt-ng offers different screens of which every has its special purpose:

          +o The _i_n_d_e_x displays the contents of the currently opened mailbox.

          +o The _p_a_g_e_r is responsible for displaying messages, that is, the header, the
            body and all attached parts.

          +o The _f_i_l_e _b_r_o_w_s_e_r offers operations on and displays information of all
            folders mutt-ng should watch for mail.

          +o The _s_i_d_e_b_a_r offers a permanent view of which mailboxes contain how many
            total, new and/or flagged mails.

          +o The _h_e_l_p _s_c_r_e_e_n lists for all currently available commands how to invoke
            them as well as a short description.

          +o The _c_o_m_p_o_s_e menu is a comfortable interface take last actions before send-
            ing mail: change subjects, attach files, remove attachements, etc.

          +o The _a_t_t_a_c_h_e_m_e_n_t menu gives a summary and the tree structure of the
            attachements of the current message.

          +o The _a_l_i_a_s menu lists all or a fraction of the aliases a user has defined.

          +o The _k_e_y menu used in connection with encryption lets users choose the
            right key to encrypt with.

       When mutt-ng is started without any further options, it'll open the users
       default mailbox and display the index.

       _2_._1_._2  _C_o_n_f_i_g_u_r_a_t_i_o_n

       Mutt-ng does _n_o_t feature an internal configuration interface or menu due to the
       simple fact that this would be too complex to handle (currently there are sev-
       eral _h_u_n_d_r_e_d variables which fine-tune the behaviour.)

       Mutt-ng is configured using configuration files which allow users to add com-
       ments or manage them via version control systems to ease maintenance.

       Also, mutt-ng comes with a shell script named grml-muttng kindly contributed by
       users which really helps and eases the creation of a user's configuration file.
       When downloading the source code via a snapshot or via subversion, it can be
       found in the contrib directory.

       _2_._1_._3  _F_u_n_c_t_i_o_n_s

       Mutt-ng offers great flexibility due to the use of functions: internally, every
       action a user can make mutt-ng perform is named ``function.'' Those functions

       The Mutt Next Generation E-Mail Client                                        4

       are assigned to keys (or even key sequences) and may be completely adjusted to
       user's needs. The basic idea is that the impatient users get a very intuitive
       interface to start off with and advanced users virtually get no limits to
       adjustments.

       _2_._1_._4  _I_n_t_e_r_a_c_t_i_o_n

       Mutt-ng has two basic concepts of user interaction:

         1.  There is one dedicated line on the screen used to query the user for
             input, issue any command, query variables and display error and informa-
             tional messages. As for every type of user input, this requires manual
             action leading to the need of input.

         2.  The automatized interface for interaction are the so called _h_o_o_k_s. Hooks
             specify actions the user wants to be performed at well-defined situa-
             tions: what to do when entering which folder, what to do when displaying
             or replying to what kind of message, etc. These are optional, i.e. a user
             doesn't need to specify them but can do so.

       _2_._1_._5  _M_o_d_u_l_a_r_i_z_a_t_i_o_n

       Although mutt-ng has many functionality built-in, many features can be dele-
       gated to external tools to increase flexibility: users can define programs to
       filter a message through before displaying, users can use any program they want
       for displaying a message, message types (such as PDF or PostScript) for which
       mutt-ng doesn't have a built-in filter can be rendered by arbitrary tools and
       so forth. Although mutt-ng has an alias mechanism built-in, it features using
       external tools to query for nearly every type of addresses from sources like
       LDAP, databases or just the list of locally known users.

       _2_._1_._6  _P_a_t_t_e_r_n_s

       Mutt-ng has a built-in pattern matching ``language'' which is as widely used as
       possible to present a consistent interface to users. The same ``pattern terms''
       can be used for searching, scoring, message selection and much more.

       _2_._2  _S_c_r_e_e_n_s _a_n_d _M_e_n_u_s

       _2_._2_._1  _I_n_d_e_x

       The index is the screen that you usually see first when you start mutt-ng. It
       gives an overview over your emails in the currently opened mailbox. By default,
       this is your system mailbox.  The information you see in the index is a list of

       The Mutt Next Generation E-Mail Client                                        5

       emails, each with its number on the left, its flags (new email, important
       email, email that has been forwarded or replied to, tagged email, ...), the
       date when email was sent, its sender, the email size, and the subject. Addi-
       tionally, the index also shows thread hierarchies: when you reply to an email,
       and the other person replies back, you can see the other's person email in a
       "sub-tree" below.  This is especially useful for personal email between a group
       of people or when you've subscribed to mailing lists.

       _2_._2_._2  _P_a_g_e_r

       The pager is responsible for showing the email content. On the top of the pager
       you have an overview over the most important email headers like the sender, the
       recipient, the subject, and much more information. How much information you
       actually see depends on your configuration, which we'll describe below.

       Below the headers, you see the email body which usually contains the message.
       If the email contains any attachments, you will see more information about them
       below the email body, or, if the attachments are text files, you can view them
       directly in the pager.

       To give the user a good overview, it is possible to configure mutt-ng to show
       different things in the pager with different colors. Virtually everything that
       can be described with a regular expression can be colored, e.g. URLs, email
       addresses or smileys.

       _2_._2_._3  _F_i_l_e _B_r_o_w_s_e_r

       The file browser is the interface to the local or remote file system. When
       selecting a mailbox to open, the browser allows custom sorting of items, limit-
       ing the items shown by a regular expression and a freely adjustable format of
       what to display in which way. It also allows for easy navigation through the
       file system when selecting file(s) to attach to a message, select multiple
       files to attach and many more.

       _2_._2_._4  _S_i_d_e_b_a_r

       The sidebar comes in handy to manage mails which are spread over different
       folders. All folders users setup mutt-ng to watch for new mail will be listed.
       The listing includes not only the name but also the number of total messages,
       the number of new and flagged messages. Items with new mail may be colored dif-
       ferent from those with flagged mail, items may be shortened or compress if
       they're they to long to be printed in full form so that by abbreviated names,
       user still now what the name stands for.

       _2_._2_._5  _H_e_l_p

       The Mutt Next Generation E-Mail Client                                        6

       The help screen is meant to offer a quick help to the user. It lists the cur-
       rent configuration of key bindings and their associated commands including a
       short description, and currently unbound functions that still need to be asso-
       ciated with a key binding (or alternatively, they can be called via the mutt-ng
       command prompt).

       _2_._2_._6  _C_o_m_p_o_s_e _M_e_n_u

       The compose menu features a split screen containing the information which
       really matter before actually sending a message by mail or posting an article
       to a newsgroup: who gets the message as what (recipient, newsgroup, who gets
       what kind of copy). Additionally, users may set security options like deciding
       whether to sign, encrypt or sign and encrypt a message with/for what keys.

       Also, it's used to attach messages, news articles or files to a message, to re-
       edit any attachment including the message itself.

       _2_._2_._7  _A_l_i_a_s _M_e_n_u

       The alias menu is used to help users finding the recipients of messages. For
       users who need to contact many people, there's no need to remember addresses or
       names completely because it allows for searching, too. The alias mechanism and
       thus the alias menu also features grouping several addresses by a shorter nick-
       name, the actual alias, so that users don't have to select each single recipi-
       ent manually.

       _2_._2_._8  _A_t_t_a_c_h_m_e_n_t _M_e_n_u

       As will be later discussed in detail, mutt-ng features a good and stable MIME
       implementation, that is, is greatly supports sending and receiving messages of
       arbitrary type. The attachment menu displays a message's structure in detail:
       what content parts are attached to which parent part (which gives a true tree
       structure), which type is of what type and what size.  Single parts may saved,
       deleted or modified to offer great and easy access to message's internals.

       _2_._2_._9  _K_e_y _M_e_n_u

       FIXME

       _2_._3  _M_o_v_i_n_g _A_r_o_u_n_d _i_n _M_e_n_u_s

       Information is presented in menus, very similar to ELM.  Here is a table

       The Mutt Next Generation E-Mail Client                                        7

       showing the common keys used to navigate menus in Mutt-ng.

            j or Down       next-entry      move to the next entry
            k or Up         previous-entry  move to the previous entry
            z or PageDn     page-down       go to the next page
            Z or PageUp     page-up         go to the previous page
            = or Home       first-entry     jump to the first entry
            * or End        last-entry      jump to the last entry
            q               quit            exit the current menu
            ?               help            list all key bindings for the current menu

       _2_._4  _E_d_i_t_i_n_g _I_n_p_u_t _F_i_e_l_d_s

       Mutt-ng has a builtin line editor which is used as the primary way to input
       textual data such as email addresses or filenames.  The keys used to move
       around while editing are very similar to those of Emacs.

            ^A or <Home>    bol             move to the start of the line
            ^B or <Left>    backward-char   move back one char
            Esc B          backward-word  move back one word
            ^D or <Delete>  delete-char     delete the char under the cursor
            ^E or <End>     eol             move to the end of the line
            ^F or <Right>   forward-char    move forward one char
            Esc F          forward-word   move forward one word
            <Tab>           complete        complete filename or alias
            ^T              complete-query  complete address with query
            ^K              kill-eol        delete to the end of the line
            ESC d          kill-eow  delete to the end of the word
            ^W              kill-word       kill the word in front of the cursor
            ^U              kill-line       delete entire line
            ^V              quote-char      quote the next typed key
            <Up>            history-up      recall previous string from history
            <Down>          history-down    recall next string from history
            <BackSpace>     backspace       kill the char in front of the cursor
            Esc u          upcase-word    convert word to upper case
            Esc l          downcase-word  convert word to lower case
            Esc c          capitalize-word capitalize the word
            ^G              n/a             abort
            <Return>        n/a             finish editing

       You can remap the _e_d_i_t_o_r functions using the _b_i_n_d (section 3.4  , page 24) com-
       mand.  For example, to make the _D_e_l_e_t_e key delete the character in front of the
       cursor rather than under, you could use

       bind editor <delete> backspace

       The Mutt Next Generation E-Mail Client                                        8

       _2_._5  _R_e_a_d_i_n_g _M_a_i_l _- _T_h_e _I_n_d_e_x _a_n_d _P_a_g_e_r

       Similar to many other mail clients, there are two modes in which mail is read
       in Mutt-ng.  The first is the index of messages in the mailbox, which is called
       the ``index'' in Mutt-ng.  The second mode is the display of the message con-
       tents.  This is called the ``pager.''

       The next few sections describe the functions provided in each of these modes.

       _2_._5_._1  _T_h_e _M_e_s_s_a_g_e _I_n_d_e_x

            c               change to a different mailbox
            ESC c           change to a folder in read-only mode
            C               copy the current message to another mailbox
            ESC C           decode a message and copy it to a folder
            ESC s           decode a message and save it to a folder
            D               delete messages matching a pattern
            d               delete the current message
            F               mark as important
            l               show messages matching a pattern
            N               mark message as new
            o               change the current sort method
            O               reverse sort the mailbox
            q               save changes and exit
            s               save-message
            T               tag messages matching a pattern
            t               toggle the tag on a message
            ESC t           toggle tag on entire message thread
            U               undelete messages matching a pattern
            u               undelete-message
            v               view-attachments
            x               abort changes and exit
            <Return>        display-message
            <Tab>           jump to the next new message
            @               show the author's full e-mail address
            $               save changes to mailbox
            /               search
            ESC /           search-reverse
            ^L              clear and redraw the screen
            ^T              untag messages matching a pattern

       _2_._5_._1_._1  _S_t_a_t_u_s _F_l_a_g_s

       In addition to who sent the message and the subject, a short summary of the
       disposition of each message is printed beside the message number.  Zero or more
       of the following ``flags'' may appear, which mean:

             D
                   message is deleted (is marked for deletion)

             d
                   message have attachments marked for deletion

       The Mutt Next Generation E-Mail Client                                        9

             K
                   contains a PGP public key

             N
                   message is new

             O
                   message is old

             P
                   message is PGP encrypted

             r
                   message has been replied to

             S
                   message is signed, and the signature is succesfully verified

             s
                   message is signed

             !
                   message is flagged

             *
                   message is tagged

       Some of the status flags can be turned on or off using

          +o sseett--ffllaagg (default: w)

          +o cclleeaarr--ffllaagg (default: W)

       Furthermore, the following flags reflect who the message is addressed to.  They
       can be customized with the _$_t_o___c_h_a_r_s (section 6.4.322  , page 159) variable.

             +
                   message is to you and you only

             T
                   message is to you, but also to or cc'ed to others

             C
                   message is cc'ed to you

             F
                   message is from you

             L
                   message is sent to a subscribed mailing list

       _2_._5_._2  _T_h_e _P_a_g_e_r

       By default, Mutt-ng uses its builtin pager to display the body of messages.

       The Mutt Next Generation E-Mail Client                                       10

       The pager is very similar to the Unix program _l_e_s_s though not nearly as fea-
       tureful.

            <Return>        go down one line
            <Space>         display the next page (or next message if at the end of a message)
            -               go back to the previous page
            n               search for next match
            S               skip beyond quoted text
            T               toggle display of quoted text
            ?               show key bindings
            /               search for a regular expression (pattern)
            ESC /           search backwards for a regular expression
            \               toggle search pattern coloring
            ^               jump to the top of the message

       In addition, many of the functions from the _i_n_d_e_x are available in the pager,
       such as _d_e_l_e_t_e_-_m_e_s_s_a_g_e or _c_o_p_y_-_m_e_s_s_a_g_e (this is one advantage over using an
       external pager to view messages).

       Also, the internal pager supports a couple other advanced features. For one, it
       will accept and translate the ``standard'' nroff sequences for bold and under-
       line. These sequences are a series of either the letter, backspace (^H), the
       letter again for bold or the letter, backspace, ``_'' for denoting underline.
       Mutt-ng will attempt to display these in bold and underline respectively if
       your terminal supports them. If not, you can use the bold and underline _c_o_l_o_r
       (section 3.8  , page 27) objects to specify a color or mono attribute for them.

       Additionally, the internal pager supports the ANSI escape sequences for charac-
       ter attributes.  Mutt-ng translates them into the correct color and character
       settings.  The sequences Mutt-ng supports are:

            ESC [ Ps;Ps;Ps;...;Ps m
            where Ps =
            0    All Attributes Off
            1    Bold on
            4    Underline on
            5    Blink on
            7    Reverse video on
            3x   Foreground color is x
            4x   Background color is x

            Colors are
            0    black
            1    red
            2    green
            3    yellow
            4    blue
            5    magenta
            6    cyan
            7    white

       The Mutt Next Generation E-Mail Client                                       11

       Mutt-ng uses these attributes for handling text/enriched messages, and they can
       also be used by an external _a_u_t_o_v_i_e_w (section 5.4  , page 74) script for high-
       lighting purposes.  NNoottee:: If you change the colors for your display, for exam-
       ple by changing the color associated with color2 for your xterm, then that
       color will be used instead of green.

       _2_._5_._3  _T_h_r_e_a_d_e_d _M_o_d_e

       When the mailbox is _s_o_r_t_e_d (section 6.4.290  , page 149) by _t_h_r_e_a_d_s, there are
       a few additional functions available in the _i_n_d_e_x and _p_a_g_e_r modes.

            ^D      delete-thread           delete all messages in the current thread
            ^U      undelete-thread         undelete all messages in the current thread
            ^N      next-thread             jump to the start of the next thread
            ^P      previous-thread         jump to the start of the previous thread
            ^R      read-thread             mark the current thread as read
            ESC d   delete-subthread        delete all messages in the current subthread
            ESC u   undelete-subthread      undelete all messages in the current subthread
            ESC n   next-subthread          jump to the start of the next subthread
            ESC p   previous-subthread      jump to the start of the previous subthread
            ESC r   read-subthread          mark the current subthread as read
            ESC t   tag-thread              toggle the tag on the current thread
            ESC v     collapse-thread          toggle collapse for the current thread
            ESC V     collapse-all        toggle collapse for all threads
            P       parent-message          jump to parent message in thread

       NNoottee:: Collapsing a thread displays only the first message in the thread and
       hides the others. This is useful when threads contain so many messages that you
       can only see a handful of threads on the screen. See %M in _$_i_n_d_e_x___f_o_r_m_a_t (sec-
       tion 6.4.110  , page 105).  For example, you could use "%?M?(#%03M)&(%4l)?" in
       _$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105) to optionally display the number of
       hidden messages if the thread is collapsed.

       See also: _$_s_t_r_i_c_t___t_h_r_e_a_d_s (section 6.4.311  , page 157).

       _2_._5_._4  _M_i_s_c_e_l_l_a_n_e_o_u_s _F_u_n_c_t_i_o_n_s

       ccrreeaattee--aalliiaass
        (default: a)

       Creates a new alias based upon the current message (or prompts for a new one).
       Once editing is complete, an _a_l_i_a_s (section 3.3  , page 23) command is added to
       the file specified by the _$_a_l_i_a_s___f_i_l_e (section 6.4.3  , page 80) variable for
       future use. NNoottee:: Specifying an _$_a_l_i_a_s___f_i_l_e (section 6.4.3  , page 80) does not
       add the aliases specified there-in, you must also _s_o_u_r_c_e (section 3.28  , page
       42) the file.

       cchheecckk--ttrraaddiittiioonnaall--ppggpp
        (default: ESC P)

       This function will search the current message for content signed or encrypted
       with PGP the "traditional" way, that is, without proper MIME tagging.

       The Mutt Next Generation E-Mail Client                                       12

       Technically, this function will temporarily change the MIME content types of
       the body parts containing PGP data; this is similar to the _e_d_i_t_-_t_y_p_e (section
       2.5.4  , page 12) function's effect.

       ddiissppllaayy--ttooggggllee--wweeeedd
        (default: h)

       Toggles the weeding of message header fields specified by _i_g_n_o_r_e (section
       3.9  , page 30) commands.

       eeddiitt
        (default: e)

       This command (available in the ``index'' and ``pager'') allows you to edit the
       raw current message as it's present in the mail folder.  After you have fin-
       ished editing, the changed message will be appended to the current folder, and
       the original message will be marked for deletion.

       eeddiitt--ttyyppee

       (default: ^E on the attachment menu, and in the pager and index menus; ^T on
       the compose menu)

       This command is used to temporarily edit an attachment's content type to fix,
       for instance, bogus character set parameters.  When invoked from the index or
       from the pager, you'll have the opportunity to edit the top-level attachment's
       content type.  On the _a_t_t_a_c_h_m_e_n_t _m_e_n_u (section 5.1.2  , page 66), you can
       change any attachment's content type. These changes are not persistent, and get
       lost upon changing folders.

       Note that this command is also available on the _c_o_m_p_o_s_e _m_e_n_u (section 5.1.3  ,
       page 67).  There, it's used to fine-tune the properties of attachments you are
       going to send.

       eenntteerr--ccoommmmaanndd
        (default: ``:'')

       This command is used to execute any command you would normally put in a config-
       uration file.  A common use is to check the settings of variables, or in con-
       junction with _m_a_c_r_o_s (section 3.7  , page 27) to change settings on the fly.

       eexxttrraacctt--kkeeyyss
        (default: ^K)

       This command extracts PGP public keys from the current or tagged message(s) and
       adds them to your PGP public key ring.

       ffoorrggeett--ppaasssspphhrraassee
        (default: ^F)

       This command wipes the passphrase(s) from memory. It is useful, if you mis-
       spelled the passphrase.

       The Mutt Next Generation E-Mail Client                                       13

       lliisstt--rreeppllyy
        (default: L)

       Reply to the current or tagged message(s) by extracting any addresses which
       match the regular expressions given by the _l_i_s_t_s _o_r _s_u_b_s_c_r_i_b_e (section 3.12  ,
       page 32) commands, but also honor any Mail-Followup-To header(s) if the
       _$_h_o_n_o_r___f_o_l_l_o_w_u_p___t_o (section 6.4.88  , page 100) configuration variable is set.
       Using this when replying to messages posted to mailing lists helps avoid dupli-
       cate copies being sent to the author of the message you are replying to.

       ppiippee--mmeessssaaggee
        (default: |)

       Asks for an external Unix command and pipes the current or tagged message(s) to
       it.  The variables _$_p_i_p_e___d_e_c_o_d_e (section 6.4.200  , page 129), _$_p_i_p_e___s_p_l_i_t
       (section 6.4.202  , page 129), _$_p_i_p_e___s_e_p (section 6.4.201  , page 129) and
       _$_w_a_i_t___k_e_y (section 6.4.334  , page 161) control the exact behavior of this
       function.

       rreesseenndd--mmeessssaaggee
        (default: ESC e)

       With resend-message, mutt takes the current message as a template for a new
       message.  This function is best described as "recall from arbitrary folders".
       It can conveniently be used to forward MIME messages while preserving the orig-
       inal mail structure. Note that the amount of headers included here depends on
       the value of the _$_w_e_e_d (section 6.4.335  , page 162) variable.

       This function is also available from the attachment menu. You can use this to
       easily resend a message which was included with a bounce message as a mes-
       sage/rfc822 body part.

       sshheellll--eessccaappee
        (default: !)

       Asks for an external Unix command and executes it.  The _$_w_a_i_t___k_e_y (section
       6.4.334  , page 161) can be used to control whether Mutt-ng will wait for a key
       to be pressed when the command returns (presumably to let the user read the
       output of the command), based on the return status of the named command.

       ttooggggllee--qquuootteedd
        (default: T)

       The _p_a_g_e_r uses the _$_q_u_o_t_e___r_e_g_e_x_p (section 6.4.225  , page 134) variable to
       detect quoted text when displaying the body of the message.  This function tog-
       gles the display of the quoted material in the message.  It is particularly
       useful when are interested in just the response and there is a large amount of
       quoted text in the way.

       sskkiipp--qquuootteedd
        (default: S)

       This function will go to the next line of non-quoted text which come after a
       line of quoted text in the internal pager.

       The Mutt Next Generation E-Mail Client                                       14

       _2_._6  _S_e_n_d_i_n_g _M_a_i_l

       The following bindings are available in the _i_n_d_e_x for sending messages.

            m       compose         compose a new message
            r       reply           reply to sender
            g       group-reply     reply to all recipients
            L       list-reply      reply to mailing list address
            f       forward         forward message
            b       bounce          bounce (remail) message
            ESC k   mail-key        mail a PGP public key to someone

       Bouncing a message sends the message as is to the recipient you specify.  For-
       warding a message allows you to add comments or modify the message you are for-
       warding.  These items are discussed in greater detail in the next chapter
       _`_`_F_o_r_w_a_r_d_i_n_g _a_n_d _B_o_u_n_c_i_n_g _M_a_i_l_'_' (section 2.7  , page 20).

       _2_._6_._1  _C_o_m_p_o_s_i_n_g _n_e_w _m_e_s_s_a_g_e_s

       When you want to send an email using mutt-ng, simply press m on your keyboard.
       Then, mutt-ng asks for the recipient via a prompt in the last line:

            To:

       After you've finished entering the recipient(s), press return. If you want to
       send an email to more than one recipient, separate the email addresses using
       the comma ",". Mutt-ng then asks you for the email subject. Again, press return
       after you've entered it. After that, mutt-ng got the most important information
       from you, and starts up an editor where you can then enter your email.

       The editor that is called is selected in the following way: you can e.g. set it
       in the mutt-ng configuration:

            set editor = "vim +/^$/ -c ':set tw=72'"
            set editor = "nano"
            set editor = "emacs"

       If you don't set your preferred editor in your configuration, mutt-ng first
       looks whether the environment variable $VISUAL is set, and if so, it takes its
       value as editor command. Otherwise, it has a look at $EDITOR and takes its
       value if it is set. If no editor command can be found, mutt-ng simply assumes
       vi to be the default editor, since it's the most widespread editor in the Unix
       world and it's pretty safe to assume that it is installed and available.

       When you've finished entering your message, save it and quit your editor. Mutt-
       ng will then present you with a summary screen, the compose menu.  On the top,
       you see a summary of the most important available key commands.  Below that,
       you see the sender, the recipient(s), Cc and/or Bcc recipient(s), the subject,

       The Mutt Next Generation E-Mail Client                                       15

       the reply-to address, and optionally information where the sent email will be
       stored and whether it should be digitally signed and/or encrypted.

       Below that, you see a list of "attachments". The mail you've just entered
       before is also an attachment, but due to its special type (it's plain text), it
       will be displayed as the normal message on the receiver's side.

       At this point, you can add more attachments, pressing a, you can edit the
       recipient addresses, pressing t for the "To:" field, c for the "Cc:" field, and
       b for the "Bcc: field. You can also edit the subject the subject by simply
       pressing s or the email message that you've entered before by pressing e. You
       will then again return to the editor. You can even edit the sender, by pressing
       <esc>f, but this shall only be used with caution.

       Alternatively, you can configure mutt-ng in a way that most of the above set-
       tings can be edited using the editor. Therefore, you only need to add the fol-
       lowing to your configuration:

            set edit_headers

       Once you have finished editing the body of your mail message, you are returned
       to the _c_o_m_p_o_s_e menu.  The following options are available:

            a       attach-file             attach a file
            A    attach-message      attach message(s) to the message
            ESC k   attach-key              attach a PGP public key
            d       edit-description        edit description on attachment
            D       detach-file             detach a file
            t       edit-to                 edit the To field
            ESC f   edit-from               edit the From field
            r       edit-reply-to           edit the Reply-To field
            c       edit-cc                 edit the Cc field
            b       edit-bcc                edit the Bcc field
            y       send-message            send the message
            s       edit-subject            edit the Subject
            S       smime-menu              select S/MIME options
            f       edit-fcc                specify an ``Fcc'' mailbox
            p       pgp-menu                select PGP options
            P       postpone-message        postpone this message until later
            q       quit                    quit (abort) sending the message
            w    write-fcc      write the message to a folder
            i       ispell                  check spelling (if available on your system)
            ^F      forget-passphrase       wipe passphrase(s) from memory

       NNoottee:: The attach-message function will prompt you for a folder to attach mes-
       sages from. You can now tag messages in that folder and they will be attached
       to the message you are sending. Note that certain operations like composing a
       new mail, replying, forwarding, etc. are not permitted when you are in that
       folder. The %r in _$_s_t_a_t_u_s___f_o_r_m_a_t (section 6.4.307  , page 154) will change to a
       'A' to indicate that you are in attach-message mode.

       The Mutt Next Generation E-Mail Client                                       16

       _2_._6_._2  _R_e_p_l_y_i_n_g

       _2_._6_._2_._1  _S_i_m_p_l_e _R_e_p_l_i_e_s

       When you want to reply to an email message, select it in the index menu and
       then press r. Mutt-ng's behaviour is then similar to the behaviour when you
       compose a message: first, you will be asked for the recipient, then for the
       subject, and then, mutt-ng will start the editor with the quote attribution and
       the quoted message. This can e.g. look like the example below.

            On Mon, Mar 07, 2005 at 05:02:12PM +0100, Michael Svensson wrote:
            > Bill, can you please send last month's progress report to Mr.
            > Morgan? We also urgently need the cost estimation for the new
            > production server that we want to set up before our customer's
            > project will go live.

       You can start editing the email message. It is strongly recommended to put your
       answer _b_e_l_o_w the quoted text and to only quote what is really necessary and
       that you refer to. Putting your answer on top of the quoted message, is,
       although very widespread, very often not considered to be a polite way to
       answer emails.

       The quote attribution is configurable, by default it is set to

            set attribution = "On %d, %n wrote:"

       It can also be set to something more compact, e.g.

            set attribution = "attribution="* %n <%a> [%(%y-%m-%d %H:%M)]:"

       The example above results in the following attribution:

            * Michael Svensson <svensson@foobar.com> [05-03-06 17:02]:
            > Bill, can you please send last month's progress report to Mr.
            > Morgan? We also urgently need the cost estimation for the new
            > production server that we want to set up before our customer's
            > project will go live.

       Generally, try to keep your attribution short yet information-rich. It is _n_o_t
       the right place for witty quotes, long "attribution" novels or anything like
       that: the right place for such things is - if at all - the email signature at
       the very bottom of the message.

       When you're done with writing your message, save and quit the editor. As
       before, you will return to the compose menu, which is used in the same way as

       The Mutt Next Generation E-Mail Client                                       17

       before.

       _2_._6_._2_._2  _G_r_o_u_p _R_e_p_l_i_e_s

       In the situation where a group of people uses email as a discussion, most of
       the emails will have one or more recipients, and probably several "Cc:" recipi-
       ents. The group reply functionality ensures that when you press g instead of r
       to do a reply, each and every recipient that is contained in the original mes-
       sage will receive a copy of the message, either as normal recipient or as "Cc:"
       recipient.

       _2_._6_._2_._3  _L_i_s_t _R_e_p_l_i_e_s

       When you use mailing lists, it's generally better to send your reply to a mes-
       sage only to the list instead of the list and the original author. To make this
       easy to use, mutt-ng features list replies.

       To do a list reply, simply press L. If the email contains a Mail-Followup-To:
       header, its value will be used as reply address. Otherwise, mutt-ng searches
       through all mail addresses in the original message and tries to match them a
       list of regular expressions which can be specified using the lists command.  If
       any of the regular expression matches, a mailing list address has been found,
       and it will be used as reply address.

            lists linuxevent@luga\.at vuln-dev@ mutt-ng-users@

       Nowadays, most mailing list software like GNU Mailman adds a Mail-Followup-To:
       header to their emails anyway, so setting lists is hardly ever necessary in
       practice.

       _2_._6_._3  _E_d_i_t_i_n_g _t_h_e _m_e_s_s_a_g_e _h_e_a_d_e_r

       When editing the header of your outgoing message, there are a couple of special
       features available.

       If you specify

       Fcc: _f_i_l_e_n_a_m_e

       Mutt-ng will pick up _f_i_l_e_n_a_m_e just as if you had used the _e_d_i_t_-_f_c_c function in
       the _c_o_m_p_o_s_e menu.

       You can also attach files to your message by specifying

       The Mutt Next Generation E-Mail Client                                       18

       Attach: _f_i_l_e_n_a_m_e  [ _d_e_s_c_r_i_p_t_i_o_n ]

       where _f_i_l_e_n_a_m_e is the file to attach and _d_e_s_c_r_i_p_t_i_o_n is an optional string to
       use as the description of the attached file.

       When replying to messages, if you remove the _I_n_-_R_e_p_l_y_-_T_o_: field from the header
       field, Mutt-ng will not generate a _R_e_f_e_r_e_n_c_e_s_: field, which allows you to cre-
       ate a new message thread.

       Also see _e_d_i_t___h_e_a_d_e_r_s (section 6.4.54  , page 92).

       _2_._6_._4  _U_s_i_n_g _M_u_t_t_-_n_g _w_i_t_h _P_G_P

       If you want to use PGP, you can specify

       Pgp: [ E | S | S_<_i_d_> ]

       ``E'' encrypts, ``S'' signs and ``S<id>'' signs with the given key, setting
       _$_p_g_p___s_i_g_n___a_s (section 6.4.192  , page 127) permanently.

       If you have told mutt to PGP encrypt a message, it will guide you through a key
       selection process when you try to send the message.  Mutt-ng will not ask you
       any questions about keys which have a certified user ID matching one of the
       message recipients' mail addresses.  However, there may be situations in which
       there are several keys, weakly certified user ID fields, or where no matching
       keys can be found.

       In these cases, you are dropped into a menu with a list of keys from which you
       can select one.  When you quit this menu, or mutt can't find any matching keys,
       you are prompted for a user ID.  You can, as usually, abort this prompt using
       ^G.  When you do so, mutt will return to the compose screen.

       Once you have successfully finished the key selection, the message will be
       encrypted using the selected public keys, and sent out.

       Most fields of the entries in the key selection menu (see also _$_p_g_p___e_n_t_r_y___f_o_r_-
       _m_a_t (section 6.4.179  , page 124)) have obvious meanings.  But some explana-
       tions on the capabilities, flags, and validity fields are in order.

       The flags sequence (%f) will expand to one of the following flags:

            R            The key has been revoked and can't be used.
            X            The key is expired and can't be used.
            d            You have marked the key as disabled.
            c            There are unknown critical self-signature
                         packets.

       The capabilities field (%c) expands to a two-character sequence representing a
       key's capabilities.  The first character gives the key's encryption capabili-
       ties: A minus sign (--) means that the key cannot be used for encryption.  A dot
       (..) means that it's marked as a signature key in one of the user IDs, but may

       The Mutt Next Generation E-Mail Client                                       19

       also be used for encryption.  The letter ee indicates that this key can be used
       for encryption.

       The second character indicates the key's signing capabilities.  Once again, a
       ``--'' implies ``not for signing'', ``..'' implies that the key is marked as an
       encryption key in one of the user-ids, and ``ss'' denotes a key which can be
       used for signing.

       Finally, the validity field (%t) indicates how well-certified a user-id is.  A
       question mark (??) indicates undefined validity, a minus character (--) marks an
       untrusted association, a space character means a partially trusted association,
       and a plus character (++) indicates complete validity.

       _2_._6_._5  _S_e_n_d_i_n_g _a_n_o_n_y_m_o_u_s _m_e_s_s_a_g_e_s _v_i_a _m_i_x_m_a_s_t_e_r

       You may also have configured mutt to co-operate with Mixmaster, an anonymous
       remailer.  Mixmaster permits you to send your messages anonymously using a
       chain of remailers. Mixmaster support in mutt is for mixmaster version 2.04
       (beta 45 appears to be the latest) and 2.03.  It does not support earlier ver-
       sions or the later so-called version 3 betas, of which the latest appears to be
       called 2.9b23.

       To use it, you'll have to obey certain restrictions.  Most important, you can-
       not use the Cc and Bcc headers.  To tell Mutt-ng to use mixmaster, you have to
       select a remailer chain, using the mix function on the compose menu.

       The chain selection screen is divided into two parts.  In the (larger) upper
       part, you get a list of remailers you may use.  In the lower part, you see the
       currently selected chain of remailers.

       You can navigate in the chain using the chain-prev and chain-next functions,
       which are by default bound to the left and right arrows and to the h and l keys
       (think vi keyboard bindings).  To insert a remailer at the current chain posi-
       tion, use the insert function.  To append a remailer behind the current chain
       position, use select-entry or append.  You can also delete entries from the
       chain, using the corresponding function.  Finally, to abandon your changes,
       leave the menu, or accept them pressing (by default) the Return key.

       Note that different remailers do have different capabilities, indicated in the
       %c entry of the remailer menu lines (see _$_m_i_x___e_n_t_r_y___f_o_r_m_a_t (section 6.4.139  ,
       page 113)).  Most important is the ``middleman'' capability, indicated by a
       capital ``M'': This means that the remailer in question cannot be used as the
       final element of a chain, but will only forward messages to other mixmaster
       remailers.  For details on the other capabilities, please have a look at the
       mixmaster documentation.

       _2_._7  _F_o_r_w_a_r_d_i_n_g _a_n_d _B_o_u_n_c_i_n_g _M_a_i_l

       The Mutt Next Generation E-Mail Client                                       20

       Often, it is necessary to forward mails to other people.  Therefore, mutt-ng
       supports forwarding messages in two different ways.

       The first one is regular forwarding, as you probably know it from other mail
       clients. You simply press f, enter the recipient email address, the subject of
       the forwarded email, and then you can edit the message to be forwarded in the
       editor. The forwarded message is separated from the rest of the message via the
       two following markers:

            ----- Forwarded message from Lucas User <luser@example.com> -----

            From: Lucas User <luser@example.com>
            Date: Thu, 02 Dec 2004 03:08:34 +0100
            To: Michael Random <mrandom@example.com>
            Subject: Re: blackmail

            Pay me EUR 50,000.- cash or your favorite stuffed animal will die
            a horrible death.

            ----- End forwarded message -----

       When you're done with editing the mail, save and quit the editor, and you will
       return to the compose menu, the same menu you also encounter when composing or
       replying to mails.

       The second mode of forwarding emails with mutt-ng is the so-called _b_o_u_n_c_i_n_g:
       when you bounce an email to another address, it will be sent in practically the
       same format you send it (except for headers that are created during transport-
       ing the message). To bounce a message, press b and enter the recipient email
       address. By default, you are then asked whether you really want to bounce the
       message to the specified recipient. If you answer with yes, the message will
       then be bounced.

       To the recipient, the bounced email will look as if he got it like a regular
       email where he was Bcc: recipient. The only possibility to find out whether it
       was a bounced email is to carefully study the email headers and to find out
       which host really sent the email.

       _2_._8  _P_o_s_t_p_o_n_i_n_g _M_a_i_l

       At times it is desirable to delay sending a message that you have already begun
       to compose.  When the _p_o_s_t_p_o_n_e_-_m_e_s_s_a_g_e function is used in the _c_o_m_p_o_s_e menu,
       the body of your message and attachments are stored in the mailbox specified by
       the _$_p_o_s_t_p_o_n_e_d (section 6.4.214  , page 132) variable.  This means that you can
       recall the message even if you exit Mutt-ng and then restart it at a later
       time.

       Once a message is postponed, there are several ways to resume it.  From the
       command line you can use the ``-p'' option, or if you _c_o_m_p_o_s_e a new message

       The Mutt Next Generation E-Mail Client                                       21

       from the _i_n_d_e_x or _p_a_g_e_r you will be prompted if postponed messages exist.  If
       multiple messages are currently postponed, the _p_o_s_t_p_o_n_e_d menu will pop up and
       you can select which message you would like to resume.

       NNoottee:: If you postpone a reply to a message, the reply setting of the message is
       only updated when you actually finish the message and send it.  Also, you must
       be in the same folder with the message you replied to for the status of the
       message to be updated.

       See also the _$_p_o_s_t_p_o_n_e (section 6.4.213  , page 132) quad-option.

       _3_.  _C_o_n_f_i_g_u_r_a_t_i_o_n

       _3_._1  _L_o_c_a_t_i_o_n_s _o_f _C_o_n_f_i_g_u_r_a_t_i_o_n _F_i_l_e_s

       While the default configuration (or ``preferences'') make Mutt-ng usable right
       out of the box, it is often desirable to tailor Mutt-ng to suit your own
       tastes. When Mutt-ng is first invoked, it will attempt to read the ``system''
       configuration file (defaults set by your local system administrator), unless
       the ``-n'' _c_o_m_m_a_n_d _l_i_n_e (section 6.1  , page 76) option is specified.  This
       file is typically /usr/local/share/muttng/Muttngrc or /etc/Muttngrc, Mutt-ng
       users will find this file in /usr/local/share/muttng/Muttrc or /etc/Muttngrc.
       Mutt will next look for a file named .muttrc in your home directory, Mutt-ng
       will look for .muttngrc.  If this file does not exist and your home directory
       has a subdirectory named .mutt, mutt try to load a file named .muttng/muttngrc.

       .muttrc (or .muttngrc for Mutt-ng) is the file where you will usually place
       your _c_o_m_m_a_n_d_s (section 6.3  , page 78) to configure Mutt-ng.

       _3_._2  _S_y_n_t_a_x _o_f _I_n_i_t_i_a_l_i_z_a_t_i_o_n _F_i_l_e_s

       An initialization file consists of a series of _c_o_m_m_a_n_d_s (section 6.3  , page
       78).  Each line of the file may contain one or more commands.  When multiple
       commands are used, they must be separated by a semicolon (;).

            set realname='Mutt-ng user' ; ignore x-

       The hash mark, or pound sign (``#''), is used as a ``comment'' character. You
       can use it to annotate your initialization file. All text after the comment
       character to the end of the line is ignored. For example,

            my_hdr X-Disclaimer: Why are you listening to me? # This is a comment

       Single quotes (') and double quotes (') can be used to quote strings which

       The Mutt Next Generation E-Mail Client                                       22

       contain spaces or other special characters.  The difference between the two
       types of quotes is similar to that of many popular shell programs, namely that
       a single quote is used to specify a literal string (one that is not interpreted
       for shell variables or quoting with a backslash [see next paragraph]), while
       double quotes indicate a string for which should be evaluated.  For example,
       backtics are evaluated inside of double quotes, but nnoott for single quotes.

       \ quotes the next character, just as in shells such as bash and zsh.  For exam-
       ple, if want to put quotes ``''' inside of a string, you can use ``\'' to force
       the next character to be a literal instead of interpreted character.

            set realname="Michael \"MuttDude\" Elkins"

       ``\\'' means to insert a literal ``\'' into the line.  ``\n'' and ``\r'' have
       their usual C meanings of linefeed and carriage-return, respectively.

       A \ at the end of a line can be used to split commands over multiple lines,
       provided that the split points don't appear in the middle of command names.

       Please note that, unlike the various shells, mutt-ng interprets a ``\'' at the
       end of a line also in comments. This allows you to disable a command split over
       multiple lines with only one ``#''.

            # folder-hook . \
              set realname="Michael \"MuttDude\" Elkins"

       When testing your config files, beware the following caveat. The backslash at
       the end of the commented line extends the current line with the next line -
       then referred to as a ``continuation line''.  As the first line is commented
       with a hash (#) all following continuation lines are also part of a comment and
       therefore are ignored, too. So take care of comments when continuation lines
       are involved within your setup files!

       Abstract example:

            line1\
            line2a # line2b\
            line3\
            line4
            line5

       line1 ``continues'' until line4. however, the part after the # is a comment
       which includes line3 and line4. line5 is a new line of its own and thus is
       interpreted again.

       It is also possible to substitute the output of a Unix command in an initial-
       ization file.  This is accomplished by enclosing the command in backquotes
       (``).  For example,

       The Mutt Next Generation E-Mail Client                                       23

            my_hdr X-Operating-System: `uname -a`

       The output of the Unix command ``uname -a'' will be substituted before the line
       is parsed.  Note that since initialization files are line oriented, only the
       first line of output from the Unix command will be substituted.

       UNIX environments can be accessed like the way it is done in shells like sh and
       bash: Prepend the name of the environment by a ``$''.  For example,

            set record=+sent_on_$HOSTNAME

       The commands understood by mutt are explained in the next paragraphs.  For a
       complete list, see the _c_o_m_m_a_n_d _r_e_f_e_r_e_n_c_e (section 6.3  , page 78).

       _3_._3  _D_e_f_i_n_i_n_g_/_U_s_i_n_g _a_l_i_a_s_e_s

       Usage: alias _k_e_y _a_d_d_r_e_s_s [ , _a_d_d_r_e_s_s, ... ]

       It's usually very cumbersome to remember or type out the address of someone you
       are communicating with.  Mutt-ng allows you to create ``aliases'' which map a
       short string to a full address.

       NNoottee:: if you want to create an alias for a group (by specifying more than one
       address), you mmuusstt separate the addresses with a comma (``,'').

       To remove an alias or aliases (``*'' means all aliases):

       unalias [ * | _k_e_y _._._. ]

            alias muttdude me@cs.hmc.edu (Michael Elkins)
            alias theguys manny, moe, jack

       Unlike other mailers, Mutt-ng doesn't require aliases to be defined in a spe-
       cial file.  The alias command can appear anywhere in a configuration file, as
       long as this file is _s_o_u_r_c_e_d (section 3.28  , page 42).  Consequently, you can
       have multiple alias files, or you can have all aliases defined in your muttrc.

       On the other hand, the _c_r_e_a_t_e_-_a_l_i_a_s (section 2.5.4  , page 11) function can use
       only one file, the one pointed to by the _$_a_l_i_a_s___f_i_l_e (section 6.4.3  , page 80)
       variable (which is ~/.muttrc by default). This file is not special either, in
       the sense that Mutt-ng will happily append aliases to any file, but in order
       for the new aliases to take effect you need to explicitly _s_o_u_r_c_e (section
       3.28  , page 42) this file too.

       For example:

       The Mutt Next Generation E-Mail Client                                       24

            source /usr/local/share/Mutt-ng.aliases
            source ~/.mail_aliases
            set alias_file=~/.mail_aliases

       To use aliases, you merely use the alias at any place in mutt where mutt
       prompts for addresses, such as the _T_o_: or _C_c_: prompt.  You can also enter
       aliases in your editor at the appropriate headers if you have the _$_e_d_i_t___h_e_a_d_e_r_s
       (section 6.4.54  , page 92) variable set.

       In addition, at the various address prompts, you can use the tab character to
       expand a partial alias to the full alias.  If there are multiple matches, mutt
       will bring up a menu with the matching aliases.  In order to be presented with
       the full list of aliases, you must hit tab with out a partial alias, such as at
       the beginning of the prompt or after a comma denoting multiple addresses.

       In the alias menu, you can select as many aliases as you want with the _s_e_l_e_c_t_-
       _e_n_t_r_y key (default: RET), and use the _e_x_i_t key (default: q) to return to the
       address prompt.

       _3_._4  _C_h_a_n_g_i_n_g _t_h_e _d_e_f_a_u_l_t _k_e_y _b_i_n_d_i_n_g_s

       Usage: bind _m_a_p _k_e_y _f_u_n_c_t_i_o_n

       This command allows you to change the default key bindings (operation invoked
       when pressing a key).

       _m_a_p specifies in which menu the binding belongs.  Multiple maps may be speci-
       fied by separating them with commas (no additional whitespace is allowed). The
       currently defined maps are:

             generic
                   This is not a real menu, but is used as a fallback for all of the
                   other menus except for the pager and editor modes.  If a key is not
                   defined in another menu, Mutt-ng will look for a binding to use in
                   this menu.  This allows you to bind a key to a certain function in
                   multiple menus instead of having multiple bind statements to accom-
                   plish the same task.

             alias
                   The alias menu is the list of your personal aliases as defined in
                   your muttrc.  It is the mapping from a short alias name to the full
                   email address(es) of the recipient(s).

             attach
                   The attachment menu is used to access the attachments on received
                   messages.

             browser
                   The browser is used for both browsing the local directory

       The Mutt Next Generation E-Mail Client                                       25

                   structure, and for listing all of your incoming mailboxes.

             editor
                   The editor is the line-based editor the user enters text data.

             index
                   The index is the list of messages contained in a mailbox.

             compose
                   The compose menu is the screen used when sending a new message.

             pager
                   The pager is the mode used to display message/attachment data, and
                   help listings.

             pgp
                   The pgp menu is used to select the OpenPGP keys used for encrypting
                   outgoing messages.

             postpone
                   The postpone menu is similar to the index menu, except is used when
                   recalling a message the user was composing, but saved until later.

       _k_e_y is the key (or key sequence) you wish to bind.  To specify a control char-
       acter, use the sequence _\_C_x, where _x is the letter of the control character
       (for example, to specify control-A use ``\Ca'').  Note that the case of _x as
       well as _\_C is ignored, so that _\_C_A, _\_C_a, _\_c_A and _\_c_a are all equivalent.  An
       alternative form is to specify the key as a three digit octal number prefixed
       with a ``\'' (for example _\_1_7_7 is equivalent to _\_c_?).

       In addition, _k_e_y may consist of:

       The Mutt Next Generation E-Mail Client                                       26

            \t              tab
            <tab>           tab
            <backtab>       backtab / shift-tab
            \r              carriage return
            \n              newline
            \e              escape
            <esc>           escape
            <up>            up arrow
            <down>          down arrow
            <left>          left arrow
            <right>         right arrow
            <pageup>        Page Up
            <pagedown>      Page Down
            <backspace>     Backspace
            <delete>        Delete
            <insert>        Insert
            <enter>         Enter
            <return>        Return
            <home>          Home
            <end>           End
            <space>         Space bar
            <f1>            function key 1
            <f10>           function key 10

       _k_e_y does not need to be enclosed in quotes unless it contains a space (`` '').

       _f_u_n_c_t_i_o_n specifies which action to take when _k_e_y is pressed.  For a complete
       list of functions, see the _r_e_f_e_r_e_n_c_e (section 6.5  , page 164).  The special
       function noop unbinds the specified key sequence.

       _3_._5  _D_e_f_i_n_i_n_g _a_l_i_a_s_e_s _f_o_r _c_h_a_r_a_c_t_e_r _s_e_t_s

       Usage: charset-hook _a_l_i_a_s _c_h_a_r_s_e_t

       Usage: iconv-hook _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t

       The charset-hook command defines an alias for a character set.  This is useful
       to properly display messages which are tagged with a character set name not
       known to mutt.

       The iconv-hook command defines a system-specific name for a character set.
       This is helpful when your systems character conversion library insists on using
       strange, system-specific names for character sets.

       _3_._6  _S_e_t_t_i_n_g _v_a_r_i_a_b_l_e_s _b_a_s_e_d _u_p_o_n _m_a_i_l_b_o_x

       Usage: folder-hook [!]_r_e_g_e_x_p _c_o_m_m_a_n_d

       It is often desirable to change settings based on which mailbox you are

       The Mutt Next Generation E-Mail Client                                       27

       reading.  The folder-hook command provides a method by which you can execute
       any configuration command.  _r_e_g_e_x_p is a regular expression specifying in which
       mailboxes to execute _c_o_m_m_a_n_d before loading.  If a mailbox matches multiple
       folder-hook's, they are executed in the order given in the muttrc.

       NNoottee:: if you use the ``!'' shortcut for _$_s_p_o_o_l_f_i_l_e (section 6.4.296  , page
       151) at the beginning of the pattern, you must place it inside of double or
       single quotes in order to distinguish it from the logical _n_o_t operator for the
       expression.

       Note that the settings are _n_o_t restored when you leave the mailbox.  For exam-
       ple, a command action to perform is to change the sorting method based upon the
       mailbox being read:

            folder-hook mutt set sort=threads

       However, the sorting method is not restored to its previous value when reading
       a different mailbox.  To specify a _d_e_f_a_u_l_t command, use the pattern ``.'':

            folder-hook . set sort=date-sent

       _3_._7  _K_e_y_b_o_a_r_d _m_a_c_r_o_s

       Usage: macro _m_e_n_u _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]

       Macros are useful when you would like a single key to perform a series of
       actions.  When you press _k_e_y in menu _m_e_n_u, Mutt-ng will behave as if you had
       typed _s_e_q_u_e_n_c_e.  So if you have a common sequence of commands you type, you can
       create a macro to execute those commands with a single key.

       _m_e_n_u is the _m_a_p (section 3.4  , page 24) which the macro will be bound.  Multi-
       ple maps may be specified by separating multiple menu arguments by commas.
       Whitespace may not be used in between the menu arguments and the commas sepa-
       rating them.

       _k_e_y and _s_e_q_u_e_n_c_e are expanded by the same rules as the _k_e_y _b_i_n_d_i_n_g_s (section
       3.4  , page 24).  There are some additions however.  The first is that control
       characters in _s_e_q_u_e_n_c_e can also be specified as _^_x.  In order to get a caret
       (`^'') you need to use _^_^.  Secondly, to specify a certain key such as _u_p or to
       invoke a function directly, you can use the format _<_k_e_y _n_a_m_e_> and _<_f_u_n_c_t_i_o_n
       _n_a_m_e_>.  For a listing of key names see the section on _k_e_y _b_i_n_d_i_n_g_s (section
       3.4  , page 24).  Functions are listed in the _f_u_n_c_t_i_o_n _r_e_f_e_r_e_n_c_e (section
       6.5  , page 164).

       The advantage with using function names directly is that the macros will work
       regardless of the current key bindings, so they are not dependent on the user
       having particular key definitions.  This makes them more robust and portable,
       and also facilitates defining of macros in files used by more than one user

       The Mutt Next Generation E-Mail Client                                       28

       (eg. the system Muttngrc).

       Optionally you can specify a descriptive text after _s_e_q_u_e_n_c_e, which is shown in
       the help screens.

       NNoottee:: Macro definitions (if any) listed in the help screen(s), are silently
       truncated at the screen width, and are not wrapped.

       _3_._8  _U_s_i_n_g _c_o_l_o_r _a_n_d _m_o_n_o _v_i_d_e_o _a_t_t_r_i_b_u_t_e_s

       Usage: color _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d [ _r_e_g_e_x_p ]

       Usage: color index _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _p_a_t_t_e_r_n

       Usage: uncolor index _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...  ]

       If your terminal supports color, you can spice up Mutt-ng by creating your own
       color scheme.  To define the color of an object (type of information), you must
       specify both a foreground color aanndd a background color (it is not possible to
       only specify one or the other).

       _o_b_j_e_c_t can be one of:

          +o attachment

          +o body (match _r_e_g_e_x_p in the body of messages)

          +o bold (highlighting bold patterns in the body of messages)

          +o error (error messages printed by Mutt-ng)

          +o header (match _r_e_g_e_x_p in the message header)

          +o hdrdefault (default color of the message header in the pager)

          +o index (match _p_a_t_t_e_r_n in the message index)

          +o indicator (arrow or bar used to indicate the current item in a menu)

          +o markers (the ``+'' markers at the beginning of wrapped lines in the pager)

          +o message (informational messages)

          +o normal

          +o quoted (text matching _$_q_u_o_t_e___r_e_g_e_x_p (section 6.4.225  , page 134) in the
            body of a message)

          +o quoted1, quoted2, ..., quotedNN (higher levels of quoting)

          +o search (highlighting of words in the pager)

       The Mutt Next Generation E-Mail Client                                       29

          +o signature

          +o status (mode lines used to display info about the mailbox or message)

          +o tilde (the ``~'' used to pad blank lines in the pager)

          +o tree (thread tree drawn in the message index and attachment menu)

          +o underline (highlighting underlined patterns in the body of messages)

       _f_o_r_e_g_r_o_u_n_d and _b_a_c_k_g_r_o_u_n_d can be one of the following:

          +o white

          +o black

          +o green

          +o magenta

          +o blue

          +o cyan

          +o yellow

          +o red

          +o default

          +o color_x

       _f_o_r_e_g_r_o_u_n_d can optionally be prefixed with the keyword bright to make the fore-
       ground color boldfaced (e.g., brightred).

       If your terminal supports it, the special keyword _d_e_f_a_u_l_t can be used as a
       transparent color.  The value _b_r_i_g_h_t_d_e_f_a_u_l_t is also valid.  If Mutt-ng is
       linked against the _S_-_L_a_n_g library, you also need to set the _C_O_L_O_R_F_G_B_G environ-
       ment variable to the default colors of your terminal for this to work; for
       example (for Bourne-like shells):

            set COLORFGBG="green;black"
            export COLORFGBG

       NNoottee:: The _S_-_L_a_n_g library requires you to use the _l_i_g_h_t_g_r_a_y and _b_r_o_w_n keywords
       instead of _w_h_i_t_e and _y_e_l_l_o_w when setting this variable.

       NNoottee:: The uncolor command can be applied to the index object only.  It removes
       entries from the list. You mmuusstt specify the same pattern specified in the color
       command for it to be removed.  The pattern ``*'' is a special token which means
       to clear the color index list of all entries.

       The Mutt Next Generation E-Mail Client                                       30

       Mutt-ng also recognizes the keywords _c_o_l_o_r_0, _c_o_l_o_r_1, ..., _c_o_l_o_rNN--11 (NN being the
       number of colors supported by your terminal).  This is useful when you remap
       the colors for your display (for example by changing the color associated with
       _c_o_l_o_r_2 for your xterm), since color names may then lose their normal meaning.

       If your terminal does not support color, it is still possible change the video
       attributes through the use of the ``mono'' command:

       Usage: mono _<_o_b_j_e_c_t_> _<_a_t_t_r_i_b_u_t_e_> [ _r_e_g_e_x_p ]

       Usage: mono index _a_t_t_r_i_b_u_t_e _p_a_t_t_e_r_n

       Usage: unmono index _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...  ]

       where _a_t_t_r_i_b_u_t_e is one of the following:

          +o none

          +o bold

          +o underline

          +o reverse

          +o standout

       _3_._9  _I_g_n_o_r_i_n_g _(_w_e_e_d_i_n_g_) _u_n_w_a_n_t_e_d _m_e_s_s_a_g_e _h_e_a_d_e_r_s

       Usage: [un]ignore _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

       Messages often have many header fields added by automatic processing systems,
       or which may not seem useful to display on the screen.  This command allows you
       to specify header fields which you don't normally want to see.

       You do not need to specify the full header field name.  For example, ``ignore
       content-'' will ignore all header fields that begin with the pattern ``con-
       tent-''. ``ignore *'' will ignore all headers.

       To remove a previously added token from the list, use the ``unignore'' command.
       The ``unignore'' command will make Mutt-ng display headers with the given pat-
       tern.  For example, if you do ``ignore x-'' it is possible to ``unignore x-
       mailer''.

       ``unignore *'' will remove all tokens from the ignore list.

       For example:

            # Sven's draconian header weeding
            ignore *
            unignore from date subject to cc
            unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
            unignore posted-to:

       The Mutt Next Generation E-Mail Client                                       31

       _3_._1_0  _A_l_t_e_r_n_a_t_i_v_e _a_d_d_r_e_s_s_e_s

       Usage: [un]alternates _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

       With various functions, mutt will treat messages differently, depending on
       whether you sent them or whether you received them from someone else.  For
       instance, when replying to a message that you sent to a different party, mutt
       will automatically suggest to send the response to the original message's
       recipients -- responding to yourself won't make much sense in many cases.  (See
       _$_r_e_p_l_y___t_o (section 6.4.233  , page 136).)

       Many users receive e-mail under a number of different addresses. To fully use
       mutt's features here, the program must be able to recognize what e-mail
       addresses you receive mail under. That's the purpose of the alternates command:
       It takes a list of regular expressions, each of which can identify an address
       under which you receive e-mail.

       The unalternates command can be used to write exceptions to alternates pat-
       terns. If an address matches something in an alternates command, but you none-
       theless do not think it is from you, you can list a more precise pattern under
       an unalternates command.

       To remove a regular expression from the alternates list, use the unalternates
       command with exactly the same _r_e_g_e_x_p.  Likewise, if the _r_e_g_e_x_p for a alternates
       command matches an entry on the unalternates list, that unalternates entry will
       be removed. If the _r_e_g_e_x_p for unalternates is ``*'', _a_l_l _e_n_t_r_i_e_s on alternates
       will be removed.

       _3_._1_1  _F_o_r_m_a_t _= _F_l_o_w_e_d

       Mutt-ng contains support for so-called format=flowed messages.  In the begin-
       ning of email, each message had a fixed line width, and it was enough for dis-
       playing them on fixed-size terminals. But times changed, and nowadays hardly
       anybody still uses fixed-size terminals: more people nowaydays use graphical
       user interfaces, with dynamically resizable windows. This led to the demand of
       a new email format that makes it possible for the email client to make the
       email look nice in a resizable window without breaking quoting levels and cre-
       ating an incompatible email format that can also be displayed nicely on old
       fixed-size terminals.

       For introductory information on format=flowed messages, see
       <http://www.joeclark.org/ffaq.html>.

       When you receive emails that are marked as format=flowed messages, and is for-
       matted correctly, mutt-ng will try to reformat the message to optimally fit on
       your terminal. If you want a fixed margin on the right side of your terminal,
       you can set the following:

            set wrapmargin = 10

       The Mutt Next Generation E-Mail Client                                       32

       The code above makes the line break 10 columns before the right side of the
       terminal.

       If your terminal is so wide that the lines are embarrassingly long, you can
       also set a maximum line length:

            set max_line_length = 120

       The example above will give you lines not longer than 120 characters.

       When you view at format=flowed messages, you will often see the quoting hierar-
       chy like in the following example:

            >Bill, can you please send last month's progress report to Mr.
            >Morgan? We also urgently need the cost estimation for the new
            >production server that we want to set up before our customer's
            >project will go live.

       This obviously doesn't look very nice, and it makes it very hard to differenti-
       ate between text and quoting character. The solution is to configure mutt-ng to
       "stuff" the quoting:

            set stuff_quoted

       This will lead to a nicer result that is easier to read:

            > Bill, can you please send last month's progress report to Mr.
            > Morgan? We also urgently need the cost estimation for the new
            > production server that we want to set up before our customer's
            > project will go live.

       If you want mutt-ng to send emails with format=flowed set, you need to explic-
       itly set it:

            set text_flowed

       Additionally, you have to use an editor which supports writing format=flowed-
       conforming emails. For vim, this is done by adding w to the formatoptions (see
       :h formatoptions and :h fo-table) when writing emails.

       _3_._1_2  _M_a_i_l_i_n_g _l_i_s_t_s

       The Mutt Next Generation E-Mail Client                                       33

       Usage: [un]lists _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

       Usage: [un]subscribe _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

       Mutt-ng has a few nice features for _h_a_n_d_l_i_n_g _m_a_i_l_i_n_g _l_i_s_t_s (section 4.10  ,
       page 57).  In order to take advantage of them, you must specify which addresses
       belong to mailing lists, and which mailing lists you are subscribed to.  Once
       you have done this, the _l_i_s_t_-_r_e_p_l_y (section 2.5.4  , page 12) function will
       work for all known lists.  Additionally, when you send a message to a sub-
       scribed list, mutt will add a Mail-Followup-To header to tell other users' mail
       user agents not to send copies of replies to your personal address.   Note that
       the Mail-Followup-To header is a non-standard extension which is not supported
       by all mail user agents.  Adding it is not bullet-proof against receiving per-
       sonal CCs of list messages.  Also note that the generation of the Mail-Fol-
       lowup-To header is controlled by the _$_f_o_l_l_o_w_u_p___t_o (section 6.4.66  , page 95)
       configuration variable.

       More precisely, Mutt-ng maintains lists of patterns for the addresses of known
       and subscribed mailing lists.  Every subscribed mailing list is known. To mark
       a mailing list as known, use the ``lists'' command.  To mark it as subscribed,
       use ``subscribe''.

       You can use regular expressions with both commands.  To mark all messages sent
       to a specific bug report's address on mutt's bug tracking system as list mail,
       for instance, you could say ``subscribe [0-9]*@bugs.guug.de''.  Often, it's
       sufficient to just give a portion of the list's e-mail address.

       Specify as much of the address as you need to to remove ambiguity.  For exam-
       ple, if you've subscribed to the Mutt-ng mailing list, you will receive mail
       addressed to _m_u_t_t_-_u_s_e_r_s_@_m_u_t_t_._o_r_g.  So, to tell Mutt-ng that this is a mailing
       list, you could add ``lists mutt-users'' to your initialization file.  To tell
       mutt that you are subscribed to it, add ``subscribe mutt-users'' to your ini-
       tialization file instead.  If you also happen to get mail from someone whose
       address is _m_u_t_t_-_u_s_e_r_s_@_e_x_a_m_p_l_e_._c_o_m, you could use ``lists mutt-
       users@mutt\\.org'' or ``subscribe mutt-users@mutt\\.org'' to match only mail
       from the actual list.

       The ``unlists'' command is used to remove a token from the list of known and
       subscribed mailing-lists. Use ``unlists *'' to remove all tokens.

       To remove a mailing list from the list of subscribed mailing lists, but keep it
       on the list of known mailing lists, use ``unsubscribe''.

       _3_._1_3  _U_s_i_n_g _M_u_l_t_i_p_l_e _s_p_o_o_l _m_a_i_l_b_o_x_e_s

       Usage: mbox-hook [!]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

       This command is used to move read messages from a specified mailbox to a dif-
       ferent mailbox automatically when you quit or change folders.  _p_a_t_t_e_r_n is a
       regular expression specifying the mailbox to treat as a ``spool'' mailbox and
       _m_a_i_l_b_o_x specifies where mail should be saved when read.

       The Mutt Next Generation E-Mail Client                                       34

       Unlike some of the other _h_o_o_k commands, only the _f_i_r_s_t matching pattern is used
       (it is not possible to save read mail in more than a single mailbox).

       _3_._1_4  _D_e_f_i_n_i_n_g _m_a_i_l_b_o_x_e_s _w_h_i_c_h _r_e_c_e_i_v_e _m_a_i_l

       Usage: [un]mailboxes [!]_f_i_l_e_n_a_m_e [ _f_i_l_e_n_a_m_e ... ]

       This command specifies folders which can receive mail and which will be checked
       for new messages.  By default, the main menu status bar displays how many of
       these folders have new messages.

       When changing folders, pressing _s_p_a_c_e will cycle through folders with new mail.

       Pressing TAB in the directory browser will bring up a menu showing the files
       specified by the mailboxes command, and indicate which contain new messages.
       Mutt-ng will automatically enter this mode when invoked from the command line
       with the -y option.

       The ``unmailboxes'' command is used to remove a token from the list of folders
       which receive mail. Use ``unmailboxes *'' to remove all tokens.

       NNoottee:: new mail is detected by comparing the last modification time to the last
       access time.  Utilities like biff or frm or any other program which accesses
       the mailbox might cause Mutt-ng to never detect new mail for that mailbox if
       they do not properly reset the access time.  Backup tools are another common
       reason for updated access times.

       NNoottee:: the filenames in the mailboxes command are resolved when the command is
       executed, so if these names contain _s_h_o_r_t_c_u_t _c_h_a_r_a_c_t_e_r_s (section 4.9  , page
       56) (such as ``='' and ``!''), any variable definition that affect these char-
       acters (like _$_f_o_l_d_e_r (section 6.4.64  , page 94) and _$_s_p_o_o_l_f_i_l_e (section
       6.4.296  , page 151)) should be executed before the mailboxes command.

       _3_._1_5  _U_s_e_r _d_e_f_i_n_e_d _h_e_a_d_e_r_s

       Usage:

       my_hdr _s_t_r_i_n_g

       unmy_hdr _f_i_e_l_d [ _f_i_e_l_d ... ]

       The ``my_hdr'' command allows you to create your own header fields which will
       be added to every message you send.

       For example, if you would like to add an ``Organization:'' header field to all
       of your outgoing messages, you can put the command

            my_hdr Organization: A Really Big Company, Anytown, USA

       The Mutt Next Generation E-Mail Client                                       35

       in your .muttrc.

       NNoottee::  space characters are _n_o_t allowed between the keyword and the colon
       (``:'').  The standard for electronic mail (RFC822) says that space is illegal
       there, so Mutt-ng enforces the rule.

       If you would like to add a header field to a single message, you should either
       set the _e_d_i_t___h_e_a_d_e_r_s (section 6.4.54  , page 92) variable, or use the _e_d_i_t_-
       _h_e_a_d_e_r_s function (default: ``E'') in the send-menu so that you can edit the
       header of your message along with the body.

       To remove user defined header fields, use the ``unmy_hdr'' command.  You may
       specify an asterisk (``*'') to remove all header fields, or the fields to
       remove.  For example, to remove all ``To'' and ``Cc'' header fields, you could
       use:

            unmy_hdr to cc

       _3_._1_6  _D_e_f_i_n_i_n_g _t_h_e _o_r_d_e_r _o_f _h_e_a_d_e_r_s _w_h_e_n _v_i_e_w_i_n_g _m_e_s_s_a_g_e_s

       Usage: hdr_order _h_e_a_d_e_r_1 _h_e_a_d_e_r_2 _h_e_a_d_e_r_3

       With this command, you can specify an order in which mutt will attempt to
       present headers to you when viewing messages.

       ``unhdr_order *'' will clear all previous headers from the order list, thus
       removing the header order effects set by the system-wide startup file.

            hdr_order From Date: From: To: Cc: Subject:

       _3_._1_7  _S_p_e_c_i_f_y _d_e_f_a_u_l_t _s_a_v_e _f_i_l_e_n_a_m_e

       Usage: save-hook [!]_p_a_t_t_e_r_n _f_i_l_e_n_a_m_e

       This command is used to override the default filename used when saving mes-
       sages.  _f_i_l_e_n_a_m_e will be used as the default filename if the message is _F_r_o_m_:
       an address matching _r_e_g_e_x_p or if you are the author and the message is
       addressed _t_o_: something matching _r_e_g_e_x_p.

       See _M_e_s_s_a_g_e _M_a_t_c_h_i_n_g _i_n _H_o_o_k_s (section 4.5.1  , page 53) for information on the
       exact format of _p_a_t_t_e_r_n.

       Examples:

            save-hook me@(turing\\.)?cs\\.hmc\\.edu$ +elkins

       The Mutt Next Generation E-Mail Client                                       36

            save-hook aol\\.com$ +spam

       Also see the _f_c_c_-_s_a_v_e_-_h_o_o_k (section 3.19  , page 36) command.

       _3_._1_8  _S_p_e_c_i_f_y _d_e_f_a_u_l_t _F_c_c_: _m_a_i_l_b_o_x _w_h_e_n _c_o_m_p_o_s_i_n_g

       Usage: fcc-hook [!]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

       This command is used to save outgoing mail in a mailbox other than _$_r_e_c_o_r_d
       (section 6.4.230  , page 136).  Mutt-ng searches the initial list of message
       recipients for the first matching _r_e_g_e_x_p and uses _m_a_i_l_b_o_x as the default Fcc:
       mailbox.  If no match is found the message will be saved to _$_r_e_c_o_r_d (section
       6.4.230  , page 136) mailbox.

       See _M_e_s_s_a_g_e _M_a_t_c_h_i_n_g _i_n _H_o_o_k_s (section 4.5.1  , page 53) for information on the
       exact format of _p_a_t_t_e_r_n.

       Example: fcc-hook [@.]aol\\.com$ +spammers

       The above will save a copy of all messages going to the aol.com domain to the
       `+spammers' mailbox by default.  Also see the _f_c_c_-_s_a_v_e_-_h_o_o_k (section 3.19  ,
       page 36) command.

       _3_._1_9  _S_p_e_c_i_f_y _d_e_f_a_u_l_t _s_a_v_e _f_i_l_e_n_a_m_e _a_n_d _d_e_f_a_u_l_t _F_c_c_: _m_a_i_l_b_o_x _a_t _o_n_c_e

       Usage: fcc-save-hook [!]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

       This command is a shortcut, equivalent to doing both a _f_c_c_-_h_o_o_k (section
       3.18  , page 35) and a _s_a_v_e_-_h_o_o_k (section 3.17  , page 35) with its arguments.

       _3_._2_0  _C_h_a_n_g_e _s_e_t_t_i_n_g_s _b_a_s_e_d _u_p_o_n _m_e_s_s_a_g_e _r_e_c_i_p_i_e_n_t_s

       Usage: reply-hook [!]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

       Usage: send-hook [!]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

       Usage: send2-hook [!]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

       These commands can be used to execute arbitrary configuration commands based
       upon recipients of the message.  _p_a_t_t_e_r_n is a regular expression matching the
       desired address.  _c_o_m_m_a_n_d is executed when _r_e_g_e_x_p matches recipients of the
       message.

       reply-hook is matched against the message you are _r_e_p_l_y_i_n_g ttoo, instead of the
       message you are _s_e_n_d_i_n_g.  send-hook is matched against all messages, both _n_e_w
       and _r_e_p_l_i_e_s.  NNoottee:: reply-hooks are matched bbeeffoorree the send-hook, rreeggaarrddlleessss of
       the order specified in the users's configuration file.

       The Mutt Next Generation E-Mail Client                                       37

       send2-hook is matched every time a message is changed, either by editing it, or
       by using the compose menu to change its recipients or subject.  send2-hook is
       executed after send-hook, and can, e.g., be used to set parameters such as the
       _$_s_e_n_d_m_a_i_l (section 6.4.247  , page 140) variable depending on the message's
       sender address.

       For each type of send-hook or reply-hook, when multiple matches occur, commands
       are executed in the order they are specified in the muttrc (for that type of
       hook).

       See _M_e_s_s_a_g_e _M_a_t_c_h_i_n_g _i_n _H_o_o_k_s (section 4.5.1  , page 53) for information on the
       exact format of _p_a_t_t_e_r_n.

       Example: send-hook mutt 'set mime_forward signature='''

       Another typical use for this command is to change the values of the _$_a_t_t_r_i_b_u_-
       _t_i_o_n (section 6.4.15  , page 84), _$_s_i_g_n_a_t_u_r_e (section 6.4.259  , page 143) and
       _$_l_o_c_a_l_e (section 6.4.114  , page 108) variables in order to change the language
       of the attributions and signatures based upon the recipients.

       NNoottee:: the send-hook's are only executed ONCE after getting the initial list of
       recipients.  Adding a recipient after replying or editing the message will NOT
       cause any send-hook to be executed.  Also note that my_hdr commands which mod-
       ify recipient headers, or the message's subject, don't have any effect on the
       current message when executed from a send-hook.

       _3_._2_1  _C_h_a_n_g_e _s_e_t_t_i_n_g_s _b_e_f_o_r_e _f_o_r_m_a_t_t_i_n_g _a _m_e_s_s_a_g_e

       Usage: message-hook [!]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

       This command can be used to execute arbitrary configuration commands before
       viewing or formatting a message based upon information about the message.  _c_o_m_-
       _m_a_n_d is executed if the _p_a_t_t_e_r_n matches the message to be displayed. When mul-
       tiple matches occur, commands are executed in the order they are specified in
       the muttrc.

       See _M_e_s_s_a_g_e _M_a_t_c_h_i_n_g _i_n _H_o_o_k_s (section 4.5.1  , page 53) for information on the
       exact format of _p_a_t_t_e_r_n.

       Example:

            message-hook ~A 'set pager=builtin'
            message-hook '~f freshmeat-news' 'set pager="less \"+/^  subject: .*\""'

       _3_._2_2  _C_h_o_o_s_i_n_g _t_h_e _c_r_y_p_t_o_g_r_a_p_h_i_c _k_e_y _o_f _t_h_e _r_e_c_i_p_i_e_n_t

       Usage: crypt-hook _p_a_t_t_e_r_n _k_e_y_i_d

       When encrypting messages with PGP or OpenSSL, you may want to associate a

       The Mutt Next Generation E-Mail Client                                       38

       certain key with a given e-mail address automatically, either because the
       recipient's public key can't be deduced from the destination address, or
       because, for some reasons, you need to override the key Mutt-ng would normally
       use.  The crypt-hook command provides a method by which you can specify the ID
       of the public key to be used when encrypting messages to a certain recipient.

       The meaning of "key id" is to be taken broadly in this context:  You can either
       put a numerical key ID here, an e-mail address, or even just a real name.

       _3_._2_3  _A_d_d_i_n_g _k_e_y _s_e_q_u_e_n_c_e_s _t_o _t_h_e _k_e_y_b_o_a_r_d _b_u_f_f_e_r

       Usage: push _s_t_r_i_n_g

       This command adds the named string to the keyboard buffer. The string may con-
       tain control characters, key names and function names like the sequence string
       in the _m_a_c_r_o (section 3.7  , page 27) command. You may use it to automatically
       run a sequence of commands at startup, or when entering certain folders.

       _3_._2_4  _E_x_e_c_u_t_i_n_g _f_u_n_c_t_i_o_n_s

       Usage: exec _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ... ]

       This command can be used to execute any function. Functions are listed in the
       _f_u_n_c_t_i_o_n _r_e_f_e_r_e_n_c_e (section 6.5  , page 164).  ``exec function'' is equivalent
       to ``push <function>''.

       _3_._2_5  _M_e_s_s_a_g_e _S_c_o_r_i_n_g

       Usage: score _p_a_t_t_e_r_n _v_a_l_u_e

       Usage: unscore _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

       In situations where you have to cope with a lot of emails, e.g.  when you read
       many different mailing lists, and take part in discussions, it is always useful
       to have the important messages marked and the annoying messages or the ones
       that you aren't interested in deleted. For this purpose, mutt-ng features a
       mechanism called ``scoring''.

       When you use scoring, every message has a base score of 0. You can then use the
       score command to define patterns and a positive or negative value associated
       with it. When a pattern matches a message, the message's score will be raised
       or lowered by the amount of the value associated with the pattern.

            score "~f nion@muttng\.org" 50
            score "~f @sco\.com" -100

       The Mutt Next Generation E-Mail Client                                       39

       If the pattern matches, it is also possible to set the score value of the cur-
       rent message to a certain value and then stop evaluation:

            score "~f santaclaus@northpole\.int" =666

       What is important to note is that negative score values will be rounded up to
       0.

       To make scoring actually useful, the score must be applied in some way.  That's
       what the _s_c_o_r_e _t_h_r_e_s_h_o_l_d_s are for. Currently, there are three score thresholds:

          +o flag threshold: when a message has a score value equal or higher than the
            flag threshold, it will be flagged.

          +o read threshold: when a message has a score value equal or lower than the
            read threshold, it will be marked as read.

          +o delete threshold: when a message has a score value equal or lower than the
            delete threshold, it will be marked as deleted.

       These three thresholds can be set via the variables _$_s_c_o_r_e___t_h_r_e_s_h_o_l_d___f_l_a_g (sec-
       tion 6.4.244  , page 139), _$_s_c_o_r_e___t_h_r_e_s_h_o_l_d___r_e_a_d (section 6.4.245  , page 139),
       _$_s_c_o_r_e___t_h_r_e_s_h_o_l_d___d_e_l_e_t_e (section 6.4.243  , page 139) and.  By default,
       _$_s_c_o_r_e___t_h_r_e_s_h_o_l_d___r_e_a_d (section 6.4.245  , page 139) and _$_s_c_o_r_e___t_h_r_e_s_h_o_l_d___d_e_l_e_t_e
       (section 6.4.243  , page 139) are set to -1, which means that in the default
       threshold configuration no message will ever get marked as read or deleted.

       Scoring gets especially interesting when combined with the color command and
       the ~n pattern:

            color   black   yellow  "~n 10-"
            color   red     yellow  "~n 100-"

       The rules above mark all messages with a score between 10 and 99 with black and
       yellow, and messages with a score greater or equal 100 with red and yellow.
       This might be unusual to you if you're used to e.g. slrn's scoring mechanism,
       but it is more flexible, as it visually marks different scores.

       _3_._2_6  _S_p_a_m _d_e_t_e_c_t_i_o_n

       Usage: spam _p_a_t_t_e_r_n _f_o_r_m_a_t

       Usage: nospam _p_a_t_t_e_r_n

       Mutt-ng has generalized support for external spam-scoring filters.  By defining
       your spam patterns with the spam and nospam commands, you can _l_i_m_i_t, _s_e_a_r_c_h,
       and _s_o_r_t your mail based on its spam attributes, as determined by the external
       filter. You also can display the spam attributes in your index display using

       The Mutt Next Generation E-Mail Client                                       40

       the %H selector in the _$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105) variable.
       (Tip: try %?H?[%H] ?  to display spam tags only when they are defined for a
       given message.)

       Your first step is to define your external filter's spam patterns using the
       spam command. _p_a_t_t_e_r_n should be a regular expression that matches a header in a
       mail message. If any message in the mailbox matches this regular expression, it
       will receive a ``spam tag'' or ``spam attribute'' (unless it also matches a
       nospam pattern -- see below.) The appearance of this attribute is entirely up
       to you, and is governed by the _f_o_r_m_a_t parameter. _f_o_r_m_a_t can be any static text,
       but it also can include back-references from the _p_a_t_t_e_r_n expression. (A regular
       expression ``back-reference'' refers to a sub-expression contained within
       parentheses.) %1 is replaced with the first back-reference in the regex, %2
       with the second, etc.

       If you're using multiple spam filters, a message can have more than one spam-
       related header. You can define spam patterns for each filter you use. If a mes-
       sage matches two or more of these patterns, and the $spam_separator variable is
       set to a string, then the message's spam tag will consist of all the _f_o_r_m_a_t
       strings joined together, with the value of $spam_separator separating them.

       For example, suppose I use DCC, SpamAssassin, and PureMessage. I might define
       these spam settings:

            spam "X-DCC-.*-Metrics:.*(....)=many"         "90+/DCC-%1"
            spam "X-Spam-Status: Yes"                     "90+/SA"
            spam "X-PerlMX-Spam: .*Probability=([0-9]+)%" "%1/PM"
            set spam_separator=", "

       If I then received a message that DCC registered with ``many'' hits under the
       ``Fuz2'' checksum, and that PureMessage registered with a 97% probability of
       being spam, that message's spam tag would read 90+/DCC-Fuz2, 97/PM. (The four
       characters before ``=many'' in a DCC report indicate the checksum used -- in
       this case, ``Fuz2''.)

       If the $spam_separator variable is unset, then each spam pattern match super-
       sedes the previous one. Instead of getting joined _f_o_r_m_a_t strings, you'll get
       only the last one to match.

       The spam tag is what will be displayed in the index when you use %H in the
       $index_format variable. It's also the string that the ~H pattern-matching
       expression matches against for _s_e_a_r_c_h and _l_i_m_i_t functions. And it's what sort-
       ing by spam attribute will use as a sort key.

       That's a pretty complicated example, and most people's actual environments will
       have only one spam filter. The simpler your configuration, the more effective
       mutt can be, especially when it comes to sorting.

       Generally, when you sort by spam tag, mutt will sort _l_e_x_i_c_a_l_l_y -- that is, by
       ordering strings alphnumerically. However, if a spam tag begins with a number,
       mutt will sort numerically first, and lexically only when two numbers are equal
       in value. (This is like UNIX's sort -n.) A message with no spam attributes at
       all -- that is, one that didn't match _a_n_y of your spam patterns -- is sorted at

       The Mutt Next Generation E-Mail Client                                       41

       lowest priority. Numbers are sorted next, beginning with 0 and ranging upward.
       Finally, non-numeric strings are sorted, with ``a'' taking lower priority than
       ``z''. Clearly, in general, sorting by spam tags is most effective when you can
       coerce your filter to give you a raw number. But in case you can't, mutt can
       still do something useful.

       The nospam command can be used to write exceptions to spam patterns. If a
       header pattern matches something in a spam command, but you nonetheless do not
       want it to receive a spam tag, you can list a more precise pattern under a
       nospam command.

       If the _p_a_t_t_e_r_n given to nospam is exactly the same as the _p_a_t_t_e_r_n on an exist-
       ing spam list entry, the effect will be to remove the entry from the spam list,
       instead of adding an exception.  Likewise, if the _p_a_t_t_e_r_n for a spam command
       matches an entry on the nospam list, that nospam entry will be removed. If the
       _p_a_t_t_e_r_n for nospam is ``*'', _a_l_l _e_n_t_r_i_e_s _o_n _b_o_t_h _l_i_s_t_s will be removed. This
       might be the default action if you use spam and nospam in conjunction with a
       folder-hook.

       You can have as many spam or nospam commands as you like.  You can even do your
       own primitive spam detection within mutt -- for example, if you consider all
       mail from MAILER-DAEMON to be spam, you can use a spam command like this:

            spam "^From: .*MAILER-DAEMON"       "999"

       _3_._2_7  _S_e_t_t_i_n_g _v_a_r_i_a_b_l_e_s

       Usage: set [no|inv]_v_a_r_i_a_b_l_e[=_v_a_l_u_e] [ _v_a_r_i_a_b_l_e ... ]

       Usage: toggle _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

       Usage: unset _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

       Usage: reset _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

       This command is used to set (and unset) _c_o_n_f_i_g_u_r_a_t_i_o_n _v_a_r_i_a_b_l_e_s (section 6.4  ,
       page 80).  There are four basic types of variables: boolean, number, string and
       quadoption.  _b_o_o_l_e_a_n variables can be _s_e_t (true) or _u_n_s_e_t (false).  _n_u_m_b_e_r
       variables can be assigned a positive integer value.

       _s_t_r_i_n_g variables consist of any number of printable characters.  _s_t_r_i_n_g_s must
       be enclosed in quotes if they contain spaces or tabs.  You may also use the
       ``C'' escape sequences \\nn and \\tt for newline and tab, respectively.

       _q_u_a_d_o_p_t_i_o_n variables are used to control whether or not to be prompted for cer-
       tain actions, or to specify a default action.  A value of _y_e_s will cause the
       action to be carried out automatically as if you had answered yes to the ques-
       tion.  Similarly, a value of _n_o will cause the the action to be carried out as
       if you had answered ``no.''  A value of _a_s_k_-_y_e_s will cause a prompt with a
       default answer of ``yes'' and _a_s_k_-_n_o will provide a default answer of ``no.''

       The Mutt Next Generation E-Mail Client                                       42

       Prefixing a variable with ``no'' will unset it.  Example: set noaskbcc.

       For _b_o_o_l_e_a_n variables, you may optionally prefix the variable name with inv to
       toggle the value (on or off).  This is useful when writing macros.  Example:
       set invsmart_wrap.

       The toggle command automatically prepends the inv prefix to all specified vari-
       ables.

       The unset command automatically prepends the no prefix to all specified vari-
       ables.

       Using the enter-command function in the _i_n_d_e_x menu, you can query the value of
       a variable by prefixing the name of the variable with a question mark:

            set ?allow_8bit

       The question mark is actually only required for boolean and quadoption vari-
       ables.

       The reset command resets all given variables to the compile time defaults
       (hopefully mentioned in this manual). If you use the command set and prefix the
       variable with ``&'' this has the same behavior as the reset command.

       With the reset command there exists the special variable ``all'', which allows
       you to reset all variables to their system defaults.

       _3_._2_8  _R_e_a_d_i_n_g _i_n_i_t_i_a_l_i_z_a_t_i_o_n _c_o_m_m_a_n_d_s _f_r_o_m _a_n_o_t_h_e_r _f_i_l_e

       Usage: source _f_i_l_e_n_a_m_e [ _f_i_l_e_n_a_m_e ... ]

       This command allows the inclusion of initialization commands from other files.
       For example, I place all of my aliases in ~/.mail_aliases so that I can make my
       ~/.muttrc readable and keep my aliases private.

       If the filename begins with a tilde (``~''), it will be expanded to the path of
       your home directory.

       If the filename ends with a vertical bar (|), then _f_i_l_e_n_a_m_e is considered to be
       an executable program from which to read input (eg.  source ~/bin/myscript|).

       _3_._2_9  _R_e_m_o_v_i_n_g _h_o_o_k_s

       Usage: unhook [ * | _h_o_o_k_-_t_y_p_e ]

       This command permits you to flush hooks you have previously defined.  You can
       either remove all hooks by giving the ``*'' character as an argument, or you
       can remove all hooks of a specific type by saying something like unhook send-

       The Mutt Next Generation E-Mail Client                                       43

       hook.

       _3_._3_0  _S_h_a_r_i_n_g _S_e_t_u_p_s

       _3_._3_0_._1  _C_h_a_r_a_c_t_e_r _S_e_t_s

       As users may run mutt-ng on different systems, the configuration must be main-
       tained because it's likely that people want to use the setup everywhere they
       use mutt-ng. And mutt-ng tries to help where it can.

       To not produce conflicts with different character sets, mutt-ng allows users to
       specify in which character set their configuration files are encoded. Please
       note that while reading the configuration files, this is only respected after
       the corresponding declaration appears. It's advised to put the following at the
       very beginning of a users muttngrc:

            set config_charset = "..."

       and replacing the dots with the actual character set. To avoid problems while
       maintaining the setup, vim user's may want to use modelines as show in:

            # vim:fileencoding=...:

       while, again, replacing the dots with the appropriate name. This tells vim as
       which character set to read and save the file.

       _3_._3_0_._2  _M_o_d_u_l_a_r_i_z_a_t_i_o_n

       ``Modularization'' means to divide the setup into several files while sorting
       the options or commands by topic. Especially for longer setups (e.g. with many
       hooks), this helps maintaining it and solving trouble.

       When using separation, setups may be, as a whole or in fractions, shared over
       different systems.

       _3_._3_0_._3  _C_o_n_d_i_t_i_o_n_a_l _p_a_r_t_s

       When using a configuration on different systems, the user may not always have
       influence on how mutt-ng is installed and which features it includes.

       To solve this, mutt-ng contain a feature based on the ``ifdef'' patch written
       for mutt. Its basic syntax is:

       The Mutt Next Generation E-Mail Client                                       44

            ifdef <item> <command>
            ifndef <item> <command>

       ...whereby <item> can be one of:

          +o a function name

          +o a variable name

          +o a menu name

          +o a feature name

       All available functions, variables and menus are documented elsewhere in this
       manual but ``features'' is specific to these two commands. To test for one,
       prefix one of the following keywords with feature_:

            ncurses, slang, iconv, idn, dotlock, standalone, pop, nntp, imap, ssl,
            gnutls, sasl, sasl2, libesmtp, compressed, color, classic_pgp,
            classic_smime, gpgme, header_cache

       As an example, one can use the following in ~/.muttngrc:

            ifdef feature_imap 'source ~/.mutt-ng/setup-imap'
            ifdef feature_pop  'source ~/.mutt-ng/setup-pop'
            ifdef feature_nntp 'source ~/.mutt-ng/setup-nntp'

       ...to only source ~/.mutt-ng/setup-imap if IMAP support is built in, only
       source ~/.mutt-ng/setup-pop if POP support is built in and only source ~/.mutt-
       ng/setup-nntp if NNTP support is built in.

       An example for testing for variable names can be used if users use different
       revisions of mutt-ng whereby the older one may not have a certain variable. To
       test for the availability of _$_i_m_a_p___m_a_i_l___c_h_e_c_k (section 6.4.99  , page 103),
       use:

            ifdef imap_mail_check 'set imap_mail_check = 300'

       Provided for completeness is the test for menu names. To set _$_p_a_g_e_r___i_n_d_e_x___l_i_n_e_s
       (section 6.4.169  , page 122) only if the pager menu is available, use:

            ifdef pager 'set pager_index_lines = 10'

       For completeness, too, the opposite of ifdef is provided: ifndef which only
       executes the command if the test fails. For example, the following two examples

       The Mutt Next Generation E-Mail Client                                       45

       are equivalent:

            ifdef feature_ncurses 'source ~/.mutt-ng/setup-ncurses'
            ifndef feature_ncurses 'source ~/.mutt-ng/setup-slang'

       ...and...

            ifdef feature_slang 'source ~/.mutt-ng/setup-slang'
            ifndef feature_slang 'source ~/.mutt-ng/setup-ncurses'

       _4_.  _A_d_v_a_n_c_e_d _U_s_a_g_e

       _4_._1  _R_e_g_u_l_a_r _E_x_p_r_e_s_s_i_o_n_s

       All string patterns in Mutt-ng including those in more complex _p_a_t_t_e_r_n_s (sec-
       tion 6.2  , page 77) must be specified using regular expressions (regexp) in
       the ``POSIX extended'' syntax (which is more or less the syntax used by egrep
       and GNU awk).  For your convenience, we have included below a brief description
       of this syntax.

       The search is case sensitive if the pattern contains at least one upper case
       letter, and case insensitive otherwise. Note that ``\'' must be quoted if used
       for a regular expression in an initialization command: ``\\''.

       A regular expression is a pattern that describes a set of strings.  Regular
       expressions are constructed analogously to arithmetic expressions, by using
       various operators to combine smaller expressions.

       Note that the regular expression can be enclosed/delimited by either ' or '
       which is useful if the regular expression includes a white-space character.
       See _S_y_n_t_a_x _o_f _I_n_i_t_i_a_l_i_z_a_t_i_o_n _F_i_l_e_s (section 3.2  , page 21) for more informa-
       tion on ' and ' delimiter processing.  To match a literal ' or ' you must pref-
       ace it with \ (backslash).

       The fundamental building blocks are the regular expressions that match a single
       character.  Most characters, including all letters and digits, are regular
       expressions that match themselves.  Any metacharacter with special meaning may
       be quoted by preceding it with a backslash.

       The period ``.'' matches any single character.  The caret ``^'' and the dollar
       sign ``$'' are metacharacters that respectively match the empty string at the
       beginning and end of a line.

       The Mutt Next Generation E-Mail Client                                       46

       A list of characters enclosed by ``['' and ``]'' matches any single character
       in that list; if the first character of the list is a caret ``^'' then it
       matches any character nnoott in the list.  For example, the regular expression
       [[00112233445566778899]] matches any single digit.  A range of ASCII characters may be
       specified by giving the first and last characters, separated by a hyphen ``-''.
       Most metacharacters lose their special meaning inside lists.  To include a lit-
       eral ``]'' place it first in the list.  Similarly, to include a literal ``^''
       place it anywhere but first.  Finally, to include a literal hyphen ``-'' place
       it last.

       Certain named classes of characters are predefined.  Character classes consist
       of ``[:'', a keyword denoting the class, and ``:]''.  The following classes are
       defined by the POSIX standard:

             [:alnum:]
                   Alphanumeric characters.

             [:alpha:]
                   Alphabetic characters.

             [:blank:]
                   Space or tab characters.

             [:cntrl:]
                   Control characters.

             [:digit:]
                   Numeric characters.

             [:graph:]
                   Characters that are both printable and visible.  (A space is print-
                   able, but not visible, while an ``a'' is both.)

             [:lower:]
                   Lower-case alphabetic characters.

             [:print:]
                   Printable characters (characters that are not control characters.)

             [:punct:]
                   Punctuation characters (characters that are not letter, digits,
                   control characters, or space characters).

             [:space:]
                   Space characters (such as space, tab and formfeed, to name a few).

             [:upper:]
                   Upper-case alphabetic characters.

             [:xdigit:]
                   Characters that are hexadecimal digits.

       A character class is only valid in a regular expression inside the brackets of
       a character list.  Note that the brackets in these class names are part of the

       The Mutt Next Generation E-Mail Client                                       47

       symbolic names, and must be included in addition to the brackets delimiting the
       bracket list.  For example, [[[[::ddiiggiitt::]]]] is equivalent to [[00--99]].

       Two additional special sequences can appear in character lists.  These apply to
       non-ASCII character sets, which can have single symbols (called collating ele-
       ments) that are represented with more than one character, as well as several
       characters that are equivalent for collating or sorting purposes:

             Collating Symbols
                   A collating symbol is a multi-character collating element enclosed
                   in ``[.'' and ``.]''.  For example, if ``ch'' is a collating ele-
                   ment, then [[[[..cchh..]]]] is a regexp that matches this collating ele-
                   ment, while [[cchh]] is a regexp that matches either ``c'' or ``h''.

             Equivalence Classes
                   An equivalence class is a locale-specific name for a list of char-
                   acters that are equivalent. The name is enclosed in ``[='' and
                   ``=]''.  For example, the name ``e'' might be used to represent all
                   of ``'' ``'' and ``e''.  In this case, [[[[==ee==]]]] is a regexp that
                   matches any of ``'', ``'' and ``e''.

       A regular expression matching a single character may be followed by one of sev-
       eral repetition operators:

             ?
                   The preceding item is optional and matched at most once.

             *
                   The preceding item will be matched zero or more times.

             +
                   The preceding item will be matched one or more times.

             {n}
                   The preceding item is matched exactly _n times.

             {n,}
                   The preceding item is matched _n or more times.

             {,m}
                   The preceding item is matched at most _m times.

             {n,m}
                   The preceding item is matched at least _n times, but no more than _m
                   times.

       Two regular expressions may be concatenated; the resulting regular expression
       matches any string formed by concatenating two substrings that respectively
       match the concatenated subexpressions.

       Two regular expressions may be joined by the infix operator ``|''; the result-
       ing regular expression matches any string matching either subexpression.

       Repetition takes precedence over concatenation, which in turn takes precedence

       The Mutt Next Generation E-Mail Client                                       48

       over alternation.  A whole subexpression may be enclosed in parentheses to
       override these precedence rules.

       NNoottee:: If you compile Mutt-ng with the GNU _r_x package, the following operators
       may also be used in regular expressions:

             \\y
                   Matches the empty string at either the beginning or the end of a
                   word.

             \\B
                   Matches the empty string within a word.

             \\<
                   Matches the empty string at the beginning of a word.

             \\>
                   Matches the empty string at the end of a word.

             \\w
                   Matches any word-constituent character (letter, digit, or under-
                   score).

             \\W
                   Matches any character that is not word-constituent.

             \\`
                   Matches the empty string at the beginning of a buffer (string).

             \\'
                   Matches the empty string at the end of a buffer.

       Please note however that these operators are not defined by POSIX, so they may
       or may not be available in stock libraries on various systems.

       _4_._2  _P_a_t_t_e_r_n_s

       Mutt-ng's pattern language provides a simple yet effective way to set up rules
       to match messages, e.g. for operations like tagging and scoring. A pattern con-
       sists of one or more sub-pattern, which can be logically grouped, ORed, and
       negated. For a complete listing of these patterns, please refer to table _P_a_t_-
       _t_e_r_n_s (section 6.2  , page 77) in the Reference chapter.

       It must be noted that in this table, EXPR, USER, ID and SUBJECT are regular
       expressions. For ranges, the forms <[MAX], >>[MIN], [MIN]- and -[MAX] are also
       possible.

       _4_._2_._1  _C_o_m_p_l_e_x _P_a_t_t_e_r_n_s

       It is possible to combine several sub-patterns to a more complex pattern. The
       most simple possibility is to logically AND several patterns by stringing them
       together:

       The Mutt Next Generation E-Mail Client                                       49

            ~s 'SPAM' ~U

       The pattern above matches all messages that contain ``SPAM'' in the subject and
       are unread.

       To logical OR patterns, simply use the | operator. This one especially useful
       when using local groups:

            ~f ("nion@muttng\.org"|"ak@muttng\.org"|"pdmef@muttng\.org")
            (~b mutt-ng|~s Mutt-ng)
            !~x '@synflood\.at'

       The first pattern matches all messages that were sent by one of the mutt-ng
       maintainers, while the seconds pattern matches all messages that contain
       ``mutt-ng'' in the message body or ``Mutt-ng'' in the subject. The third pat-
       tern matches all messages that do not contain ``@synflood\.at'' in the Refer-
       ences: header, i.e.  messages that are not an (indirect) reply to one of my
       messages. A pattern can be logicall negated using the ! operator.

       _4_._2_._2  _P_a_t_t_e_r_n_s _a_n_d _D_a_t_e_s

       When using dates in patterns, the dates must be specified in a special format,
       i.e.  DD/MM/YYYY. If you don't specify month or year, they default to the cur-
       rent month or year. When using date ranges, and you specify only the minimum or
       the maximum, the specified date will be excluded, e.g. 01/06/2005- matches
       against all messages _a_f_t_e_r Juni 1st, 2005.

       It is also possible to use so-called ``error margins'' when specifying date
       ranges.  You simply specify a date, and then the error margin. This margin
       needs to contain the information whether it goes ``forth'' or ``back'' in time,
       by using + and -.  Then follows a number and a unit, i.e. y for years, m for
       months, w for weeks and d for days. If you use the special * sign, it means
       that the error margin goes to both ``directions'' in time.

            ~d 01/01/2005+1y
            ~d 18/10/2004-2w
            ~d 28/12/2004*1d

       The first pattern matches all dates between January 1st, 2005 and January 1st
       2006.  The second pattern matches all dates between October 18th, 2004 and
       October 4th 2004 (2 weeks before 18/10/2004), while the third pattern matches
       all dates 1 day around December 28th, 2004 (i.e. Dec 27th, 28th and 29th).

       Relative dates are also very important, as they make it possible to specify
       date ranges between a fixed number of units and the current date. How this
       works can be seen in the following example:

       The Mutt Next Generation E-Mail Client                                       50

            ~d >2w # messages older than two weeks
            ~d <3d # messages newer than 3 days
            ~d =1m # messages that are exactly one month old

       _4_._3  _F_o_r_m_a_t _S_t_r_i_n_g_s

       _4_._3_._1  _I_n_t_r_o_d_u_c_t_i_o_n

       The so called _F_o_r_m_a_t _S_t_r_i_n_g_s offer great flexibility when configuring mutt-ng.
       In short, they describe what items to print out how in menus and status mes-
       sages.

       Basically, they work as this: for different menus and bars, there's a variable
       specifying the layout. For every item available, there is a so called _e_x_p_a_n_d_o.

       For example, when running mutt-ng on different machines or different versions
       for testing purposes, it may be interesting to have the following information
       always printed on screen when one is in the index:

          +o the current hostname

          +o the current mutt-ng version number

       The setting for the status bar of the index is controlled via the _$_s_t_a_t_u_s___f_o_r_-
       _m_a_t (section 6.4.307  , page 154) variable. For the hostname and version
       string, there's an expando for $status_format: %h expands to the hostname and
       %v to the version string. When just configuring:

            set status_format = "%v on %h: ..."

       mutt-ng will replace the sequence %v with the version string and %h with the
       host's name. When you are, for example, running mutt-ng version 1.5.9i on host
       mailhost, you'll see the following when you're in the index:

            Mutt-ng 1.5.9i on mailhost: ...

       In the index, there're more useful information one could want to see:

          +o which mailbox is open

          +o how man new, flagged or postponed messages

          +o ...

       To include the mailbox' name is as easy as:

       The Mutt Next Generation E-Mail Client                                       51

            set status_format = "%v on %h: %B: ...

       When the currently opened mailbox is Inbox, this will be expanded to:

            Mutt-ng 1.5.9i on mailhost: Inbox: ...

       For the number of certain types of messages, one more feature of the format
       strings is extremely useful. If there aren't messages of a certain type, it may
       not be desired to print just that there aren't any but instead only print some-
       thing if there are any.

       _4_._3_._2  _C_o_n_d_i_t_i_o_n_a_l _E_x_p_a_n_s_i_o_n

       To only print the number of messages if there are new messages in the current
       mailbox, further extend $status_format to:

            set status_format = "%v on %h: %B %?n?%n new? ...

       This feature is called _n_o_n_z_e_r_o_-_p_r_i_n_t_i_n_g and works as this: some expandos may be
       optionally printed nonzero, i.e.  a portion of the format string is only evalu-
       ated if the value of the expando is different from zero. The basic syntax is:

            %?<item>?<string if nonzero>?

       which tells mutt-ng to only look at <string if nonzero> if the value of the
       %<item%gt; expando is different from zero. In our example, we used n as the
       expando to check for and %n new as the optional nonzero string.

       But this is not all: this feature only offers one alternative: ``print some-
       thing if not zero.'' Mutt-ng does, as you might guess, also provide a logically
       complete version: ``if zero, print something and else print something else.''
       This is achieved by the following syntax for those expandos which may be
       printed nonzero:

            %?<item>?<string if nonzero>&<string if zero>?

       Using this we can make mutt-ng to do the following:

          +o  make it print ``_n new messages'' whereby _n is the count but only if there
            new ones

          +o  and make it print ``no new messages'' if there aren't any

       The Mutt Next Generation E-Mail Client                                       52

       The corresponding configuration is:

            set status_format = "%v on %h: %B: %?n?%n new messages&no new messages? ...

       This doubles the use of the ``new messages'' string because it'll get always
       printed. Thus, it can be shortened to:

            set status_format = "%v on %h: %B: %?n?%n&no? new messages ...

       As you might see from this rather simple example, one can create very complex
       but fancy status messages. Please see the reference chapter for expandos and
       those which may be printed nonzero.

       _4_._3_._3  _M_o_d_i_f_i_c_a_t_i_o_n_s _a_n_d _P_a_d_d_i_n_g

       Besides the information given so far, there're even more features of format
       strings:

          +o When specifying %_<item> instead of just %<item>, mutt-ng will convert all
            characters in the expansion of <item> to lowercase.

          +o When specifying %:<item> instead of just %<item>, mutt-ng will convert all
            dots in the expansion of <item> to underscores (_).

       Also, there's a feature called _P_a_d_d_i_n_g supplied by the following two expandos:
       %|X and %>X.

             %|X
                   When this occurs, mutt-ng will fill the rest of the line with the
                   character X. In our example, filling the rest of the line with
                   dashes is done by setting:

                        set status_format = "%v on %h: %B: %?n?%n&no? new messages %|-"

             %>X
                   Since the previous expando stops at the end of line, there must be
                   a way to fill the gap between two items via the %>X expando: it
                   puts as many characters X in between two items so that the rest of
                   the line will be right-justified. For example, to not put the ver-
                   sion string and hostname of our example on the left but on the
                   right and fill the gap with spaces, one might use (note the space
                   after %>):

                        set status_format = "%B: %?n?%n&no? new messages %> (%v on %h)"

       The Mutt Next Generation E-Mail Client                                       53

       _4_._4  _U_s_i_n_g _T_a_g_s

       Sometimes it is desirable to perform an operation on a group of messages all at
       once rather than one at a time.  An example might be to save messages to a
       mailing list to a separate folder, or to delete all messages with a given sub-
       ject.  To tag all messages matching a pattern, use the tag-pattern function,
       which is bound to ``shift-T'' by default.  Or you can select individual mes-
       sages by hand using the ``tag-message'' function, which is bound to ``t'' by
       default.  See _p_a_t_t_e_r_n_s (section 6.2  , page 77) for Mutt-ng's pattern matching
       syntax.

       Once you have tagged the desired messages, you can use the ``tag-prefix'' oper-
       ator, which is the ``;'' (semicolon) key by default.  When the ``tag-prefix''
       operator is used, the nneexxtt operation will be applied to all tagged messages if
       that operation can be used in that manner.  If the _$_a_u_t_o___t_a_g (section 6.4.16  ,
       page 84) variable is set, the next operation applies to the tagged messages
       automatically, without requiring the ``tag-prefix''.

       In _m_a_c_r_o_s (section 3.7  , page 27) or _p_u_s_h (section 3.23  , page 37) commands,
       you can use the ``tag-prefix-cond'' operator.  If there are no tagged messages,
       mutt will "eat" the rest of the macro to abort it's execution.  Mutt-ng will
       stop "eating" the macro when it encounters the ``end-cond'' operator;  after
       this operator the rest of the macro will be executed as normal.

       _4_._5  _U_s_i_n_g _H_o_o_k_s

       A _h_o_o_k is a concept borrowed from the EMACS editor which allows you to execute
       arbitrary commands before performing some operation.  For example, you may wish
       to tailor your configuration based upon which mailbox you are reading, or to
       whom you are sending mail.  In the Mutt-ng world, a _h_o_o_k consists of a _r_e_g_u_l_a_r
       _e_x_p_r_e_s_s_i_o_n (section 4.1  , page 44) or _p_a_t_t_e_r_n (section 6.2  , page 77) along
       with a configuration option/command.  See

          +o _f_o_l_d_e_r_-_h_o_o_k (section 3.6  , page 26)

          +o _s_e_n_d_-_h_o_o_k (section 3.20  , page 36)

          +o _m_e_s_s_a_g_e_-_h_o_o_k (section 3.21  , page 37)

          +o _s_a_v_e_-_h_o_o_k (section 3.17  , page 35)

          +o _m_b_o_x_-_h_o_o_k (section 3.13  , page 33)

          +o _f_c_c_-_h_o_o_k (section 3.18  , page 35)

          +o _f_c_c_-_s_a_v_e_-_h_o_o_k (section 3.19  , page 36)

       for specific details on each type of _h_o_o_k available.

       NNoottee:: if a hook changes configuration settings, these changes remain effective
       until the end of the current mutt session. As this is generally not desired, a
       default hook needs to be added before all other hooks to restore configuration

       The Mutt Next Generation E-Mail Client                                       54

       defaults. Here is an example with send-hook and the my_hdr directive:

            send-hook . 'unmy_hdr From:'
            send-hook ~C'^b@b\.b$' my_hdr from: c@c.c

       _4_._5_._1  _M_e_s_s_a_g_e _M_a_t_c_h_i_n_g _i_n _H_o_o_k_s

       Hooks that act upon messages (send-hook, save-hook, fcc-hook, message-hook) are
       evaluated in a slightly different manner.  For the other types of hooks, a _r_e_g_-
       _u_l_a_r _e_x_p_r_e_s_s_i_o_n (section 4.1  , page 44) is sufficient.  But in dealing with
       messages a finer grain of control is needed for matching since for different
       purposes you want to match different criteria.

       Mutt-ng allows the use of the _s_e_a_r_c_h _p_a_t_t_e_r_n (section 6.2  , page 77) language
       for matching messages in hook commands.  This works in exactly the same way as
       it would when _l_i_m_i_t_i_n_g or _s_e_a_r_c_h_i_n_g the mailbox, except that you are restricted
       to those operators which match information mutt extracts from the header of the
       message (i.e.  from, to, cc, date, subject, etc.).

       For example, if you wanted to set your return address based upon sending mail
       to a specific address, you could do something like:

            send-hook '~t ^me@cs\.hmc\.edu$' 'my_hdr From: Mutt-ng User <user@host>'

       which would execute the given command when sending mail to _m_e_@_c_s_._h_m_c_._e_d_u.

       However, it is not required that you write the pattern to match using the full
       searching language.  You can still specify a simple _r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n like the
       other hooks, in which case Mutt-ng will translate your pattern into the full
       language, using the translation specified by the _$_d_e_f_a_u_l_t___h_o_o_k (section
       6.4.45  , page 90) variable.  The pattern is translated at the time the hook is
       declared, so the value of _$_d_e_f_a_u_l_t___h_o_o_k (section 6.4.45  , page 90) that is in
       effect at that time will be used.

       _4_._6  _U_s_i_n_g _t_h_e _s_i_d_e_b_a_r

       The sidebar, a feature specific to Mutt-ng, allows you to use a mailbox listing
       which looks very similar to the ones you probably know from GUI mail clients.
       The sidebar lists all specified mailboxes, shows the number in each and high-
       lights the ones with new email Use the following configuration commands:

            set sidebar_visible="yes"
            set sidebar_width=25

       If you want to specify the mailboxes you can do so with:

       The Mutt Next Generation E-Mail Client                                       55

            set mbox='=INBOX'
            mailboxes INBOX \
                      MBOX1 \
                      MBOX2 \
                      ...

       You can also specify the colors for mailboxes with new mails by using:

            color sidebar_new red black
            color sidebar white black

       The available functions are:

            sidebar-scroll-up      Scrolls the mailbox list up 1 page
            sidebar-scroll-down    Scrolls the mailbox list down 1 page
            sidebar-next           Highlights the next mailbox
            sidebar-next-new       Highlights the next mailbox with new mail
            sidebar-previous       Highlights the previous mailbox
            sidebar-open           Opens the currently highlighted mailbox

       Reasonable key bindings look e.g. like this:

            bind index \Cp sidebar-prev
            bind index \Cn sidebar-next
            bind index \Cb sidebar-open
            bind pager \Cp sidebar-prev
            bind pager \Cn sidebar-next
            bind pager \Cb sidebar-open

            macro index B ':toggle sidebar_visible^M'
            macro pager B ':toggle sidebar_visible^M'

       You can then go up and down by pressing Ctrl-P and Ctrl-N, and switch on and
       off the sidebar simply by pressing 'B'.

       _4_._7  _E_x_t_e_r_n_a_l _A_d_d_r_e_s_s _Q_u_e_r_i_e_s

       Mutt-ng supports connecting to external directory databases such as LDAP,
       ph/qi, bbdb, or NIS through a wrapper script which connects to mutt using a
       simple interface.  Using the _$_q_u_e_r_y___c_o_m_m_a_n_d (section 6.4.221  , page 134) vari-
       able, you specify the wrapper command to use.  For example:

            set query_command = "mutt_ldap_query.pl '%s'"

       The wrapper script should accept the query on the command-line.  It should
       return a one line message, then each matching response on a single line, each

       The Mutt Next Generation E-Mail Client                                       56

       line containing a tab separated address then name then some other optional
       information.  On error, or if there are no matching addresses, return a non-
       zero exit code and a one line error message.

       An example multiple response output:

            Searching database ... 20 entries ... 3 matching:
            me@cs.hmc.edu           Michael Elkins  mutt dude
            blong@fiction.net       Brandon Long    mutt and more
            roessler@guug.de        Thomas Roessler mutt pgp

       There are two mechanisms for accessing the query function of mutt.  One is to
       do a query from the index menu using the query function (default: Q).  This
       will prompt for a query, then bring up the query menu which will list the
       matching responses.  From the query menu, you can select addresses to create
       aliases, or to mail.  You can tag multiple addresses to mail, start a new
       query, or have a new query appended to the current responses.

       The other mechanism for accessing the query function is for address completion,
       similar to the alias completion.  In any prompt for address entry, you can use
       the complete-query function (default: ^T) to run a query based on the current
       address you have typed.  Like aliases, mutt will look for what you have typed
       back to the last space or comma.  If there is a single response for that query,
       mutt will expand the address in place.  If there are multiple responses, mutt
       will activate the query menu.  At the query menu, you can select one or more
       addresses to be added to the prompt.

       _4_._8  _M_a_i_l_b_o_x _F_o_r_m_a_t_s

       Mutt-ng supports reading and writing of four different mailbox formats: mbox,
       MMDF, MH and Maildir.  The mailbox type is autodetected, so there is no need to
       use a flag for different mailbox types.  When creating new mailboxes, Mutt-ng
       uses the default specified with the _$_m_b_o_x___t_y_p_e (section 6.4.125  , page 111)
       variable.

       mmbbooxx.  This is the most widely used mailbox format for UNIX.  All messages are
       stored in a single file.  Each message has a line of the form:

            From me@cs.hmc.edu Fri, 11 Apr 1997 11:44:56 PST

       to denote the start of a new message (this is often referred to as the
       ``From_'' line).

       MMMMDDFF.  This is a variant of the _m_b_o_x format.  Each message is surrounded by
       lines containing ``^A^A^A^A'' (four control-A's).

       MMHH. A radical departure from _m_b_o_x and _M_M_D_F, a mailbox consists of a directory
       and each message is stored in a separate file.  The filename indicates the mes-
       sage number (however, this is may not correspond to the message number Mutt-ng

       The Mutt Next Generation E-Mail Client                                       57

       displays). Deleted messages are renamed with a comma (,) prepended to the file-
       name. NNoottee:: Mutt detects this type of mailbox by looking for either
       .mh_sequences or .xmhcache (needed to distinguish normal directories from MH
       mailboxes).

       MMaaiillddiirr.  The newest of the mailbox formats, used by the Qmail MTA (a replace-
       ment for sendmail).  Similar to _M_H, except that it adds three subdirectories of
       the mailbox: _t_m_p, _n_e_w and _c_u_r.  Filenames for the messages are chosen in such a
       way they are unique, even when two programs are writing the mailbox over NFS,
       which means that no file locking is needed.

       _4_._9  _M_a_i_l_b_o_x _S_h_o_r_t_c_u_t_s

       There are a number of built in shortcuts which refer to specific mailboxes.
       These shortcuts can be used anywhere you are prompted for a file or mailbox
       path.

          +o ! -- refers to your _$_s_p_o_o_l_f_i_l_e (section 6.4.296  , page 151) (incoming)
            mailbox

          +o > -- refers to your _$_m_b_o_x (section 6.4.124  , page 110) file

          +o < -- refers to your _$_r_e_c_o_r_d (section 6.4.230  , page 136) file

          +o ^ -- refers to the current mailbox

          +o - or !! -- refers to the file you've last visited

          +o ~ -- refers to your home directory

          +o = or + -- refers to your _$_f_o_l_d_e_r (section 6.4.64  , page 94) directory

          +o @_a_l_i_a_s -- refers to the _d_e_f_a_u_l_t _s_a_v_e _f_o_l_d_e_r (section 3.17  , page 35) as
            determined by the address of the alias

       _4_._1_0  _H_a_n_d_l_i_n_g _M_a_i_l_i_n_g _L_i_s_t_s

       Mutt-ng has a few configuration options that make dealing with large amounts of
       mail easier.  The first thing you must do is to let Mutt know what addresses
       you consider to be mailing lists (technically this does not have to be a mail-
       ing list, but that is what it is most often used for), and what lists you are
       subscribed to.  This is accomplished through the use of the _l_i_s_t_s _a_n_d _s_u_b_s_c_r_i_b_e
       (section 3.12  , page 32) commands in your muttrc.

       Now that Mutt-ng knows what your mailing lists are, it can do several things,
       the first of which is the ability to show the name of a list through which you
       received a message (i.e., of a subscribed list) in the _i_n_d_e_x menu display.
       This is useful to distinguish between personal and list mail in the same mail-
       box.  In the _$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105) variable, the escape
       ``%L'' will return the string ``To <list>'' when ``list'' appears in the ``To''

       The Mutt Next Generation E-Mail Client                                       58

       field, and ``Cc <list>'' when it appears in the ``Cc'' field (otherwise it
       returns the name of the author).

       Often times the ``To'' and ``Cc'' fields in mailing list messages tend to get
       quite large. Most people do not bother to remove the author of the message they
       are reply to from the list, resulting in two or more copies being sent to that
       person.  The ``list-reply'' function, which by default is bound to ``L'' in the
       _i_n_d_e_x menu and _p_a_g_e_r, helps reduce the clutter by only replying to the known
       mailing list addresses instead of all recipients (except as specified by Mail-
       Followup-To, see below).

       Mutt-ng also supports the Mail-Followup-To header.  When you send a message to
       a list of recipients which includes one or several subscribed mailing lists,
       and if the _$_f_o_l_l_o_w_u_p___t_o (section 6.4.66  , page 95) option is set, mutt will
       generate a Mail-Followup-To header which contains all the recipients to whom
       you send this message, but not your address. This indicates that group-replies
       or list-replies (also known as ``followups'') to this message should only be
       sent to the original recipients of the message, and not separately to you -
       you'll receive your copy through one of the mailing lists you are subscribed
       to.

       Conversely, when group-replying or list-replying to a message which has a Mail-
       Followup-To header, mutt will respect this header if the _$_h_o_n_o_r___f_o_l_l_o_w_u_p___t_o
       (section 6.4.88  , page 100) configuration variable is set.  Using list-reply
       will in this case also make sure that the reply goes to the mailing list, even
       if it's not specified in the list of recipients in the Mail-Followup-To.

       Note that, when header editing is enabled, you can create a Mail-Followup-To
       header manually.  Mutt-ng will only auto-generate this header if it doesn't
       exist when you send the message.

       The other method some mailing list admins use is to generate a ``Reply-To''
       field which points back to the mailing list address rather than the author of
       the message.  This can create problems when trying to reply directly to the
       author in private, since most mail clients will automatically reply to the
       address given in the ``Reply-To'' field.  Mutt-ng uses the _$_r_e_p_l_y___t_o (section
       6.4.233  , page 136) variable to help decide which address to use.  If set to
       _a_s_k_-_y_e_s or _a_s_k_-_n_o, you will be prompted as to whether or not you would like to
       use the address given in the ``Reply-To'' field, or reply directly to the
       address given in the ``From'' field.  When set to _y_e_s, the ``Reply-To'' field
       will be used when present.

       The ``X-Label:'' header field can be used to further identify mailing lists or
       list subject matter (or just to annotate messages individually).  The
       _$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105) variable's ``%y'' and ``%Y''
       escapes can be used to expand ``X-Label:'' fields in the index, and Mutt-ng's
       pattern-matcher can match regular expressions to ``X-Label:'' fields with the
       ``~y'' selector.  ``X-Label:'' is not a standard message header field, but it
       can easily be inserted by procmail and other mail filtering agents.

       Lastly, Mutt-ng has the ability to _s_o_r_t (section 6.4.290  , page 149) the mail-
       box into _t_h_r_e_a_d_s (section 2.5.3  , page 11).  A thread is a group of messages
       which all relate to the same subject.  This is usually organized into a tree-
       like structure where a message and all of its replies are represented

       The Mutt Next Generation E-Mail Client                                       59

       graphically.  If you've ever used a threaded news client, this is the same con-
       cept.  It makes dealing with large volume mailing lists easier because you can
       easily delete uninteresting threads and quickly find topics of value.

       _4_._1_1  _E_d_i_t_i_n_g _t_h_r_e_a_d_s

       Mutt-ng has the ability to dynamically restructure threads that are broken
       either by misconfigured software or bad behavior from some correspondents. This
       allows to clean your mailboxes formats) from these annoyances which make it
       hard to follow a discussion.

       _4_._1_1_._1  _L_i_n_k_i_n_g _t_h_r_e_a_d_s

       Some mailers tend to "forget" to correctly set the "In-Reply-To:" and "Refer-
       ences:" headers when replying to a message. This results in broken discussions
       because Mutt-ng has not enough information to guess the correct threading.  You
       can fix this by tagging the reply, then moving to the parent message and using
       the ``link-threads'' function (bound to & by default). The reply will then be
       connected to this "parent" message.

       You can also connect multiple children at once, tagging them and using the tag-
       prefix command (';') or the auto_tag option.

       _4_._1_1_._2  _B_r_e_a_k_i_n_g _t_h_r_e_a_d_s

       On mailing lists, some people are in the bad habit of starting a new discussion
       by hitting "reply" to any message from the list and changing the subject to a
       totally unrelated one.  You can fix such threads by using the ``break-thread''
       function (bound by default to #), which will turn the subthread starting from
       the current message into a whole different thread.

       _4_._1_2  _D_e_l_i_v_e_r_y _S_t_a_t_u_s _N_o_t_i_f_i_c_a_t_i_o_n _(_D_S_N_) _S_u_p_p_o_r_t

       RFC1894 defines a set of MIME content types for relaying information about the
       status of electronic mail messages.  These can be thought of as ``return
       receipts.'' Berkeley sendmail 8.8.x currently has some command line options in
       which the mail client can make requests as to what type of status messages
       should be returned.

       To support this, there are two variables. _$_d_s_n___n_o_t_i_f_y (section 6.4.51  , page
       91) is used to request receipts for different results (such as failed message,
       message delivered, etc.).  _$_d_s_n___r_e_t_u_r_n (section 6.4.52  , page 92) requests how
       much of your message should be returned with the receipt (headers or full mes-
       sage).  Refer to the man page on sendmail for more details on DSN.

       _4_._1_3  _P_O_P_3 _S_u_p_p_o_r_t _(_O_P_T_I_O_N_A_L_)

       If Mutt-ng was compiled with POP3 support (by running the _c_o_n_f_i_g_u_r_e script with

       The Mutt Next Generation E-Mail Client                                       60

       the _-_-_e_n_a_b_l_e_-_p_o_p flag), it has the ability to work with mailboxes located on a
       remote POP3 server and fetch mail for local browsing.

       You can access the remote POP3 mailbox by selecting the folder
       pop://popserver/.

       You can select an alternative port by specifying it with the server, i.e.:
       pop://popserver:port/.

       You can also specify different username for each folder, i.e.: pop://user-
       name@popserver[:port]/.

       Polling for new mail is more expensive over POP3 than locally. For this reason
       the frequency at which Mutt-ng will check for mail remotely can be controlled
       by the _$_p_o_p___m_a_i_l___c_h_e_c_k (section 6.4.208  , page 131) variable, which defaults
       to every 60 seconds.

       If Mutt-ng was compiled with SSL support (by running the _c_o_n_f_i_g_u_r_e script with
       the _-_-_w_i_t_h_-_s_s_l flag), connections to POP3 servers can be encrypted. This natu-
       rally requires that the server supports SSL encrypted connections. To access a
       folder with POP3/SSL, you should use pops: prefix, ie: pops://[user-
       name@]popserver[:port]/.

       Another way to access your POP3 mail is the _f_e_t_c_h_-_m_a_i_l function (default: G).
       It allows to connect to _p_o_p___h_o_s_t (section 6.4.206  , page 130), fetch all your
       new mail and place it in the local _s_p_o_o_l_f_i_l_e (section 6.4.296  , page 151).
       After this point, Mutt-ng runs exactly as if the mail had always been local.

       NNoottee:: If you only need to fetch all messages to local mailbox you should con-
       sider using a specialized program, such as fetchmail

       _4_._1_4  _I_M_A_P _S_u_p_p_o_r_t _(_O_P_T_I_O_N_A_L_)

       If Mutt-ng was compiled with IMAP support (by running the _c_o_n_f_i_g_u_r_e script with
       the _-_-_e_n_a_b_l_e_-_i_m_a_p flag), it has the ability to work with folders located on a
       remote IMAP server.

       You can access the remote inbox by selecting the folder
       imap://imapserver/INBOX, where imapserver is the name of the IMAP server and
       INBOX is the special name for your spool mailbox on the IMAP server. If you
       want to access another mail folder at the IMAP server, you should use
       imap://imapserver/path/to/folder where path/to/folder is the path of the folder
       you want to access.

       You can select an alternative port by specifying it with the server, i.e.:
       imap://imapserver:port/INBOX.

       You can also specify different username for each folder, i.e.: imap://user-
       name@imapserver[:port]/INBOX.

       If Mutt-ng was compiled with SSL support (by running the _c_o_n_f_i_g_u_r_e script with
       the _-_-_w_i_t_h_-_s_s_l flag), connections to IMAP servers can be encrypted. This

       The Mutt Next Generation E-Mail Client                                       61

       naturally requires that the server supports SSL encrypted connections. To
       access a folder with IMAP/SSL, you should use imaps://[user-
       name@]imapserver[:port]/path/to/folder as your folder path.

       Pine-compatible notation is also supported, i.e.  {[user-
       name@]imapserver[:port][/ssl]}path/to/folder

       Note that not all servers use / as the hierarchy separator.  Mutt-ng should
       correctly notice which separator is being used by the server and convert paths
       accordingly.

       When browsing folders on an IMAP server, you can toggle whether to look at only
       the folders you are subscribed to, or all folders with the _t_o_g_g_l_e_-_s_u_b_s_c_r_i_b_e_d
       command.  See also the _$_i_m_a_p___l_i_s_t___s_u_b_s_c_r_i_b_e_d (section 6.4.97  , page 102) vari-
       able.

       Polling for new mail on an IMAP server can cause noticeable delays. So, you'll
       want to carefully tune the _$_i_m_a_p___m_a_i_l___c_h_e_c_k (section 6.4.99  , page 103) and
       _$_t_i_m_e_o_u_t (section 6.4.320  , page 159) variables.

       Note that if you are using mbox as the mail store on UW servers prior to
       v12.250, the server has been reported to disconnect a client if another client
       selects the same folder.

       _4_._1_4_._1  _T_h_e _F_o_l_d_e_r _B_r_o_w_s_e_r

       As of version 1.2, mutt supports browsing mailboxes on an IMAP server. This is
       mostly the same as the local file browser, with the following differences:

          +o Instead of file permissions, mutt displays the string "IMAP", possibly
            followed by the symbol "+", indicating that the entry contains both mes-
            sages and subfolders. On Cyrus-like servers folders will often contain
            both messages and subfolders.

          +o For the case where an entry can contain both messages and subfolders, the
            selection key (bound to enter by default) will choose to descend into the
            subfolder view. If you wish to view the messages in that folder, you must
            use view-file instead (bound to space by default).

          +o You can create, delete and rename mailboxes with the create-mailbox,
            delete-mailbox, and rename-mailbox commands (default bindings: C, d and r,
            respectively). You may also subscribe and unsubscribe to mailboxes (nor-
            mally these are bound to s and u, respectively).

       _4_._1_4_._2  _A_u_t_h_e_n_t_i_c_a_t_i_o_n

       Mutt-ng supports four authentication methods with IMAP servers: SASL, GSSAPI,
       CRAM-MD5, and LOGIN (there is a patch by Grant Edwards to add NTLM authentica-
       tion for you poor exchange users out there, but it has yet to be integrated
       into the main tree). There is also support for the pseudo-protocol ANONYMOUS,
       which allows you to log in to a public IMAP server without having an account.
       To use ANONYMOUS, simply make your username blank or "anonymous".

       SASL is a special super-authenticator, which selects among several protocols

       The Mutt Next Generation E-Mail Client                                       62

       (including GSSAPI, CRAM-MD5, ANONYMOUS, and DIGEST-MD5) the most secure method
       available on your host and the server. Using some of these methods (including
       DIGEST-MD5 and possibly GSSAPI), your entire session will be encrypted and
       invisible to those teeming network snoops. It is the best option if you have
       it. To use it, you must have the Cyrus SASL library installed on your system
       and compile mutt with the _-_-_w_i_t_h_-_s_a_s_l flag.

       Mutt-ng will try whichever methods are compiled in and available on the server,
       in the following order: SASL, ANONYMOUS, GSSAPI, CRAM-MD5, LOGIN.

       There are a few variables which control authentication:

          +o _$_i_m_a_p___u_s_e_r (section 6.4.105  , page 104) - controls the username under
            which you request authentication on the IMAP server, for all authentica-
            tors. This is overridden by an explicit username in the mailbox path (i.e.
            by using a mailbox name of the form {user@host}).

          +o _$_i_m_a_p___p_a_s_s (section 6.4.100  , page 103) - a password which you may pre-
            set, used by all authentication methods where a password is needed.

          +o _$_i_m_a_p___a_u_t_h_e_n_t_i_c_a_t_o_r_s (section 6.4.91  , page 101) - a colon-delimited list
            of IMAP authentication methods to try, in the order you wish to try them.
            If specified, this overrides mutt's default (attempt everything, in the
            order listed above).

       _4_._1_5  _N_N_T_P _S_u_p_p_o_r_t _(_O_P_T_I_O_N_A_L_)

       If compiled with ``--enable-nntp'' option, Mutt-ng can read news from a
       newsserver via NNTP.  You can open a newsgroup with the ``change-newsgroup''
       function from the index/pager which is by default bound to i.

       The Default newsserver can be obtained from the $NNTPSERVER environment vari-
       able. Like other news readers, info about subscribed newsgroups is saved in a
       file as specified by the _$_n_n_t_p___n_e_w_s_r_c (section 6.4.156  , page 119) variable.
       Article headers are cached and can be loaded from a file when a newsgroup is
       entered instead loading from newsserver; currently, this caching mechanism
       still is different from the header caching for maildir/IMAP.

       _4_._1_5_._1  _A_g_a_i_n_: _S_c_o_r_i_n_g

       Especially for Usenet, people often ask for advanced filtering and scoring
       functionality. Of course, mutt-ng has scoring and allows a killfile, too. How
       to use a killfile has been discussed in _M_e_s_s_a_g_e _s_c_o_r_i_n_g (section 3.25  , page
       38).

       What has not been discusses in detail is mutt-ng's built-in realname filter.
       For may newsreaders including those for ``advanced users'' like _s_l_r_n or _t_i_n,
       there are frequent request for such functionality. The solutions offered often
       are complicated regular expressions.

       In mutt-ng this is as easy as

       The Mutt Next Generation E-Mail Client                                       63

            score ~* =42

       This tells mutt-ng to apply a score of 42 to all messages whose sender speci-
       fied a valid realname and a valid email address. Using

            score !~* =42

       on the contrary applies a score of 42 to all messages _n_o_t matching those crite-
       ria which are very strict:

          +o Email addresses must be valid according to RFC 2822, see <ftp://ftp.rfc-
            editor.org/in-notes/rfc2822.txt>

          +o the name must consist of at least 2 fields whereby a field must not end in
            a dot. This means that ``Joe User'' and ``Joe A.  User'' are valid while
            ``J. User'' and ``J. A. User'' aren't.

          +o it's assumed that users are interested in reading their own mail and mail
            from people who they have defined an alias for so that those 2 groups of
            messages are excluded from the strict rules.

       _4_._1_6  _M_a_n_a_g_i_n_g _m_u_l_t_i_p_l_e _I_M_A_P_/_P_O_P_/_N_N_T_P _a_c_c_o_u_n_t_s _(_O_P_T_I_O_N_A_L_)

       If you happen to have accounts on multiple IMAP and/or POP servers, you may
       find managing all the authentication settings inconvenient and error-prone.
       The account-hook command may help. This hook works like folder-hook but is
       invoked whenever you access a remote mailbox (including inside the folder
       browser), not just when you open the mailbox.

       Some examples:

            account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
            account-hook imap://host1/ 'set imap_user=me1 imap_pass=foo'
            account-hook imap://host2/ 'set tunnel="ssh host2 /usr/libexec/imapd"'

       _4_._1_7  _S_t_a_r_t _a _W_W_W _B_r_o_w_s_e_r _o_n _U_R_L_s _(_E_X_T_E_R_N_A_L_)

       If a message contains URLs (_u_n_i_f_i_e_d _r_e_s_o_u_r_c_e _l_o_c_a_t_o_r = address in the WWW space
       like _h_t_t_p_:_/_/_w_w_w_._m_u_t_t_._o_r_g_/), it is efficient to get a menu with all the URLs and
       start a WWW browser on one of them.  This functionality is provided by the
       external urlview program which can be retrieved at

       The Mutt Next Generation E-Mail Client                                       64

       ftp://ftp.mutt.org/mutt/contrib/ and the configuration commands:

            macro index \cb |urlview\n
            macro pager \cb |urlview\n

       _4_._1_8  _C_o_m_p_r_e_s_s_e_d _f_o_l_d_e_r_s _S_u_p_p_o_r_t _(_O_P_T_I_O_N_A_L_)

       If Mutt-ng was compiled with compressed folders support (by running the _c_o_n_f_i_g_-
       _u_r_e script with the _-_-_e_n_a_b_l_e_-_c_o_m_p_r_e_s_s_e_d flag), Mutt can open folders stored in
       an arbitrary format, provided that the user has a script to convert from/to
       this format to one of the accepted.

       The most common use is to open compressed archived folders e.g. with gzip.

       In addition, the user can provide a script that gets a folder in an accepted
       format and appends its context to the folder in the user-defined format, which
       may be faster than converting the entire folder to the accepted format, append-
       ing to it and converting back to the user-defined format.

       There are three hooks defined (_o_p_e_n_-_h_o_o_k (section 4.18.1  , page 64), _c_l_o_s_e_-
       _h_o_o_k (section 4.18.2  , page 64) and _a_p_p_e_n_d_-_h_o_o_k (section 4.18.3  , page 65))
       which define commands to uncompress and compress a folder and to append mes-
       sages to an existing compressed folder respectively.

       For example:

            open-hook \\.gz$ "gzip -cd %f > %t"
            close-hook \\.gz$ "gzip -c %t > %f"
            append-hook \\.gz$ "gzip -c %t >> %f"

       You do not have to specify all of the commands. If you omit _a_p_p_e_n_d_-_h_o_o_k (sec-
       tion 4.18.3  , page 65), the folder will be open and closed again each time you
       will add to it. If you omit _c_l_o_s_e_-_h_o_o_k (section 4.18.2  , page 64) (or give
       empty command) , the folder will be open in the  mode. If you specify _a_p_p_e_n_d_-
       _h_o_o_k (section 4.18.3  , page 65) though you'll be able to append to the folder.

       Note that Mutt-ng will only try to use hooks if the file is not in one of the
       accepted formats. In particular, if the file is empty, mutt supposes it is not
       compressed. This is important because it allows the use of programs that do not
       have well defined extensions. Just use '.' as a regexp. But this may be sur-
       prising if your compressing script produces empty files. In this situation,
       unset _$_s_a_v_e___e_m_p_t_y (section 6.4.240  , page 138), so that the compressed file
       will be removed if you delete all of the messages.

       _4_._1_8_._1  _O_p_e_n _a _c_o_m_p_r_e_s_s_e_d _m_a_i_l_b_o_x _f_o_r _r_e_a_d_i_n_g

       Usage: open-hook _r_e_g_e_x_p '_c_o_m_m_a_n_d'

       The _c_o_m_m_a_n_d is the command that can be used for opening the folders whose names

       The Mutt Next Generation E-Mail Client                                       65

       match _r_e_g_e_x_p.

       The _c_o_m_m_a_n_d string is the printf-like format string, and it should accept two
       parameters: %f, which is replaced with the (compressed) folder name, and %t
       which is replaced with the name of the temporary folder to which to write.

       %f and %t can be repeated any number of times in the command string, and all of
       the entries are replaced with the appropriate folder name. In addition, %% is
       replaced by %, as in printf, and any other %anything is left as is.

       The _c_o_m_m_a_n_d should nnoott remove the original compressed file.  The _c_o_m_m_a_n_d should
       return non-zero exit status if it fails, so mutt knows something's wrong.

       Example:

            open-hook \\.gz$ "gzip -cd %f > %t"

       If the _c_o_m_m_a_n_d is empty, this operation is disabled for this file type.

       _4_._1_8_._2  _W_r_i_t_e _a _c_o_m_p_r_e_s_s_e_d _m_a_i_l_b_o_x

       Usage: close-hook _r_e_g_e_x_p '_c_o_m_m_a_n_d'

       This is used to close the folder that was open with the _o_p_e_n_-_h_o_o_k (section
       4.18.1  , page 64) command after some changes were made to it.

       The _c_o_m_m_a_n_d string is the command that can be used for closing the folders
       whose names match _r_e_g_e_x_p. It has the same format as in the _o_p_e_n_-_h_o_o_k (section
       4.18.1  , page 64) command. Temporary folder in this case is the folder previ-
       ously produced by the <_o_p_e_n_-_h_o_o_k (section 4.18.1  , page 64) command.

       The _c_o_m_m_a_n_d should nnoott remove the decompressed file. The _c_o_m_m_a_n_d should return
       non-zero exit status if it fails, so mutt knows something's wrong.

       Example:

            close-hook \\.gz$ "gzip -c %t > %f"

       If the _c_o_m_m_a_n_d is empty, this operation is disabled for this file type, and the
       file can only be open in the readonly mode.

       _c_l_o_s_e_-_h_o_o_k (section 4.18.2  , page 64) is not called when you exit from the
       folder if the folder was not changed.

       _4_._1_8_._3  _A_p_p_e_n_d _a _m_e_s_s_a_g_e _t_o _a _c_o_m_p_r_e_s_s_e_d _m_a_i_l_b_o_x

       Usage: append-hook _r_e_g_e_x_p '_c_o_m_m_a_n_d'

       This command is used for saving to an existing compressed folder.  The _c_o_m_m_a_n_d
       is the command that can be used for appending to the folders whose names match

       The Mutt Next Generation E-Mail Client                                       66

       _r_e_g_e_x_p. It has the same format as in the _o_p_e_n_-_h_o_o_k (section 4.18.1  , page 64)
       command.  The temporary folder in this case contains the messages that are
       being appended.

       The _c_o_m_m_a_n_d should nnoott remove the decompressed file. The _c_o_m_m_a_n_d should return
       non-zero exit status if it fails, so mutt knows something's wrong.

       Example:

            append-hook \\.gz$ "gzip -c %t >> %f"

       When _a_p_p_e_n_d_-_h_o_o_k (section 4.18.3  , page 65) is used, the folder is not opened,
       which saves time, but this means that we can not find out what the folder type
       is. Thus the default (_$_m_b_o_x___t_y_p_e (section 6.4.125  , page 111)) type is always
       supposed (i.e.  this is the format used for the temporary folder).

       If the file does not exist when you save to it, _c_l_o_s_e_-_h_o_o_k (section 4.18.2  ,
       page 64) is called, and not _a_p_p_e_n_d_-_h_o_o_k (section 4.18.3  , page 65). _a_p_p_e_n_d_-
       _h_o_o_k (section 4.18.3  , page 65) is only for appending to existing folders.

       If the _c_o_m_m_a_n_d is empty, this operation is disabled for this file type. In this
       case, the folder will be open and closed again (using _o_p_e_n_-_h_o_o_k (section
       4.18.1  , page 64) and _c_l_o_s_e_-_h_o_o_k (section 4.18.2  , page 64)respectively) each
       time you will add to it.

       _4_._1_8_._4  _E_n_c_r_y_p_t_e_d _f_o_l_d_e_r_s

       The compressed folders support can also be used to handle encrypted folders. If
       you want to encrypt a folder with PGP, you may want to use the following hooks:

            open-hook  \\.pgp$ "pgp -f < %f > %t"
            close-hook \\.pgp$ "pgp -fe YourPgpUserIdOrKeyId < %t > %f"

       Please note, that PGP does not support appending to an encrypted folder, so
       there is no append-hook defined.

       NNoottee:: the folder is temporary stored decrypted in the /tmp directory, where it
       can be read by your system administrator. So think about the security aspects
       of this.

       _5_.  _M_u_t_t_-_n_g_'_s _M_I_M_E _S_u_p_p_o_r_t

       Quite a bit of effort has been made to make Mutt-ng the premier text-mode MIME
       MUA.  Every effort has been made to provide the functionality that the discern-
       ing MIME user requires, and the conformance to the standards wherever possible.

       The Mutt Next Generation E-Mail Client                                       67

       When configuring Mutt-ng for MIME, there are two extra types of configuration
       files which Mutt-ng uses.  One is the mime.types file, which contains the map-
       ping of file extensions to IANA MIME types.  The other is the mailcap file,
       which specifies the external commands to use for handling specific MIME types.

       _5_._1  _U_s_i_n_g _M_I_M_E _i_n _M_u_t_t

       There are three areas/menus in Mutt-ng which deal with MIME, they are the pager
       (while viewing a message), the attachment menu and the compose menu.

       _5_._1_._1  _V_i_e_w_i_n_g _M_I_M_E _m_e_s_s_a_g_e_s _i_n _t_h_e _p_a_g_e_r

       When you select a message from the index and view it in the pager, Mutt decodes
       the message to a text representation.  Mutt-ng internally supports a number of
       MIME types, including text/plain, text/enriched, message/rfc822, and mes-
       sage/news.  In addition, the export controlled version of Mutt-ng recognizes a
       variety of PGP MIME types, including PGP/MIME and application/pgp.

       Mutt-ng will denote attachments with a couple lines describing them.  These
       lines are of the form:

            [-- Attachment #1: Description --]
            [-- Type: text/plain, Encoding: 7bit, Size: 10000 --]

       Where the Description is the description or filename given for the attachment,
       and the Encoding is one of 7bit/8bit/quoted-printable/base64/binary.

       If Mutt-ng cannot deal with a MIME type, it will display a message like:

            [-- image/gif is unsupported (use 'v' to view this part) --]

       _5_._1_._2  _T_h_e _A_t_t_a_c_h_m_e_n_t _M_e_n_u

       The default binding for view-attachments is `v', which displays the attachment
       menu for a message.  The attachment menu displays a list of the attachments in
       a message.  From the attachment menu, you can save, print, pipe, delete, and
       view attachments.  You can apply these operations to a group of attachments at
       once, by tagging the attachments and by using the ``tag-prefix'' operator.  You
       can also reply to the current message from this menu, and only the current
       attachment (or the attachments tagged) will be quoted in your reply.  You can
       view attachments as text, or view them using the mailcap viewer definition.

       Finally, you can apply the usual message-related functions (like _r_e_s_e_n_d_-_m_e_s_s_a_g_e
       (section 2.5.4  , page 13), and the reply and forward functions) to attachments
       of type message/rfc822.

       See the help on the attachment menu for more information.

       _5_._1_._3  _T_h_e _C_o_m_p_o_s_e _M_e_n_u

       The compose menu is the menu you see before you send a message.  It allows you
       to edit the recipient list, the subject, and other aspects of your message.  It

       The Mutt Next Generation E-Mail Client                                       68

       also contains a list of the attachments of your message, including the main
       body.  From this menu, you can print, copy, filter, pipe, edit, compose,
       review, and rename an attachment or a list of tagged attachments.  You can also
       modifying the attachment information, notably the type, encoding and descrip-
       tion.

       Attachments appear as follows:

            -   1 [text/plain, 7bit, 1K]             /tmp/mutt-euler-8082-0 <no description>
                2 [applica/x-gunzip, base64, 422K]   ~/src/mutt-0.85.tar.gz <no description>

       The '-' denotes that Mutt-ng will delete the file after sending (or postponing,
       or canceling) the message.  It can be toggled with the toggle-unlink command
       (default: u).  The next field is the MIME content-type, and can be changed with
       the edit-type command (default: ^T).  The next field is the encoding for the
       attachment, which allows a binary message to be encoded for transmission on
       7bit links.  It can be changed with the edit-encoding command (default: ^E).
       The next field is the size of the attachment, rounded to kilobytes or
       megabytes.  The next field is the filename, which can be changed with the
       rename-file command (default: R).  The final field is the description of the
       attachment, and can be changed with the edit-description command (default: d).

       _5_._2  _M_I_M_E _T_y_p_e _c_o_n_f_i_g_u_r_a_t_i_o_n _w_i_t_h _m_i_m_e_._t_y_p_e_s

       When you add an attachment to your mail message, Mutt-ng searches your personal
       mime.types file at ${HOME}/.mime.types, and then the system mime.types file at
       /usr/local/share/mutt/mime.types or /etc/mime.types

       The mime.types file consist of lines containing a MIME type and a space sepa-
       rated list of extensions.  For example:

            application/postscript          ps eps
            application/pgp                 pgp
            audio/x-aiff                    aif aifc aiff

       A sample mime.types file comes with the Mutt-ng distribution, and should con-
       tain most of the MIME types you are likely to use.

       If Mutt-ng can not determine the mime type by the extension of the file you
       attach, it will look at the file.  If the file is free of binary information,
       Mutt-ng will assume that the file is plain text, and mark it as text/plain.  If
       the file contains binary information, then Mutt-ng will mark it as applica-
       tion/octet-stream.  You can change the MIME type that Mutt-ng assigns to an
       attachment by using the edit-type command from the compose menu (default: ^T).
       The MIME type is actually a major mime type followed by the sub-type, separated
       by a '/'. 6 major types: application, text, image, video, audio, and model have
       been approved after various internet discussions. Mutt-ng recognises all of
       these if the appropriate entry is found in the mime.types file. It also recog-
       nises other major mime types, such as the chemical type that is widely used in
       the molecular modelling community to pass molecular data in various forms to

       The Mutt Next Generation E-Mail Client                                       69

       various molecular viewers. Non-recognised mime types should only be used if the
       recipient of the message is likely to be expecting such attachments.

       _5_._3  _M_I_M_E _V_i_e_w_e_r _c_o_n_f_i_g_u_r_a_t_i_o_n _w_i_t_h _m_a_i_l_c_a_p

       Mutt-ng supports RFC 1524 MIME Configuration, in particular the Unix specific
       format specified in Appendix A of RFC 1524.  This file format is commonly
       referred to as the mailcap format.  Many MIME compliant programs utilize the
       mailcap format, allowing you to specify handling for all MIME types in one
       place for all programs.  Programs known to use this format include Netscape,
       XMosaic, lynx and metamail.

       In order to handle various MIME types that Mutt-ng can not handle internally,
       Mutt-ng parses a series of external configuration files to find an external
       handler.  The default search string for these files is a colon delimited list
       set to

            ${HOME}/.mailcap:/usr/local/share/mutt/mailcap:/etc/mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap

       where $HOME is your home directory.

       In particular, the metamail distribution will install a mailcap file, usually
       as /usr/local/etc/mailcap, which contains some baseline entries.

       _5_._3_._1  _T_h_e _B_a_s_i_c_s _o_f _t_h_e _m_a_i_l_c_a_p _f_i_l_e

       A mailcap file consists of a series of lines which are comments, blank, or def-
       initions.

       A comment line consists of a # character followed by anything you want.

       A blank line is blank.

       A definition line consists of a content type, a view command, and any number of
       optional fields.  Each field of a definition line is divided by a semicolon ';'
       character.

       The content type is specified in the MIME standard type/subtype method.  For
       example, text/plain, text/html, image/gif, etc.  In addition, the mailcap for-
       mat includes two formats for wildcards, one using the special '*' subtype, the
       other is the implicit wild, where you only include the major type.  For exam-
       ple, image/*, or video, will match all image types and video types, respec-
       tively.

       The view command is a Unix command for viewing the type specified. There are
       two different types of commands supported. The default is to send the body of
       the MIME message to the command on stdin. You can change this behavior by using
       %s as a parameter to your view command.  This will cause Mutt-ng to save the
       body of the MIME message to a temporary file, and then call the view command
       with the %s replaced by the name of the temporary file. In both cases, Mutt-ng
       will turn over the terminal to the view program until the program quits, at

       The Mutt Next Generation E-Mail Client                                       70

       which time Mutt will remove the temporary file if it exists.

       So, in the simplest form, you can send a text/plain message to the external
       pager more on stdin:

            text/plain; more

       Or, you could send the message as a file:

            text/plain; more %s

       Perhaps you would like to use lynx to interactively view a text/html message:

            text/html; lynx %s

       In this case, lynx does not support viewing a file from stdin, so you must use
       the %s syntax.  NNoottee:: _S_o_m_e _o_l_d_e_r _v_e_r_s_i_o_n_s _o_f _l_y_n_x _c_o_n_t_a_i_n _a _b_u_g _w_h_e_r_e _t_h_e_y _w_i_l_l
       _c_h_e_c_k _t_h_e _m_a_i_l_c_a_p _f_i_l_e _f_o_r _a _v_i_e_w_e_r _f_o_r _t_e_x_t_/_h_t_m_l_.  _T_h_e_y _w_i_l_l _f_i_n_d _t_h_e _l_i_n_e
       _w_h_i_c_h _c_a_l_l_s _l_y_n_x_, _a_n_d _r_u_n _i_t_.  _T_h_i_s _c_a_u_s_e_s _l_y_n_x _t_o _c_o_n_t_i_n_u_o_u_s_l_y _s_p_a_w_n _i_t_s_e_l_f _t_o
       _v_i_e_w _t_h_e _o_b_j_e_c_t_.

       On the other hand, maybe you don't want to use lynx interactively, you just
       want to have it convert the text/html to text/plain, then you can use:

            text/html; lynx -dump %s | more

       Perhaps you wish to use lynx to view text/html files, and a pager on all other
       text formats, then you would use the following:

            text/html; lynx %s
            text/*; more

       This is the simplest form of a mailcap file.

       _5_._3_._2  _S_e_c_u_r_e _u_s_e _o_f _m_a_i_l_c_a_p

       The interpretation of shell meta-characters embedded in MIME parameters can
       lead to security problems in general.  Mutt-ng tries to quote parameters in
       expansion of %s syntaxes properly, and avoids risky characters by substituting
       them, see the _m_a_i_l_c_a_p___s_a_n_i_t_i_z_e (section 6.4.117  , page 109) variable.

       Although mutt's procedures to invoke programs with mailcap seem to be safe,
       there are other applications parsing mailcap, maybe taking less care of it.
       Therefore you should pay attention to the following rules:

       _K_e_e_p _t_h_e _%_-_e_x_p_a_n_d_o_s _a_w_a_y _f_r_o_m _s_h_e_l_l _q_u_o_t_i_n_g_.  Don't quote them with single or
       double quotes.  Mutt-ng does this for you, the right way, as should any other
       program which interprets mailcap.  Don't put them into backtick expansions.  Be
       highly careful with eval statements, and avoid them if possible at all.  Trying

       The Mutt Next Generation E-Mail Client                                       71

       to fix broken behaviour with quotes introduces new leaks - there is no alterna-
       tive to correct quoting in the first place.

       If you have to use the %-expandos' values in context where you need quoting or
       backtick expansions, put that value into a shell variable and reference the
       shell variable where necessary, as in the following example (using $charset
       inside the backtick expansion is safe, since it is not itself subject to any
       further expansion):

            text/test-mailcap-bug; cat %s; copiousoutput; test=charset=%{charset} \
                    && test "`echo $charset | tr '[A-Z]' '[a-z]'`" != iso-8859-1

       _5_._3_._3  _A_d_v_a_n_c_e_d _m_a_i_l_c_a_p _U_s_a_g_e

       _5_._3_._3_._1  _O_p_t_i_o_n_a_l _F_i_e_l_d_s

       In addition to the required content-type and view command fields, you can add
       semi-colon ';' separated fields to set flags and other options.  Mutt-ng recog-
       nizes the following optional fields:

             copiousoutput
                   This flag tells Mutt-ng that the command passes possibly large
                   amounts of text on stdout.  This causes Mutt-ng to invoke a pager
                   (either the internal pager or the external pager defined by the
                   pager variable) on the output of the view command.  Without this
                   flag, Mutt-ng assumes that the command is interactive.  One could
                   use this to replace the pipe to more in the lynx -dump example in
                   the Basic section:

                        text/html; lynx -dump %s ; copiousoutput

                   This will cause lynx to format the text/html output as text/plain
                   and Mutt-ng will use your standard pager to display the results.

             needsterminal
                   Mutt-ng uses this flag when viewing attachments with _a_u_t_o_v_i_e_w (sec-
                   tion 5.4  , page 74), in order to decide whether it should honor
                   the setting of the _$_w_a_i_t___k_e_y (section 6.4.334  , page 161) variable
                   or not.  When an attachment is viewed using an interactive program,
                   and the corresponding mailcap entry has a _n_e_e_d_s_t_e_r_m_i_n_a_l flag, Mutt-
                   ng will use _$_w_a_i_t___k_e_y (section 6.4.334  , page 161) and the exit
                   status of the program to decide if it will ask you to press a key
                   after the external program has exited.  In all other situations it
                   will not prompt you for a key.

             compose=<command>
                   This flag specifies the command to use to create a new attachment
                   of a specific MIME type.  Mutt-ng supports this from the compose
                   menu.

       The Mutt Next Generation E-Mail Client                                       72

             composetyped=<command>
                   This flag specifies the command to use to create a new attachment
                   of a specific MIME type.  This command differs from the compose
                   command in that mutt will expect standard MIME headers on the data.
                   This can be used to specify parameters, filename, description, etc.
                   for a new attachment.   Mutt-ng supports this from the compose
                   menu.

             print=<command>
                   This flag specifies the command to use to print a specific MIME
                   type.  Mutt-ng supports this from the attachment and compose menus.

             edit=<command>
                   This flag specifies the command to use to edit a specific MIME
                   type.  Mutt-ng supports this from the compose menu, and also uses
                   it to compose new attachments.  Mutt-ng will default to the defined
                   editor for text attachments.

             nametemplate=<template>
                   This field specifies the format for the file denoted by %s in the
                   command fields.  Certain programs will require a certain file
                   extension, for instance, to correctly view a file.  For instance,
                   lynx will only interpret a file as text/html if the file ends in
                   .html.  So, you would specify lynx as a text/html viewer with a
                   line in the mailcap file like:

                        text/html; lynx %s; nametemplate=%s.html

             test=<command>
                   This field specifies a command to run to test whether this mailcap
                   entry should be used.  The command is defined with the command
                   expansion rules defined in the next section.  If the command
                   returns 0, then the test passed, and Mutt-ng uses this entry.  If
                   the command returns non-zero, then the test failed, and Mutt-ng
                   continues searching for the right entry.  NNoottee:: _t_h_e _c_o_n_t_e_n_t_-_t_y_p_e
                   _m_u_s_t _m_a_t_c_h _b_e_f_o_r_e _M_u_t_t_-_n_g _p_e_r_f_o_r_m_s _t_h_e _t_e_s_t_.  For example:

                        text/html; netscape -remote 'openURL(%s)' ; test=RunningX
                        text/html; lynx %s

                   In this example, Mutt-ng will run the program RunningX which will
                   return 0 if the X Window manager is running, and non-zero if it
                   isn't.  If RunningX returns 0, then Mutt-ng will call netscape to
                   display the text/html object.  If RunningX doesn't return 0, then
                   Mutt-ng will go on to the next entry and use lynx to display the
                   text/html object.

       _5_._3_._3_._2  _S_e_a_r_c_h _O_r_d_e_r

       When searching for an entry in the mailcap file, Mutt-ng will search for the
       most useful entry for its purpose.  For instance, if you are attempting to
       print an image/gif, and you have the following entries in your mailcap file,

       The Mutt Next Generation E-Mail Client                                       73

       Mutt-ng will search for an entry with the print command:

            image/*;        xv %s
            image/gif;      ; print= anytopnm %s | pnmtops | lpr; \
                            nametemplate=%s.gif

       Mutt-ng will skip the image/* entry and use the image/gif entry with the print
       command.

       In addition, you can use this with _A_u_t_o_v_i_e_w (section 5.4  , page 74) to denote
       two commands for viewing an attachment, one to be viewed automatically, the
       other to be viewed interactively from the attachment menu.  In addition, you
       can then use the test feature to determine which viewer to use interactively
       depending on your environment.

            text/html;      netscape -remote 'openURL(%s)' ; test=RunningX
            text/html;      lynx %s; nametemplate=%s.html
            text/html;      lynx -dump %s; nametemplate=%s.html; copiousoutput

       For _A_u_t_o_v_i_e_w (section 5.4  , page 74), Mutt-ng will choose the third entry
       because of the copiousoutput tag.  For interactive viewing, Mutt will run the
       program RunningX to determine if it should use the first entry.  If the program
       returns non-zero, Mutt-ng will use the second entry for interactive viewing.

       _5_._3_._3_._3  _C_o_m_m_a_n_d _E_x_p_a_n_s_i_o_n

       The various commands defined in the mailcap files are passed to the /bin/sh
       shell using the system() function.  Before the command is passed to /bin/sh -c,
       it is parsed to expand various special parameters with information from Mutt-
       ng.  The keywords Mutt-ng expands are:

             %s
                   As seen in the basic mailcap section, this variable is expanded to
                   a filename specified by the calling program.  This file contains
                   the body of the message to view/print/edit or where the composing
                   program should place the results of composition.  In addition, the
                   use of this keyword causes Mutt-ng to not pass the body of the mes-
                   sage to the view/print/edit program on stdin.

             %t
                   Mutt-ng will expand %t to the text representation of the content
                   type of the message in the same form as the first parameter of the
                   mailcap definition line, ie text/html or image/gif.

             %{<parameter>}
                   Mutt-ng will expand this to the value of the specified parameter
                   from the Content-Type: line of the mail message.  For instance, if
                   Your mail message contains:

                        Content-Type: text/plain; charset=iso-8859-1

       The Mutt Next Generation E-Mail Client                                       74

                   then Mutt-ng will expand %{charset} to iso-8859-1.  The default
                   metamail mailcap file uses this feature to test the charset to
                   spawn an xterm using the right charset to view the message.

             \%
                   This will be replaced by a %

       Mutt-ng does not currently support the %F and %n keywords specified in RFC
       1524.  The main purpose of these parameters is for multipart messages, which is
       handled internally by Mutt-ng.

       _5_._3_._4  _E_x_a_m_p_l_e _m_a_i_l_c_a_p _f_i_l_e_s

       This mailcap file is fairly simple and standard:

            # I'm always running X :)
            video/*;        xanim %s > /dev/null
            image/*;        xv %s > /dev/null

            # I'm always running netscape (if my computer had more memory, maybe)
            text/html;      netscape -remote 'openURL(%s)'

       This mailcap file shows quite a number of examples:

       The Mutt Next Generation E-Mail Client                                       75

            # Use xanim to view all videos   Xanim produces a header on startup,
            # send that to /dev/null so I don't see it
            video/*;        xanim %s > /dev/null

            # Send html to a running netscape by remote
            text/html;      netscape -remote 'openURL(%s)'; test=RunningNetscape

            # If I'm not running netscape but I am running X, start netscape on the
            # object
            text/html;      netscape %s; test=RunningX

            # Else use lynx to view it as text
            text/html;      lynx %s

            # This version would convert the text/html to text/plain
            text/html;      lynx -dump %s; copiousoutput

            # I use enscript to print text in two columns to a page
            text/*;         more %s; print=enscript -2Gr %s

            # Netscape adds a flag to tell itself to view jpegs internally
            image/jpeg;xv %s; x-mozilla-flags=internal

            # Use xv to view images if I'm running X
            # In addition, this uses the \ to extend the line and set my editor
            # for images
            image/*;xv %s; test=RunningX; \
                    edit=xpaint %s

            # Convert images to text using the netpbm tools
            image/*;  (anytopnm %s | pnmscale -xysize 80 46 | ppmtopgm | pgmtopbm |
            pbmtoascii -1x2 ) 2>&1 ; copiousoutput

            # Send excel spreadsheets to my NT box
            application/ms-excel; open.pl %s

       _5_._4  _M_I_M_E _A_u_t_o_v_i_e_w

       In addition to explicitly telling Mutt-ng to view an attachment with the MIME
       viewer defined in the mailcap file, Mutt-ng has support for automatically view-
       ing MIME attachments while in the pager.

       To work, you must define a viewer in the mailcap file which uses the copi-
       ousoutput option to denote that it is non-interactive.  Usually, you also use
       the entry to convert the attachment to a text representation which you can view
       in the pager.

       You then use the auto_view muttrc command to list the content-types that you
       wish to view automatically.

       For instance, if you set auto_view to:

       The Mutt Next Generation E-Mail Client                                       76

            auto_view text/html application/x-gunzip application/postscript image/gif application/x-tar-gz

       Mutt-ng could use the following mailcap entries to automatically view attach-
       ments of these types.

            text/html;      lynx -dump %s; copiousoutput; nametemplate=%s.html
            image/*;        anytopnm %s | pnmscale -xsize 80 -ysize 50 | ppmtopgm | pgmtopbm | pbmtoascii ; copiousoutput
            application/x-gunzip;   gzcat; copiousoutput
            application/x-tar-gz; gunzip -c %s | tar -tf - ; copiousoutput
            application/postscript; ps2ascii %s; copiousoutput

       ``unauto_view'' can be used to remove previous entries from the autoview list.
       This can be used with message-hook to autoview messages based on size, etc.
       ``unauto_view *'' will remove all previous entries.

       _5_._5  _M_I_M_E _M_u_l_t_i_p_a_r_t_/_A_l_t_e_r_n_a_t_i_v_e

       Mutt-ng has some heuristics for determining which attachment of a multi-
       part/alternative type to display.  First, mutt will check the alternative_order
       list to determine if one of the available types is preferred.  The alterna-
       tive_order list consists of a number of MIME types in order, including support
       for implicit and explicit wildcards, for example:

            alternative_order text/enriched text/plain text application/postscript image/*

       Next, mutt will check if any of the types have a defined _a_u_t_o___v_i_e_w (section
       5.4  , page 74), and use that.  Failing that, Mutt-ng will look for any text
       type.  As a last attempt, mutt will look for any type it knows how to handle.

       To remove a MIME type from the alternative_order list, use the unalterna-
       tive_order command.

       _5_._6  _M_I_M_E _L_o_o_k_u_p

       Mutt-ng's mime_lookup list specifies a list of mime-types that should not be
       treated according to their mailcap entry.  This option is designed to deal with
       binary types such as application/octet-stream.  When an attachment's mime-type
       is listed in mime_lookup, then the extension of the filename will be compared
       to the list of extensions in the mime.types file.  The mime-type associated
       with this extension will then be used to process the attachment according to
       the rules in the mailcap file and according to any other configuration options
       (such as auto_view) specified.  Common usage would be:

            mime_lookup application/octet-stream application/X-Lotus-Manuscript

       In addition, the unmime_lookup command may be used to disable this feature for

       The Mutt Next Generation E-Mail Client                                       77

       any particular mime-type if it had been set, for example, in a global muttrc.

       _6_.  _R_e_f_e_r_e_n_c_e

       _6_._1  _C_o_m_m_a_n_d _l_i_n_e _o_p_t_i_o_n_s

       Running mutt with no arguments will make Mutt-ng attempt to read your spool
       mailbox.  However, it is possible to read other mailboxes and to send messages
       from the command line as well.

            -A   expand an alias
            -a      attach a file to a message
            -b      specify a blind carbon-copy (BCC) address
            -c      specify a carbon-copy (Cc) address
            -D      print the value of all variables on stdout
            -e      specify a config command to be run after initialization files are read
            -f      specify a mailbox to load
            -F      specify an alternate file to read initialization commands
            -h      print help on command line options
            -H      specify a draft file from which to read a header and body
            -i      specify a file to include in a message composition
            -m      specify a default mailbox type
            -n      do not read the system Muttngrc
            -p      recall a postponed message
            -Q      query a configuration variable
            -R      open mailbox in read-only mode
            -s      specify a subject (enclose in quotes if it contains spaces)
            -v      show version number and compile-time definitions
            -x      simulate the mailx(1) compose mode
            -y      show a menu containing the files specified by the mailboxes command
            -z      exit immediately if there are no messages in the mailbox
            -Z      open the first folder with new message,exit immediately if none

       To read messages in a mailbox

       mutt [ -nz ] [ -F _m_u_t_t_r_c ] [ -m _t_y_p_e ] [ -f _m_a_i_l_b_o_x ]

       To compose a new message

       mutt [ -n ] [ -F _m_u_t_t_r_c ] [ -a _f_i_l_e ] [ -c _a_d_d_r_e_s_s ] [ -i _f_i_l_e_n_a_m_e ] [ -s _s_u_b_-
       _j_e_c_t ] _a_d_d_r_e_s_s [ _a_d_d_r_e_s_s ... ]

       Mutt-ng also supports a ``batch'' mode to send prepared messages.  Simply redi-
       rect input from the file you wish to send.  For example,

       mutt -s 'data set for run #2' professor@bigschool.edu < ~/run2.dat

       The Mutt Next Generation E-Mail Client                                       78

       This command will send a message to ``professor@bigschool.edu'' with a subject
       of ``data set for run #2''.  In the body of the message will be the contents of
       the file ``~/run2.dat''.

       _6_._2  _P_a_t_t_e_r_n_s

            ~A              all messages
            ~b EXPR         messages which contain EXPR in the message body
            ~B EXPR         messages which contain EXPR in the whole message
            ~c USER         messages carbon-copied to USER
            ~C EXPR         message is either to: or cc: EXPR
            ~D              deleted messages
            ~d [MIN]-[MAX]  messages with ``date-sent'' in a Date range
            ~E              expired messages
            ~e EXPR         message which contains EXPR in the ``Sender'' field
            ~F              flagged messages
            ~f USER         messages originating from USER
            ~g              cryptographically signed messages
            ~G              cryptographically encrypted messages
            ~H EXPR         messages with a spam attribute matching EXPR
            ~h EXPR         messages which contain EXPR in the message header
            ~k              message contains PGP key material
            ~i ID           message which match ID in the ``Message-ID'' field
            ~L EXPR         message is either originated or received by EXPR
            ~l              message is addressed to a known mailing list
            ~m [MIN]-[MAX]  message in the range MIN to MAX *)
            ~n [MIN]-[MAX]  messages with a score in the range MIN to MAX *)
            ~N              new messages
            ~O              old messages
            ~p              message is addressed to you (consults alternates)
            ~P              message is from you (consults alternates)
            ~Q              messages which have been replied to
            ~R              read messages
            ~r [MIN]-[MAX]  messages with ``date-received'' in a Date range
            ~S              superseded messages
            ~s SUBJECT      messages having SUBJECT in the ``Subject'' field.
            ~T              tagged messages
            ~t USER         messages addressed to USER
            ~U              unread messages
            ~v              message is part of a collapsed thread.
            ~V              cryptographically verified messages
            ~w EXPR         messages which contain EXPR in the `Newsgroups' field
                            (if compiled with NNTP support)
            ~x EXPR         messages which contain EXPR in the `References' field
            ~y EXPR         messages which contain EXPR in the `X-Label' field
            ~z [MIN]-[MAX]  messages with a size in the range MIN to MAX *)
            ~=              duplicated messages (see $duplicate_threads)
            ~$              unreferenced messages (requires threaded view)
            ~*              ``From'' contains realname and (syntactically) valid
                            address (excluded are addresses matching against
                            alternates or any alias)

       The Mutt Next Generation E-Mail Client                                       79

       Where EXPR, USER, ID, and SUBJECT are _r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n_s (section 4.1  , page
       44).  Special attention has to be made when using regular expressions inside of
       patterns.  Specifically, Mutt-ng's parser for these patterns will strip one
       level of backslash (\), which is normally used for quoting.  If it is your
       intention to use a backslash in the regular expression, you will need to use
       two backslashes instead (\\).

       *) The forms <[MAX], >[MIN], [MIN]- and -[MAX] are allowed, too.

       _6_._3  _C_o_n_f_i_g_u_r_a_t_i_o_n _C_o_m_m_a_n_d_s

       The following are the commands understood by mutt.

          +o _a_c_c_o_u_n_t_-_h_o_o_k (section 4.16  , page 62) _p_a_t_t_e_r_n _c_o_m_m_a_n_d

          +o _a_l_i_a_s (section 3.3  , page 23) _k_e_y _a_d_d_r_e_s_s [ , _a_d_d_r_e_s_s, ... ]

          +o _u_n_a_l_i_a_s (section 3.3  , page 23) [ * | _k_e_y ... ]

          +o _a_l_t_e_r_n_a_t_e_s (section 3.10  , page 30) _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

          +o _u_n_a_l_t_e_r_n_a_t_e_s (section 3.10  , page 30) [ * | _r_e_g_e_x_p ... ]

          +o _a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r (section 5.5  , page 75) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _u_n_a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r (section 5.5  , page 75) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _a_p_p_e_n_d_-_h_o_o_k (section 4.18.3  , page 65) _r_e_g_e_x_p _c_o_m_m_a_n_d

          +o _a_u_t_o___v_i_e_w (section 5.4  , page 74) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _u_n_a_u_t_o___v_i_e_w (section 5.4  , page 74) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _b_i_n_d (section 3.4  , page 24) _m_a_p _k_e_y _f_u_n_c_t_i_o_n

          +o _c_h_a_r_s_e_t_-_h_o_o_k (section 3.5  , page 26) _a_l_i_a_s _c_h_a_r_s_e_t

          +o _c_l_o_s_e_-_h_o_o_k (section 4.18.2  , page 64) _r_e_g_e_x_p _c_o_m_m_a_n_d

          +o _c_o_l_o_r (section 3.8  , page 27) _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d [ _r_e_g_e_x_p ]

          +o _u_n_c_o_l_o_r (section 3.8  , page 27) _i_n_d_e_x _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

          +o _e_x_e_c (section 3.24  , page 37) _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ... ]

          +o _f_c_c_-_h_o_o_k (section 3.18  , page 35) _p_a_t_t_e_r_n _m_a_i_l_b_o_x

          +o _f_c_c_-_s_a_v_e_-_h_o_o_k (section 3.19  , page 36) _p_a_t_t_e_r_n _m_a_i_l_b_o_x

          +o _f_o_l_d_e_r_-_h_o_o_k (section 3.6  , page 26) _p_a_t_t_e_r_n _c_o_m_m_a_n_d

       The Mutt Next Generation E-Mail Client                                       80

          +o _h_d_r___o_r_d_e_r (section 3.16  , page 35) _h_e_a_d_e_r [ _h_e_a_d_e_r ... ]

          +o _u_n_h_d_r___o_r_d_e_r (section 3.16  , page 35) _h_e_a_d_e_r [ _h_e_a_d_e_r ... ]

          +o _i_c_o_n_v_-_h_o_o_k (section 3.5  , page 26) _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t

          +o _i_g_n_o_r_e (section 3.9  , page 30) _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

          +o _u_n_i_g_n_o_r_e (section 3.9  , page 30) _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

          +o _l_i_s_t_s (section 3.12  , page 32) _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

          +o _u_n_l_i_s_t_s (section 3.12  , page 32) _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

          +o _m_a_c_r_o (section 3.7  , page 27) _m_e_n_u _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]

          +o _m_a_i_l_b_o_x_e_s (section 3.14  , page 33) _f_i_l_e_n_a_m_e [ _f_i_l_e_n_a_m_e ... ]

          +o _m_b_o_x_-_h_o_o_k (section 3.13  , page 33) _p_a_t_t_e_r_n _m_a_i_l_b_o_x

          +o _m_e_s_s_a_g_e_-_h_o_o_k (section 3.21  , page 37) _p_a_t_t_e_r_n _c_o_m_m_a_n_d

          +o _m_i_m_e___l_o_o_k_u_p (section 5.6  , page 75) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _u_n_m_i_m_e___l_o_o_k_u_p (section 5.6  , page 75) _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ... ]

          +o _m_o_n_o (section 3.8  , page 27) _o_b_j_e_c_t _a_t_t_r_i_b_u_t_e [ _r_e_g_e_x_p ]

          +o _u_n_m_o_n_o (section 3.8  , page 27) _i_n_d_e_x _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

          +o _m_y___h_d_r (section 3.15  , page 34) _s_t_r_i_n_g

          +o _u_n_m_y___h_d_r (section 3.15  , page 34) _f_i_e_l_d [ _f_i_e_l_d ... ]

          +o _o_p_e_n_-_h_o_o_k (section 4.18.1  , page 64) _r_e_g_e_x_p _c_o_m_m_a_n_d

          +o _c_r_y_p_t_-_h_o_o_k (section 3.22  , page 37) _p_a_t_t_e_r_n _k_e_y_-_i_d

          +o _p_u_s_h (section 3.23  , page 37) _s_t_r_i_n_g

          +o _r_e_s_e_t (section 3.27  , page 41) _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

          +o _s_a_v_e_-_h_o_o_k (section 3.17  , page 35) _r_e_g_e_x_p _f_i_l_e_n_a_m_e

          +o _s_c_o_r_e (section 3.25  , page 38) _p_a_t_t_e_r_n _v_a_l_u_e

          +o _u_n_s_c_o_r_e (section 3.25  , page 38) _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ... ]

          +o _s_e_n_d_-_h_o_o_k (section 3.20  , page 36) _r_e_g_e_x_p _c_o_m_m_a_n_d

          +o _r_e_p_l_y_-_h_o_o_k (section , page ) _r_e_g_e_x_p _c_o_m_m_a_n_d

          +o _s_e_t (section 3.27  , page 41) [no|inv]_v_a_r_i_a_b_l_e[=_v_a_l_u_e] [ _v_a_r_i_a_b_l_e ... ]

       The Mutt Next Generation E-Mail Client                                       81

          +o _u_n_s_e_t (section 3.27  , page 41) _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

          +o _s_o_u_r_c_e (section 3.28  , page 42) _f_i_l_e_n_a_m_e

          +o _s_p_a_m (section 3.26  , page 39) _p_a_t_t_e_r_n _f_o_r_m_a_t

          +o _n_o_s_p_a_m (section 3.26  , page 39) _p_a_t_t_e_r_n

          +o _s_u_b_s_c_r_i_b_e (section 3.12  , page 32) _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

          +o _u_n_s_u_b_s_c_r_i_b_e (section 3.12  , page 32) _r_e_g_e_x_p [ _r_e_g_e_x_p ... ]

          +o _t_o_g_g_l_e (section 3.27  , page 41) _v_a_r_i_a_b_l_e [_v_a_r_i_a_b_l_e ... ]

          +o _u_n_h_o_o_k (section 3.29  , page 42) _h_o_o_k_-_t_y_p_e

       _6_._4  _C_o_n_f_i_g_u_r_a_t_i_o_n _v_a_r_i_a_b_l_e_s

       _6_._4_._1  _a_b_o_r_t___n_o_s_u_b_j_e_c_t

       Type: quadoption

       Default: ask-yes

       If set to _y_e_s, when composing messages and no subject is given at the subject
       prompt, composition will be aborted.  If set to _n_o, composing messages with no
       subject given at the subject prompt will never be aborted.

       _6_._4_._2  _a_b_o_r_t___u_n_m_o_d_i_f_i_e_d

       Type: quadoption

       Default: yes

       If set to _y_e_s, composition will automatically abort after editing the message
       body if no changes are made to the file (this check only happens after the
       _f_i_r_s_t edit of the file).  When set to _n_o, composition will never be aborted.

       _6_._4_._3  _a_l_i_a_s___f_i_l_e

       Type: path

       Default: '~/.muttngrc'

       The default file in which to save aliases created by the ``_c_r_e_a_t_e_-_a_l_i_a_s (sec-
       tion 2.5.4  , page 11)'' function.

       NNoottee:: Mutt-ng will not automatically source this file; you must explicitly use
       the ``_s_o_u_r_c_e (section 3.28  , page 42)'' command for it to be executed.

       _6_._4_._4  _a_l_i_a_s___f_o_r_m_a_t

       Type: string

       The Mutt Next Generation E-Mail Client                                       82

       Default: '%4n %2f %t %-10a   %r'

       Specifies the format of the data displayed for the ``alias'' menu. The follow-
       ing printf(3)-style sequences are available:

             %a
                   alias name

             %f
                   flags - currently, a 'd' for an alias marked for deletion

             %n
                   index number

             %r
                   address which alias expands to

             %t
                   character which indicates if the alias is tagged for inclusion

       _6_._4_._5  _a_l_l_o_w___8_b_i_t

       Type: boolean

       Default: yes

       Controls whether 8-bit data is converted to 7-bit using either quoted-printable
       or base64 encoding when sending mail.

       _6_._4_._6  _a_l_l_o_w___a_n_s_i

       Type: boolean

       Default: no

       Controls whether ANSI color codes in messages (and color tags in rich text mes-
       sages) are to be interpreted.  Messages containing these codes are rare, but if
       this option is set, their text will be colored accordingly. Note that this may
       override your color choices, and even present a security problem, since a mes-
       sage could include a line like ``[-- PGP output follows ...' and give it the
       same color as your attachment color.

       _6_._4_._7  _a_r_r_o_w___c_u_r_s_o_r

       Type: boolean

       Default: no

       When _s_e_t, an arrow (``->'') will be used to indicate the current entry in menus
       instead of highlighting the whole line.  On slow network or modem links this
       will make response faster because there is less that has to be redrawn on the
       screen when moving to the next or previous entries in the menu.

       The Mutt Next Generation E-Mail Client                                       83

       _6_._4_._8  _a_s_c_i_i___c_h_a_r_s

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will use plain ASCII characters when displaying thread and
       attachment trees, instead of the default ACS characters.

       _6_._4_._9  _a_s_k_b_c_c

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will prompt you for blind-carbon-copy (Bcc) recipients before
       editing an outgoing message.

       _6_._4_._1_0  _a_s_k_c_c

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will prompt you for carbon-copy (Cc) recipients before editing
       the body of an outgoing message.

       _6_._4_._1_1  _a_s_s_u_m_e_d___c_h_a_r_s_e_t

       Type: string

       Default: 'us-ascii'

       This variable is a colon-separated list of character encoding schemes for mes-
       sages without character encoding indication.  Header field values and message
       body content without character encoding indication would be assumed that they
       are written in one of this list.  By default, all the header fields and message
       body without any charset indication are assumed to be in us-ascii.

       For example, Japanese users might prefer this:

       set assumed_charset='iso-2022-jp:euc-jp:shift_jis:utf-8'

       However, only the first content is valid for the message body.  This variable
       is valid only if _$_s_t_r_i_c_t___m_i_m_e (section 6.4.310  , page 156) is unset.

       _6_._4_._1_2  _a_t_t_a_c_h___f_o_r_m_a_t

       Type: string

       Default: '%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] '

       This variable describes the format of the ``attachment'' menu.  The following
       printf(3)-style sequences are understood:

       The Mutt Next Generation E-Mail Client                                       84

             %C
                   charset

             %c
                   requires charset conversion (n or c)

             %D
                   deleted flag

             %d
                   description

             %e
                   MIME Content-Transfer-Encoding: header field

             %f
                   filename

             %I
                   MIME Content-Disposition: header field (I=inline, A=attachment)

             %m
                   major MIME type

             %M
                   MIME subtype

             %n
                   attachment number

             %s
                   size

             %t
                   tagged flag

             %T
                   graphic tree characters

             %u
                   unlink (=to delete) flag

             %>X
                   right justify the rest of the string and pad with character 'X'

             %|X
                   pad to the end of the line with character 'X'

       _6_._4_._1_3  _a_t_t_a_c_h___s_e_p

       Type: string

       Default: '\n'

       The Mutt Next Generation E-Mail Client                                       85

       The separator to add between attachments when operating (saving, printing, pip-
       ing, etc) on a list of tagged attachments.

       _6_._4_._1_4  _a_t_t_a_c_h___s_p_l_i_t

       Type: boolean

       Default: yes

       If this variable is _u_n_s_e_t, when operating (saving, printing, piping, etc) on a
       list of tagged attachments, Mutt-ng will concatenate the attachments and will
       operate on them as a single attachment. The ``_$_a_t_t_a_c_h___s_e_p (section 6.4.13  ,
       page 83)'' separator is added after each attachment. When _s_e_t, Mutt-ng will
       operate on the attachments one by one.

       _6_._4_._1_5  _a_t_t_r_i_b_u_t_i_o_n

       Type: string

       Default: 'On %d, %n wrote:'

       This is the string that will precede a message which has been included in a
       reply.  For a full listing of defined printf(3)-like sequences see the section
       on ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105)''.

       _6_._4_._1_6  _a_u_t_o___t_a_g

       Type: boolean

       Default: no

       When _s_e_t, functions in the _i_n_d_e_x menu which affect a message will be applied to
       all tagged messages (if there are any).  When unset, you must first use the
       ``tag-prefix'' function (default: ';') to make the next function apply to all
       tagged messages.

       _6_._4_._1_7  _a_u_t_o_e_d_i_t

       Type: boolean

       Default: no

       When _s_e_t along with ``_$_e_d_i_t___h_e_a_d_e_r_s (section 6.4.54  , page 92)'', Mutt-ng will
       skip the initial send-menu and allow you to immediately begin editing the body
       of your message.  The send-menu may still be accessed once you have finished
       editing the body of your message.

       Also see ``_$_f_a_s_t___r_e_p_l_y (section 6.4.60  , page 93)''.

       _6_._4_._1_8  _b_e_e_p

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                       86

       When this variable is _s_e_t, Mutt-ng will beep when an error occurs.

       _6_._4_._1_9  _b_e_e_p___n_e_w

       Type: boolean

       Default: no

       When this variable is _s_e_t, Mutt-ng will beep whenever it prints a message noti-
       fying you of new mail.  This is independent of the setting of the ``_$_b_e_e_p (sec-
       tion 6.4.18  , page 84)'' variable.

       _6_._4_._2_0  _b_o_u_n_c_e

       Type: quadoption

       Default: ask-yes

       Controls whether you will be asked to confirm bouncing messages.  If set to _y_e_s
       you don't get asked if you want to bounce a message. Setting this variable to
       _n_o is not generally useful, and thus not recommended, because you are unable to
       bounce messages.

       _6_._4_._2_1  _b_o_u_n_c_e___d_e_l_i_v_e_r_e_d

       Type: boolean

       Default: yes

       When this variable is _s_e_t, Mutt-ng will include Delivered-To: header fields
       when bouncing messages.  Postfix users may wish to _u_n_s_e_t this variable.

       _6_._4_._2_2  _b_r_a_i_l_l_e___f_r_i_e_n_d_l_y

       Type: boolean

       Default: no

       When this variable is set, mutt will place the cursor at the beginning of the
       current line in menus, even when the arrow_cursor variable is unset, making it
       easier for blind persons using Braille displays to follow these menus.  The
       option is disabled by default because many visual terminals don't permit making
       the cursor invisible.

       _6_._4_._2_3  _c_e_r_t_i_f_i_c_a_t_e___f_i_l_e

       Type: path

       Default: '~/.mutt_certificates'

       Availability: SSL or GNUTLS

       This variable specifies the file where the certificates you trust are saved.
       When an unknown certificate is encountered, you are asked if you accept it or

       The Mutt Next Generation E-Mail Client                                       87

       not. If you accept it, the certificate can also be saved in this file and fur-
       ther connections are automatically accepted.

       You can also manually add CA certificates in this file. Any server certificate
       that is signed with one of these CA certificates are also automatically
       accepted.

       Example: set certificate_file=~/.muttng/certificates

       _6_._4_._2_4  _c_h_a_r_s_e_t

       Type: string

       Default: ''

       Character set your terminal uses to display and enter textual data.

       _6_._4_._2_5  _c_h_e_c_k___n_e_w

       Type: boolean

       Default: yes

       NNoottee:: this option only affects _m_a_i_l_d_i_r and _M_H style mailboxes.

       When _s_e_t, Mutt-ng will check for new mail delivered while the mailbox is open.
       Especially with MH mailboxes, this operation can take quite some time since it
       involves scanning the directory and checking each file to see if it has already
       been looked at.  If it's _u_n_s_e_t, no check for new mail is performed while the
       mailbox is open.

       _6_._4_._2_6  _c_o_l_l_a_p_s_e___u_n_r_e_a_d

       Type: boolean

       Default: yes

       When _u_n_s_e_t, Mutt-ng will not collapse a thread if it contains any unread mes-
       sages.

       _6_._4_._2_7  _c_o_m_p_o_s_e___f_o_r_m_a_t

       Type: string

       Default: '-- Mutt-ng: Compose  [Approx. msg size: %l   Atts: %a]%>-'

       Controls the format of the status line displayed in the ``compose'' menu.  This
       string is similar to ``_$_s_t_a_t_u_s___f_o_r_m_a_t (section 6.4.307  , page 154)'', but has
       its own set of printf(3)-like sequences:

             %a
                   total number of attachments

       The Mutt Next Generation E-Mail Client                                       88

             %h
                   local hostname

             %l
                   approximate size (in bytes) of the current message

             %v
                   Mutt-ng version string

       See the text describing the ``_$_s_t_a_t_u_s___f_o_r_m_a_t (section 6.4.307  , page 154)''
       option for more information on how to set ``_$_c_o_m_p_o_s_e___f_o_r_m_a_t (section 6.4.27  ,
       page 86)''.

       _6_._4_._2_8  _c_o_n_f_i_g___c_h_a_r_s_e_t

       Type: string

       Default: ''

       When defined, Mutt-ng will recode commands in rc files from this encoding.

       _6_._4_._2_9  _c_o_n_f_i_r_m_a_p_p_e_n_d

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will prompt for confirmation when appending messages to an
       existing mailbox.

       _6_._4_._3_0  _c_o_n_f_i_r_m_c_r_e_a_t_e

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will prompt for confirmation when saving messages to a mail-
       box which does not yet exist before creating it.

       _6_._4_._3_1  _c_o_n_n_e_c_t___t_i_m_e_o_u_t

       Type: number

       Default: 30

       Causes Mutt-ng to timeout a network connection (for IMAP or POP) after this
       many seconds if the connection is not able to be established.  A negative value
       causes Mutt-ng to wait indefinitely for the connection to succeed.

       _6_._4_._3_2  _c_o_n_t_e_n_t___t_y_p_e

       Type: string

       Default: 'text/plain'

       The Mutt Next Generation E-Mail Client                                       89

       Sets the default Content-Type: header field for the body of newly composed mes-
       sages.

       _6_._4_._3_3  _c_o_p_y

       Type: quadoption

       Default: yes

       This variable controls whether or not copies of your outgoing messages will be
       saved for later references.  Also see ``_$_r_e_c_o_r_d (section 6.4.230  , page
       136)'', ``_$_s_a_v_e___n_a_m_e (section 6.4.241  , page 138)'', ``_$_f_o_r_c_e___n_a_m_e (section
       6.4.68  , page 96)'' and ``_f_c_c_-_h_o_o_k (section 3.18  , page 35)''.

       _6_._4_._3_4  _c_r_y_p_t___a_u_t_o_e_n_c_r_y_p_t

       Type: boolean

       Default: no

       Setting this variable will cause Mutt-ng to always attempt to PGP encrypt out-
       going messages.  This is probably only useful in connection to the _s_e_n_d_-_h_o_o_k
       command.  It can be overridden by use of the _p_g_p_-_m_e_n_u, when encryption is not
       required or signing is requested as well.  If ``_$_s_m_i_m_e___i_s___d_e_f_a_u_l_t (section
       6.4.277  , page 147)'' is _s_e_t, then OpenSSL is used instead to create S/MIME
       messages and settings can be overridden by use of the _s_m_i_m_e_-_m_e_n_u.  (Crypto
       only)

       _6_._4_._3_5  _c_r_y_p_t___a_u_t_o_p_g_p

       Type: boolean

       Default: yes

       This variable controls whether or not Mutt-ng may automatically enable PGP
       encryption/signing for messages.  See also ``_$_c_r_y_p_t___a_u_t_o_e_n_c_r_y_p_t (section
       6.4.34  , page 88)'', ``_$_c_r_y_p_t___r_e_p_l_y_e_n_c_r_y_p_t (section 6.4.38  , page 89)'',
       ``_$_c_r_y_p_t___a_u_t_o_s_i_g_n (section 6.4.36  , page 88)'', ``_$_c_r_y_p_t___r_e_p_l_y_s_i_g_n (section
       6.4.39  , page 89)'' and ``_$_s_m_i_m_e___i_s___d_e_f_a_u_l_t (section 6.4.277  , page 147)''.

       _6_._4_._3_6  _c_r_y_p_t___a_u_t_o_s_i_g_n

       Type: boolean

       Default: no

       Setting this variable will cause Mutt-ng to always attempt to cryptographically
       sign outgoing messages.  This can be overridden by use of the _p_g_p_-_m_e_n_u, when
       signing is not required or encryption is requested as well. If
       ``_$_s_m_i_m_e___i_s___d_e_f_a_u_l_t (section 6.4.277  , page 147)'' is _s_e_t, then OpenSSL is
       used instead to create S/MIME messages and settings can be overridden by use of
       the _s_m_i_m_e_-_m_e_n_u.  (Crypto only)

       The Mutt Next Generation E-Mail Client                                       90

       _6_._4_._3_7  _c_r_y_p_t___a_u_t_o_s_m_i_m_e

       Type: boolean

       Default: yes

       This variable controls whether or not Mutt-ng may automatically enable S/MIME
       encryption/signing for messages. See also ``_$_c_r_y_p_t___a_u_t_o_e_n_c_r_y_p_t (section
       6.4.34  , page 88)'', ``_$_c_r_y_p_t___r_e_p_l_y_e_n_c_r_y_p_t (section 6.4.38  , page 89)'',
       ``_$_c_r_y_p_t___a_u_t_o_s_i_g_n (section 6.4.36  , page 88)'', ``_$_c_r_y_p_t___r_e_p_l_y_s_i_g_n (section
       6.4.39  , page 89)'' and ``_$_s_m_i_m_e___i_s___d_e_f_a_u_l_t (section 6.4.277  , page 147)''.

       _6_._4_._3_8  _c_r_y_p_t___r_e_p_l_y_e_n_c_r_y_p_t

       Type: boolean

       Default: yes

       If _s_e_t, automatically PGP or OpenSSL encrypt replies to messages which are
       encrypted.  (Crypto only)

       _6_._4_._3_9  _c_r_y_p_t___r_e_p_l_y_s_i_g_n

       Type: boolean

       Default: no

       If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are signed.

       NNoottee:: this does not work on messages that are encrypted aanndd signed!  (Crypto
       only)

       _6_._4_._4_0  _c_r_y_p_t___r_e_p_l_y_s_i_g_n_e_n_c_r_y_p_t_e_d

       Type: boolean

       Default: no

       If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are
       encrypted. This makes sense in combination with ``_$_c_r_y_p_t___r_e_p_l_y_e_n_c_r_y_p_t (section
       6.4.38  , page 89)'', because it allows you to sign all messages which are
       automatically encrypted.  This works around the problem noted in
       ``_$_c_r_y_p_t___r_e_p_l_y_s_i_g_n (section 6.4.39  , page 89)'', that Mutt-ng is not able to
       find out whether an encrypted message is also signed.  (Crypto only)

       _6_._4_._4_1  _c_r_y_p_t___t_i_m_e_s_t_a_m_p

       Type: boolean

       Default: yes

       If _s_e_t, Mutt-ng will include a time stamp in the lines surrounding PGP or
       S/MIME output, so spoofing such lines is more difficult.  If you are using col-
       ors to mark these lines, and rely on these, you may _u_n_s_e_t this setting.

       The Mutt Next Generation E-Mail Client                                       91

       (Crypto only)

       _6_._4_._4_2  _c_r_y_p_t___u_s_e___g_p_g_m_e

       Type: boolean

       Default: no

       This variable controls the use the GPGME enabled crypto backends.  If it is _s_e_t
       and Mutt-ng was build with gpgme support, the gpgme code for S/MIME and PGP
       will be used instead of the classic code.

       NNoottee: You need to use this option in your .muttngrc configuration file as it
       won't have any effect when used interactively.

       _6_._4_._4_3  _c_r_y_p_t___v_e_r_i_f_y___s_i_g

       Type: quadoption

       Default: yes

       If ``_y_e_s'', always attempt to verify PGP or S/MIME signatures.  If ``_a_s_k'', ask
       whether or not to verify the signature.  If ``_n_o'', never attempt to verify
       cryptographic signatures.  (Crypto only)

       _6_._4_._4_4  _d_a_t_e___f_o_r_m_a_t

       Type: string

       Default: '!%a, %b %d, %Y at %I:%M:%S%p %Z'

       This variable controls the format of the date printed by the ``%d'' sequence in
       ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105)''.  This is passed to strftime(3)
       to process the date.

       Unless the first character in the string is a bang (``!''), the month and week
       day names are expanded according to the locale specified in the variable
       ``_$_l_o_c_a_l_e (section 6.4.114  , page 108)''. If the first character in the string
       is a bang, the bang is discarded, and the month and week day names in the rest
       of the string are expanded in the _C locale (that is in US English).

       _6_._4_._4_5  _d_e_f_a_u_l_t___h_o_o_k

       Type: string

       Default: '~f %s !~P | (~P ~C %s)'

       This variable controls how send-hooks, message-hooks, save-hooks, and fcc-hooks
       will be interpreted if they are specified with only a simple regexp, instead of
       a matching pattern.  The hooks are expanded when they are declared, so a hook
       will be interpreted according to the value of this variable at the time the
       hook is declared.  The default value matches if the message is either from a
       user matching the regular expression given, or if it is from you (if the from
       address matches ``alternates'') and is to or cc'ed to a user matching the given

       The Mutt Next Generation E-Mail Client                                       92

       regular expression.

       _6_._4_._4_6  _d_e_l_e_t_e

       Type: quadoption

       Default: ask-yes

       Controls whether or not messages are really deleted when closing or synchroniz-
       ing a mailbox.  If set to _y_e_s, messages marked for deleting will automatically
       be purged without prompting.  If set to _n_o, messages marked for deletion will
       be kept in the mailbox.

       _6_._4_._4_7  _d_e_l_e_t_e___u_n_t_a_g

       Type: boolean

       Default: yes

       If this option is _s_e_t, Mutt-ng will untag messages when marking them for dele-
       tion.  This applies when you either explicitly delete a message, or when you
       save it to another folder.

       _6_._4_._4_8  _d_i_g_e_s_t___c_o_l_l_a_p_s_e

       Type: boolean

       Default: yes

       If this option is _s_e_t, Mutt-ng's received-attachments menu will not show the
       subparts of individual messages in a multipart/digest.  To see these subparts,
       press 'v' on that menu.

       _6_._4_._4_9  _d_i_s_p_l_a_y___f_i_l_t_e_r

       Type: path

       Default: ''

       When _s_e_t, specifies a command used to filter messages.  When a message is
       viewed it is passed as standard input to _$_d_i_s_p_l_a_y___f_i_l_t_e_r (section 6.4.49  ,
       page 91), and the filtered message is read from the standard output.

       _6_._4_._5_0  _d_o_t_l_o_c_k___p_r_o_g_r_a_m

       Type: path

       Default: '/opt/freebsd4/mutt-ng/bin/muttng_dotlock'

       Availability: Standalone and Dotlock

       Contains the path of the muttng_dotlock(1) binary to be used by Mutt-ng.

       The Mutt Next Generation E-Mail Client                                       93

       _6_._4_._5_1  _d_s_n___n_o_t_i_f_y

       Type: string

       Default: ''

       NNoottee:: you should not enable this unless you are using Sendmail 8.8.x or
       greater.

       This variable sets the request for when notification is returned.  The string
       consists of a comma separated list (no spaces!) of one or more of the follow-
       ing: _n_e_v_e_r, to never request notification, _f_a_i_l_u_r_e, to request notification on
       transmission failure, _d_e_l_a_y, to be notified of message delays, _s_u_c_c_e_s_s, to be
       notified of successful transmission.

       Example: set dsn_notify='failure,delay'

       _6_._4_._5_2  _d_s_n___r_e_t_u_r_n

       Type: string

       Default: ''

       NNoottee:: you should not enable this unless you are using Sendmail 8.8.x or
       greater.

       This variable controls how much of your message is returned in DSN messages.
       It may be set to either _h_d_r_s to return just the message header, or _f_u_l_l to
       return the full message.

       Example: set dsn_return=hdrs

       _6_._4_._5_3  _d_u_p_l_i_c_a_t_e___t_h_r_e_a_d_s

       Type: boolean

       Default: yes

       This variable controls whether Mutt-ng, when sorting by threads, threads mes-
       sages with the same Message-Id: header field together.  If it is _s_e_t, it will
       indicate that it thinks they are duplicates of each other with an equals sign
       in the thread diagram.

       _6_._4_._5_4  _e_d_i_t___h_e_a_d_e_r_s

       Type: boolean

       Default: no

       This option allows you to edit the header of your outgoing messages along with
       the body of your message.

       _6_._4_._5_5  _e_d_i_t_o_r

       The Mutt Next Generation E-Mail Client                                       94

       Type: path

       Default: ''

       This variable specifies which editor is used by Mutt-ng.  It defaults to the
       value of the $VISUAL, or $EDITOR, environment variable, or to the string 'vi'
       if neither of those are set.

       _6_._4_._5_6  _e_n_c_o_d_e___f_r_o_m

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will quoted-printable encode messages when they contain the
       string ``From '' (note the trailing space) in the beginning of a line. Useful
       to avoid the tampering certain mail delivery and transport agents tend to do
       with messages.

       _6_._4_._5_7  _e_n_t_r_o_p_y___f_i_l_e

       Type: path

       Default: ''

       Availability: SSL

       The file which includes random data that is used to initialize SSL library
       functions.

       _6_._4_._5_8  _e_n_v_e_l_o_p_e___f_r_o_m

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will try to derive the message's _e_n_v_e_l_o_p_e sender from the
       ``From:'' header field. Note that this information is passed to the sendmail
       command using the ``-f' command line switch, so don't set this option if you
       are using that switch in _$_s_e_n_d_m_a_i_l (section 6.4.247  , page 140) yourself, or
       if the sendmail on your machine doesn't support that command line switch.

       _6_._4_._5_9  _e_s_c_a_p_e

       Type: string

       Default: '~'

       Escape character to use for functions in the builtin editor.

       _6_._4_._6_0  _f_a_s_t___r_e_p_l_y

       Type: boolean

       The Mutt Next Generation E-Mail Client                                       95

       Default: no

       When _s_e_t, the initial prompt for recipients and subject are skipped when reply-
       ing to messages, and the initial prompt for subject is skipped when forwarding
       messages.

       NNoottee:: this variable has no effect when the ``_$_a_u_t_o_e_d_i_t (section 6.4.17  , page
       84)'' variable is _s_e_t.

       _6_._4_._6_1  _f_c_c___a_t_t_a_c_h

       Type: boolean

       Default: yes

       This variable controls whether or not attachments on outgoing messages are
       saved along with the main body of your message.

       _6_._4_._6_2  _f_c_c___c_l_e_a_r

       Type: boolean

       Default: no

       When this variable is _s_e_t, FCCs will be stored unencrypted and unsigned, even
       when the actual message is encrypted and/or signed.  (PGP only)

       _6_._4_._6_3  _f_i_l_e___c_h_a_r_s_e_t

       Type: string

       Default: ''

       This variable is a colon-separated list of character encoding schemes for text
       file attatchments.  If _u_n_s_e_t, _$_c_h_a_r_s_e_t (section 6.4.24  , page 86) value will
       be used instead.  For example, the following configuration would work for
       Japanese text handling:

       set file_charset='iso-2022-jp:euc-jp:shift_jis:utf-8'

       Note: ``iso-2022-*'' must be put at the head of the value as shown above if
       included.

       _6_._4_._6_4  _f_o_l_d_e_r

       Type: path

       Default: '~/Mail'

       Specifies the default location of your mailboxes.  A ``+'' or ``='' at the
       beginning of a pathname will be expanded to the value of this variable.  Note
       that if you change this variable from the default value you need to make sure
       that the assignment occurs _b_e_f_o_r_e you use ``+'' or ``='' for any other vari-
       ables since expansion takes place during the ``set'' command.

       The Mutt Next Generation E-Mail Client                                       96

       _6_._4_._6_5  _f_o_l_d_e_r___f_o_r_m_a_t

       Type: string

       Default: '%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f'

       This variable allows you to customize the file browser display to your personal
       taste.  This string is similar to ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page
       105)'', but has its own set of printf(3)-like sequences:

             %C
                   current file number

             %d
                   date/time folder was last modified

             %f
                   filename

             %F
                   file permissions

             %g
                   group name (or numeric gid, if missing)

             %l
                   number of hard links

             %N
                   N if folder has new mail, blank otherwise

             %s
                   size in bytes

             %t
                   * if the file is tagged, blank otherwise

             %u
                   owner name (or numeric uid, if missing)

             %>X
                   right justify the rest of the string and pad with character 'X'

             %|X
                   pad to the end of the line with character 'X'

       _6_._4_._6_6  _f_o_l_l_o_w_u_p___t_o

       Type: boolean

       Default: yes

       Controls whether or not the Mail-Followup-To: header field is generated when
       sending mail.  When _s_e_t, Mutt-ng will generate this field when you are replying

       The Mutt Next Generation E-Mail Client                                       97

       to a known mailing list, specified with the ``subscribe'' or ``_l_i_s_t_s (section
       3.12  , page 32)'' commands or detected by common mailing list headers.

       This field has two purposes.  First, preventing you from receiving duplicate
       copies of replies to messages which you send to mailing lists. Second, ensuring
       that you do get a reply separately for any messages sent to known lists to
       which you are not subscribed.  The header will contain only the list's address
       for subscribed lists, and both the list address and your own email address for
       unsubscribed lists.  Without this header, a group reply to your message sent to
       a subscribed list will be sent to both the list and your address, resulting in
       two copies of the same email for you.

       _6_._4_._6_7  _f_o_r_c_e___b_u_f_f_y___c_h_e_c_k

       Type: boolean

       Default: no

       When _s_e_t, it causes Mutt-ng to check for new mail when the _b_u_f_f_y_-_l_i_s_t command
       is invoked. When _u_n_s_e_t, _b_u_f_f_y___l_i_s_t will just list all mailboxes which are
       already known to have new mail.

       Also see the following variables: ``_$_t_i_m_e_o_u_t (section 6.4.320  , page 159)'',
       ``_$_m_a_i_l___c_h_e_c_k (section 6.4.115  , page 109)'' and ``_$_i_m_a_p___m_a_i_l___c_h_e_c_k (section
       6.4.99  , page 103)''.

       _6_._4_._6_8  _f_o_r_c_e___n_a_m_e

       Type: boolean

       Default: no

       This variable is similar to ``_$_s_a_v_e___n_a_m_e (section 6.4.241  , page 138)'',
       except that Mutt-ng will store a copy of your outgoing message by the username
       of the address you are sending to even if that mailbox does not exist.

       Also see the ``_$_r_e_c_o_r_d (section 6.4.230  , page 136)'' variable.

       _6_._4_._6_9  _f_o_r_w_a_r_d___d_e_c_o_d_e

       Type: boolean

       Default: yes

       Controls the decoding of complex MIME messages into text/plain when forwarding
       a message.  The message header is also RFC2047 decoded.  This variable is only
       used, if ``_$_m_i_m_e___f_o_r_w_a_r_d (section 6.4.136  , page 113)'' is _u_n_s_e_t, otherwise
       ``_$_m_i_m_e___f_o_r_w_a_r_d___d_e_c_o_d_e (section 6.4.137  , page 113)'' is used instead.

       _6_._4_._7_0  _f_o_r_w_a_r_d___d_e_c_r_y_p_t

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                       98

       Controls the handling of encrypted messages when forwarding a message.  When
       _s_e_t, the outer layer of encryption is stripped off.  This variable is only used
       if ``_$_m_i_m_e___f_o_r_w_a_r_d (section 6.4.136  , page 113)'' is _s_e_t and ``_$_m_i_m_e___f_o_r_-
       _w_a_r_d___d_e_c_o_d_e (section 6.4.137  , page 113)'' is _u_n_s_e_t.  (PGP only)

       _6_._4_._7_1  _f_o_r_w_a_r_d___e_d_i_t

       Type: quadoption

       Default: yes

       This quadoption controls whether or not the user is automatically placed in the
       editor when forwarding messages.  For those who always want to forward with no
       modification, use a setting of _n_o.

       _6_._4_._7_2  _f_o_r_w_a_r_d___f_o_r_m_a_t

       Type: string

       Default: '[%a: %s]'

       This variable controls the default subject when forwarding a message.  It uses
       the same format sequences as the ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page
       105)'' variable.

       _6_._4_._7_3  _f_o_r_w_a_r_d___q_u_o_t_e

       Type: boolean

       Default: no

       When _s_e_t forwarded messages included in the main body of the message (when
       ``_$_m_i_m_e___f_o_r_w_a_r_d (section 6.4.136  , page 113)'' is _u_n_s_e_t) will be quoted using
       ``_$_i_n_d_e_n_t___s_t_r_i_n_g (section 6.4.109  , page 105)''.

       _6_._4_._7_4  _f_r_o_m

       Type: e-mail address

       Default: ''

       This variable contains a default from address.  It can be overridden using
       my_hdr (including from send-hooks) and ``_$_r_e_v_e_r_s_e___n_a_m_e (section 6.4.236  , page
       137)''.  This variable is ignored if ``_$_u_s_e___f_r_o_m (section 6.4.329  , page
       160)'' is unset.

       E.g. you can use send-hook Mutt-ng-devel@lists.berlios.de 'my_hdr From: Foo Bar
       <foo@bar.fb>' when replying to the mutt-ng developer's mailing list and Mutt-ng
       takes this email address.

       Defaults to the contents of the environment variable $EMAIL.

       _6_._4_._7_5  _g_e_c_o_s___m_a_s_k

       The Mutt Next Generation E-Mail Client                                       99

       Type: regular expression

       Default: '^[^,]*'

       A regular expression used by Mutt-ng to parse the GECOS field of a password
       entry when expanding the alias.  By default the regular expression is set to
       ``^[^,]*'' which will return the string up to the first ``,'' encountered.  If
       the GECOS field contains a string like 'lastname, firstname' then you should
       do: set gecos_mask='.*'.

       This can be useful if you see the following behavior: you address a e-mail to
       user ID stevef whose full name is Steve Franklin.  If Mutt-ng expands stevef to
       ``Franklin'' stevef@foo.bar then you should set the gecos_mask to a regular
       expression that will match the whole name so Mutt-ng will expand ``Franklin''
       to ``Franklin, Steve''.

       _6_._4_._7_6  _h_d_r_s

       Type: boolean

       Default: yes

       When _u_n_s_e_t, the header fields normally added by the ``_m_y___h_d_r (section 3.15  ,
       page 34)'' command are not created.  This variable _m_u_s_t be _u_n_s_e_t before compos-
       ing a new message or replying in order to take effect.  If _s_e_t, the user
       defined header fields are added to every new message.

       _6_._4_._7_7  _h_e_a_d_e_r

       Type: boolean

       Default: no

       When _s_e_t, this variable causes Mutt-ng to include the header of the message you
       are replying to into the edit buffer.  The ``_$_w_e_e_d (section 6.4.335  , page
       162)'' setting applies.

       _6_._4_._7_8  _h_e_a_d_e_r___c_a_c_h_e

       Type: path

       Default: ''

       Availability: Header Cache

       The _$_h_e_a_d_e_r___c_a_c_h_e (section 6.4.78  , page 98) variable points to the header
       cache database.

       If _$_h_e_a_d_e_r___c_a_c_h_e (section 6.4.78  , page 98) points to a directory it will con-
       tain a header cache database  per folder. If _$_h_e_a_d_e_r___c_a_c_h_e (section 6.4.78  ,
       page 98) points to a file that file will be a single global header cache. By
       default it is _u_n_s_e_t so no header caching will be used.

       The Mutt Next Generation E-Mail Client                                      100

       _6_._4_._7_9  _h_e_a_d_e_r___c_a_c_h_e___c_o_m_p_r_e_s_s

       Type: boolean

       Default: no

       If enabled the header cache will be compressed. So only one fifth of the usual
       diskspace is used, but the uncompression can result in a slower open of the
       cached folder.

       _6_._4_._8_0  _h_e_l_p

       Type: boolean

       Default: yes

       When _s_e_t, help lines describing the bindings for the major functions provided
       by each menu are displayed on the first line of the screen.

       NNoottee:: The binding will not be displayed correctly if the function is bound to a
       sequence rather than a single keystroke.  Also, the help line may not be
       updated if a binding is changed while Mutt-ng is running.  Since this variable
       is primarily aimed at new users, neither of these should present a major prob-
       lem.

       _6_._4_._8_1  _h_i_d_d_e_n___h_o_s_t

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will skip the host name part of ``_$_h_o_s_t_n_a_m_e (section
       6.4.89  , page 100)'' variable when adding the domain part to addresses.  This
       variable does not affect the generation of Message-ID: header fields, and it
       will not lead to the cut-off of first-level domains.

       _6_._4_._8_2  _h_i_d_e___l_i_m_i_t_e_d

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will not show the presence of messages that are hidden by
       limiting, in the thread tree.

       _6_._4_._8_3  _h_i_d_e___m_i_s_s_i_n_g

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will not show the presence of missing messages in the thread
       tree.

       The Mutt Next Generation E-Mail Client                                      101

       _6_._4_._8_4  _h_i_d_e___t_h_r_e_a_d___s_u_b_j_e_c_t

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will not show the subject of messages in the thread tree that
       have the same subject as their parent or closest previously displayed sibling.

       _6_._4_._8_5  _h_i_d_e___t_o_p___l_i_m_i_t_e_d

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will not show the presence of messages that are hidden by
       limiting, at the top of threads in the thread tree.  Note that when _$_h_i_d_e___m_i_s_s_-
       _i_n_g (section 6.4.83  , page 99) is set, this option will have no effect.

       _6_._4_._8_6  _h_i_d_e___t_o_p___m_i_s_s_i_n_g

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will not show the presence of missing messages at the top of
       threads in the thread tree.  Note that when _$_h_i_d_e___l_i_m_i_t_e_d (section 6.4.82  ,
       page 99) is _s_e_t, this option will have no effect.

       _6_._4_._8_7  _h_i_s_t_o_r_y

       Type: number

       Default: 10

       This variable controls the size (in number of strings remembered) of the string
       history buffer. The buffer is cleared each time the variable is changed.

       _6_._4_._8_8  _h_o_n_o_r___f_o_l_l_o_w_u_p___t_o

       Type: quadoption

       Default: yes

       This variable controls whether or not a Mail-Followup-To: header field is hon-
       ored when group-replying to a message.

       _6_._4_._8_9  _h_o_s_t_n_a_m_e

       Type: string

       Default: ''

       Specifies the hostname to use after the ``@'' in local e-mail addresses and

       The Mutt Next Generation E-Mail Client                                      102

       during generation of Message-Id: headers.

       Please be sure to really know what you are doing when changing this variable to
       configure a custom domain part of Message-IDs.

       _6_._4_._9_0  _i_g_n_o_r_e___l_i_s_t___r_e_p_l_y___t_o

       Type: boolean

       Default: no

       Affects the behaviour of the _r_e_p_l_y function when replying to messages from
       mailing lists.  When _s_e_t, if the ``Reply-To:'' header field is set to the same
       value as the ``To:'' header field, Mutt-ng assumes that the ``Reply-To:''
       header field was set by the mailing list to automate responses to the list, and
       will ignore this field.  To direct a response to the mailing list when this
       option is set, use the _l_i_s_t_-_r_e_p_l_y function; _g_r_o_u_p_-_r_e_p_l_y will reply to both the
       sender and the list.

       _6_._4_._9_1  _i_m_a_p___a_u_t_h_e_n_t_i_c_a_t_o_r_s

       Type: string

       Default: ''

       Availability: IMAP

       This is a colon-delimited list of authentication methods Mutt-ng may attempt to
       use to log in to an IMAP server, in the order Mutt-ng should try them.  Authen-
       tication methods are either ``login'' or the right side of an IMAP ``AUTH=''
       capability string, e.g. ``digest-md5'', ``gssapi'' or ``cram-md5''. This param-
       eter is case-insensitive.

       If this parameter is _u_n_s_e_t (the default) Mutt-ng will try all available meth-
       ods, in order from most-secure to least-secure.

       Example: set imap_authenticators='gssapi:cram-md5:login'

       NNoottee:: Mutt-ng will only fall back to other authentication methods if the previ-
       ous methods are unavailable. If a method is available but authentication fails,
       Mutt-ng will not connect to the IMAP server.

       _6_._4_._9_2  _i_m_a_p___c_h_e_c_k___s_u_b_s_c_r_i_b_e_d

       Type: boolean

       Default: no

       When _s_e_t, mutt will fetch the set of subscribed folders from your server on
       connection, and add them to the set of mailboxes it polls for new mail. See
       also the ``_m_a_i_l_b_o_x_e_s (section 3.14  , page 33)'' command.

       _6_._4_._9_3  _i_m_a_p___d_e_l_i_m___c_h_a_r_s

       The Mutt Next Generation E-Mail Client                                      103

       Type: string

       Default: '/.'

       Availability: IMAP

       This contains the list of characters which you would like to treat as folder
       separators for displaying IMAP paths. In particular it helps in using the '='
       shortcut for your _$_f_o_l_d_e_r (section 6.4.64  , page 94) variable.

       _6_._4_._9_4  _i_m_a_p___h_e_a_d_e_r_s

       Type: string

       Default: ''

       Availability: IMAP

       Mutt-ng requests these header fields in addition to the default headers (``DATE
       FROM SUBJECT TO CC MESSAGE-ID REFERENCES CONTENT-TYPE CONTENT-DESCRIPTION IN-
       REPLY-TO REPLY-TO LINES X-LABEL'') from IMAP servers before displaying the
       ``index'' menu. You may want to add more headers for spam detection.

       NNoottee:: This is a space separated list.

       _6_._4_._9_5  _i_m_a_p___h_o_m_e___n_a_m_e_s_p_a_c_e

       Type: string

       Default: ''

       Availability: IMAP

       You normally want to see your personal folders alongside your INBOX in the IMAP
       browser. If you see something else, you may set this variable to the IMAP path
       to your folders.

       _6_._4_._9_6  _i_m_a_p___k_e_e_p_a_l_i_v_e

       Type: number

       Default: 900

       Availability: IMAP

       This variable specifies the maximum amount of time in seconds that Mutt-ng will
       wait before polling open IMAP connections, to prevent the server from closing
       them before Mutt-ng has finished with them.

       The default is well within the RFC-specified minimum amount of time (30 min-
       utes) before a server is allowed to do this, but in practice the RFC does get
       violated every now and then.

       Reduce this number if you find yourself getting disconnected from your IMAP

       The Mutt Next Generation E-Mail Client                                      104

       server due to inactivity.

       _6_._4_._9_7  _i_m_a_p___l_i_s_t___s_u_b_s_c_r_i_b_e_d

       Type: boolean

       Default: no

       Availability: IMAP

       This variable configures whether IMAP folder browsing will look for only sub-
       scribed folders or all folders.  This can be toggled in the IMAP browser with
       the _t_o_g_g_l_e_-_s_u_b_s_c_r_i_b_e_d function.

       _6_._4_._9_8  _i_m_a_p___l_o_g_i_n

       Type: string

       Default: ''

       Availability: IMAP

       Your login name on the IMAP server.

       This variable defaults to the value of ``_$_i_m_a_p___u_s_e_r (section 6.4.105  , page
       104).''

       _6_._4_._9_9  _i_m_a_p___m_a_i_l___c_h_e_c_k

       Type: number

       Default: 300

       This variable configures how often (in seconds) Mutt-ng should look for new
       mail in IMAP folders. This is split from the ``_m_a_i_l___c_h_e_c_k (section 6.4.115  ,
       page 109)'' variable to generate less traffic and get more accurate information
       for local folders.

       _6_._4_._1_0_0  _i_m_a_p___p_a_s_s

       Type: string

       Default: ''

       Availability: IMAP

       Specifies the password for your IMAP account.  If _u_n_s_e_t, Mutt-ng will prompt
       you for your password when you invoke the fetch-mail function.

       WWaarrnniinngg: you should only use this option when you are on a fairly secure
       machine, because the superuser can read your configuration even if you are the
       only one who can read the file.

       The Mutt Next Generation E-Mail Client                                      105

       _6_._4_._1_0_1  _i_m_a_p___p_a_s_s_i_v_e

       Type: boolean

       Default: yes

       Availability: IMAP

       When _s_e_t, Mutt-ng will not open new IMAP connections to check for new mail.
       Mutt-ng will only check for new mail over existing IMAP connections.  This is
       useful if you don't want to be prompted to user/password pairs on Mutt-ng invo-
       cation, or if opening the connection is slow.

       _6_._4_._1_0_2  _i_m_a_p___p_e_e_k

       Type: boolean

       Default: yes

       Availability: IMAP

       If _s_e_t, Mutt-ng will avoid implicitly marking your mail as read whenever you
       fetch a message from the server. This is generally a good thing, but can make
       closing an IMAP folder somewhat slower. This option exists to appease speed
       freaks.

       _6_._4_._1_0_3  _i_m_a_p___r_e_c_o_n_n_e_c_t

       Type: quadoption

       Default: ask-yes

       Availability: IMAP

       Controls whether or not Mutt-ng will try to reconnect to IMAP server when the
       connection is lost.

       _6_._4_._1_0_4  _i_m_a_p___s_e_r_v_e_r_n_o_i_s_e

       Type: boolean

       Default: yes

       Availability: IMAP

       When _s_e_t, Mutt-ng will display warning messages from the IMAP server as error
       messages. Since these messages are often harmless, or generated due to configu-
       ration problems on the server which are out of the users' hands, you may wish
       to suppress them at some point.

       _6_._4_._1_0_5  _i_m_a_p___u_s_e_r

       Type: string

       The Mutt Next Generation E-Mail Client                                      106

       Default: ''

       Availability: IMAP

       The name of the user whose mail you intend to access on the IMAP server.

       This variable defaults to your user name on the local machine.

       _6_._4_._1_0_6  _i_m_p_l_i_c_i_t___a_u_t_o_v_i_e_w

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will look for a mailcap entry with the ``copiousoutput'' flag
       set for _e_v_e_r_y MIME attachment it doesn't have an internal viewer defined for.
       If such an entry is found, Mutt-ng will use the viewer defined in that entry to
       convert the body part to text form.

       _6_._4_._1_0_7  _i_n_c_l_u_d_e

       Type: quadoption

       Default: ask-yes

       Controls whether or not a copy of the message(s) you are replying to is
       included in your reply.

       _6_._4_._1_0_8  _i_n_c_l_u_d_e___o_n_l_y_f_i_r_s_t

       Type: boolean

       Default: no

       Controls whether or not Mutt-ng includes only the first attachment of the mes-
       sage you are replying.

       _6_._4_._1_0_9  _i_n_d_e_n_t___s_t_r_i_n_g

       Type: string

       Default: '> '

       Specifies the string to prepend to each line of text quoted in a message to
       which you are replying.  You are strongly encouraged not to change this value,
       as it tends to agitate the more fanatical netizens.

       _6_._4_._1_1_0  _i_n_d_e_x___f_o_r_m_a_t

       Type: string

       Default: '%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s'

       This variable allows you to customize the message index display to your

       The Mutt Next Generation E-Mail Client                                      107

       personal taste.

       ``Format strings'' are similar to the strings used in the ``C'' function
       printf(3) to format output (see the man page for more detail).  The following
       sequences are defined in Mutt-ng:

             %a
                   address of the author

             %A
                   reply-to address (if present; otherwise: address of author)

             %b
                   filename of the original message folder (think mailBox)

             %B
                   the list to which the letter was sent, or else the folder name
                   (%b).

             %c
                   number of characters (bytes) in the message

             %C
                   current message number

             %d
                   date and time of the message in the format specified by ``date_for-
                   mat'' converted to sender's time zone

             %D
                   date and time of the message in the format specified by ``date_for-
                   mat'' converted to the local time zone

             %e
                   current message number in thread

             %E
                   number of messages in current thread

             %f
                   entire From: line (address + real name)

             %F
                   author name, or recipient name if the message is from you

             %H
                   spam attribute(s) of this message

             %g
                   newsgroup name (if compiled with nntp support)

             %i
                   message-id of the current message

       The Mutt Next Generation E-Mail Client                                      108

             %l
                   number of lines in the message (does not work with maildir, mh, and
                   possibly IMAP folders)

             %L
                   If an address in the To or CC header field matches an address
                   defined by the users ``subscribe'' command, this displays 'To
                   <list-name>', otherwise the same as %F.

             %m
                   total number of message in the mailbox

             %M
                   number of hidden messages if the thread is collapsed.

             %N
                   message score

             %n
                   author's real name (or address if missing)

             %O
                   (_O_riginal save folder)  Where Mutt-ng would formerly have stashed
                   the message: list name or recipient name if no list

             %s
                   subject of the message

             %S
                   status of the message (N/D/d/!/r/*)

             %t
                   `to:' field (recipients)

             %T
                   the appropriate character from the _$_t_o___c_h_a_r_s (section 6.4.322  ,
                   page 159) string

             %u
                   user (login) name of the author

             %v
                   first name of the author, or the recipient if the message is from
                   you

             %W
                   name of organization of author (`organization:' field)

             %y
                   `x-label:' field, if present

             %Y
                   `x-label' field, if present, and (1) not at part of a thread tree,
                   (2) at the top of a thread, or (3) `x-label' is different from

       The Mutt Next Generation E-Mail Client                                      109

                   preceding message's `x-label'.

             %Z
                   message status flags

             %{fmt}
                   the date and time of the message is converted to sender's time
                   zone, and ``fmt'' is expanded by the library function ``strftime'';
                   a leading bang disables locales

             %[fmt]
                   the date and time of the message is converted to the local time
                   zone, and ``fmt'' is expanded by the library function ``strftime'';
                   a leading bang disables locales

             %(fmt)
                   the local date and time when the message was received.  ``fmt'' is
                   expanded by the library function ``strftime''; a leading bang dis-
                   ables locales

             %<fmt>
                   the current local time. ``fmt'' is expanded by the library function
                   ``strftime''; a leading bang disables locales.

             %>X
                   right justify the rest of the string and pad with character 'X'

             %|X
                   pad to the end of the line with character 'X'

       See also: ``_$_t_o___c_h_a_r_s (section 6.4.322  , page 159)''.

       _6_._4_._1_1_1  _i_s_p_e_l_l

       Type: path

       Default: 'ispell'

       How to invoke ispell (GNU's spell-checking software).

       _6_._4_._1_1_2  _k_e_e_p___f_l_a_g_g_e_d

       Type: boolean

       Default: no

       If _s_e_t, read messages marked as flagged will not be moved from your spool mail-
       box to your ``_$_m_b_o_x (section 6.4.124  , page 110)'' mailbox, or as a result of
       a ``_m_b_o_x_-_h_o_o_k (section 3.13  , page 33)'' command.

       _6_._4_._1_1_3  _l_i_s_t___r_e_p_l_y

       Type: quadoption

       The Mutt Next Generation E-Mail Client                                      110

       Default: no

       When _s_e_t, address replies to the mailing list the original message came from
       (instead to the author only). Setting this option to ``_a_s_k_-_y_e_s'' or ``_a_s_k_-_n_o''
       will ask if you really intended to reply to the author only.

       _6_._4_._1_1_4  _l_o_c_a_l_e

       Type: string

       Default: 'C'

       The locale used by strftime(3) to format dates. Legal values are the strings
       your system accepts for the locale variable LC_TIME.

       _6_._4_._1_1_5  _m_a_i_l___c_h_e_c_k

       Type: number

       Default: 5

       This variable configures how often (in seconds) Mutt-ng should look for new
       mail.

       NNoottee:: This does not apply to IMAP mailboxes, see _$_i_m_a_p___m_a_i_l___c_h_e_c_k (section
       6.4.99  , page 103).

       _6_._4_._1_1_6  _m_a_i_l_c_a_p___p_a_t_h

       Type: string

       Default: ''

       This variable specifies which files to consult when attempting to display MIME
       bodies not directly supported by Mutt-ng.

       _6_._4_._1_1_7  _m_a_i_l_c_a_p___s_a_n_i_t_i_z_e

       Type: boolean

       Default: yes

       If _s_e_t, Mutt-ng will restrict possible characters in mailcap % expandos to a
       well-defined set of safe characters.  This is the safe setting, but we are not
       sure it doesn't break some more advanced MIME stuff.

       DDOONN''TT CCHHAANNGGEE TTHHIISS SSEETTTTIINNGG UUNNLLEESSSS YYOOUU AARREE RREEAALLLLYY SSUURREE WWHHAATT YYOOUU AARREE DDOOIINNGG!!

       _6_._4_._1_1_8  _m_a_i_l_d_i_r___h_e_a_d_e_r___c_a_c_h_e___v_e_r_i_f_y

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                      111

       Availability: Header Cache

       Check for Maildir unaware programs other than Mutt-ng having modified maildir
       files when the header cache is in use. This incurs one stat(2) per message
       every time the folder is opened.

       _6_._4_._1_1_9  _m_a_i_l_d_i_r___t_r_a_s_h

       Type: boolean

       Default: no

       If _s_e_t, messages marked as deleted will be saved with the maildir (T)rashed
       flag instead of physically deleted.

       NNOOTTEE:: this only applies to maildir-style mailboxes. Setting it will have no
       effect on other mailbox types.

       It is similiar to the trash option.

       _6_._4_._1_2_0  _m_a_r_k___o_l_d

       Type: boolean

       Default: yes

       Controls whether or not Mutt-ng marks _n_e_w uunnrreeaadd messages as _o_l_d if you exit a
       mailbox without reading them.

       With this option _s_e_t, the next time you start Mutt-ng, the messages will show
       up with an 'O' next to them in the ``index'' menu, indicating that they are
       old.

       _6_._4_._1_2_1  _m_a_r_k_e_r_s

       Type: boolean

       Default: yes

       Controls the display of wrapped lines in the internal pager. If set, a ``+''
       marker is displayed at the beginning of wrapped lines. Also see the
       ``_$_s_m_a_r_t___w_r_a_p (section 6.4.263  , page 144)'' variable.

       _6_._4_._1_2_2  _m_a_s_k

       Type: regular expression

       Default: '!^\.[^.]'

       A regular expression used in the file browser, optionally preceded by the _n_o_t
       operator ``!''.  Only files whose names match this mask will be shown. The
       match is always case-sensitive.

       The Mutt Next Generation E-Mail Client                                      112

       _6_._4_._1_2_3  _m_a_x___l_i_n_e___l_e_n_g_t_h

       Type: number

       Default: 0

       When _s_e_t, the maximum line length for displaying ``format = flowed'' messages
       is limited to this length. A value of 0 (which is also the default) means that
       the maximum line length is determined by the terminal width and _$_w_r_a_p_m_a_r_g_i_n
       (section 6.4.337  , page 162).

       _6_._4_._1_2_4  _m_b_o_x

       Type: path

       Default: '~/mbox'

       This specifies the folder into which read mail in your ``_$_s_p_o_o_l_f_i_l_e (section
       6.4.296  , page 151)'' folder will be appended.

       _6_._4_._1_2_5  _m_b_o_x___t_y_p_e

       Type: folder magic

       Default: mbox

       The default mailbox type used when creating new folders. May be any of mbox,
       MMDF, MH and Maildir.

       _6_._4_._1_2_6  _m_e_n_u___c_o_n_t_e_x_t

       Type: number

       Default: 0

       This variable controls the number of lines of context that are given when
       scrolling through menus. (Similar to ``_$_p_a_g_e_r___c_o_n_t_e_x_t (section 6.4.167  , page
       121)''.)

       _6_._4_._1_2_7  _m_e_n_u___m_o_v_e___o_f_f

       Type: boolean

       Default: yes

       When _u_n_s_e_t, the bottom entry of menus will never scroll up past the bottom of
       the screen, unless there are less entries than lines.  When _s_e_t, the bottom
       entry may move off the bottom.

       _6_._4_._1_2_8  _m_e_n_u___s_c_r_o_l_l

       Type: boolean

       Default: no

       The Mutt Next Generation E-Mail Client                                      113

       When _s_e_t, menus will be scrolled up or down one line when you attempt to move
       across a screen boundary.  If _u_n_s_e_t, the screen is cleared and the next or pre-
       vious page of the menu is displayed (useful for slow links to avoid many
       redraws).

       _6_._4_._1_2_9  _m_e_s_s_a_g_e___f_o_r_m_a_t

       Type: string

       Default: '%s'

       This is the string displayed in the ``attachment'' menu for attachments of type
       message/rfc822.  For a full listing of defined printf(3)-like sequences see the
       section on ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105)''.

       _6_._4_._1_3_0  _m_e_t_a___k_e_y

       Type: boolean

       Default: no

       If _s_e_t, forces Mutt-ng to interpret keystrokes with the high bit (bit 8) set as
       if the user had pressed the ESC key and whatever key remains after having the
       high bit removed.  For example, if the key pressed has an ASCII value of 0xf4,
       then this is treated as if the user had pressed ESC then ``x''.  This is
       because the result of removing the high bit from ``0xf4'' is ``0x74'', which is
       the ASCII character ``x''.

       _6_._4_._1_3_1  _m_e_t_o_o

       Type: boolean

       Default: no

       If _u_n_s_e_t, Mutt-ng will remove your address (see the ``alternates'' command)
       from the list of recipients when replying to a message.

       _6_._4_._1_3_2  _m_h___p_u_r_g_e

       Type: boolean

       Default: no

       When _u_n_s_e_t, Mutt-ng will mimic mh's behaviour and rename deleted messages to
       _,_<_o_l_d _f_i_l_e _n_a_m_e_> in mh folders instead of really deleting them.  If the vari-
       able is set, the message files will simply be deleted.

       _6_._4_._1_3_3  _m_h___s_e_q___f_l_a_g_g_e_d

       Type: string

       Default: 'flagged'

       The name of the MH sequence used for flagged messages.

       The Mutt Next Generation E-Mail Client                                      114

       _6_._4_._1_3_4  _m_h___s_e_q___r_e_p_l_i_e_d

       Type: string

       Default: 'replied'

       The name of the MH sequence used to tag replied messages.

       _6_._4_._1_3_5  _m_h___s_e_q___u_n_s_e_e_n

       Type: string

       Default: 'unseen'

       The name of the MH sequence used for unseen messages.

       _6_._4_._1_3_6  _m_i_m_e___f_o_r_w_a_r_d

       Type: quadoption

       Default: no

       When _s_e_t, the message you are forwarding will be attached as a separate MIME
       part instead of included in the main body of the message.

       This is useful for forwarding MIME messages so the receiver can properly view
       the message as it was delivered to you. If you like to switch between MIME and
       not MIME from mail to mail, set this variable to ask-no or ask-yes.

       Also see ``_$_f_o_r_w_a_r_d___d_e_c_o_d_e (section 6.4.69  , page 96)'' and ``_$_m_i_m_e___f_o_r_-
       _w_a_r_d___d_e_c_o_d_e (section 6.4.137  , page 113)''.

       _6_._4_._1_3_7  _m_i_m_e___f_o_r_w_a_r_d___d_e_c_o_d_e

       Type: boolean

       Default: no

       Controls the decoding of complex MIME messages into text/plain when forwarding
       a message while ``_$_m_i_m_e___f_o_r_w_a_r_d (section 6.4.136  , page 113)'' is _s_e_t. Other-
       wise ``_$_f_o_r_w_a_r_d___d_e_c_o_d_e (section 6.4.69  , page 96)'' is used instead.

       _6_._4_._1_3_8  _m_i_m_e___f_o_r_w_a_r_d___r_e_s_t

       Type: quadoption

       Default: yes

       When forwarding multiple attachments of a MIME message from the recvattach
       menu, attachments which cannot be decoded in a reasonable manner will be
       attached to the newly composed message if this option is set.

       _6_._4_._1_3_9  _m_i_x___e_n_t_r_y___f_o_r_m_a_t

       The Mutt Next Generation E-Mail Client                                      115

       Type: string

       Default: '%4n %c %-16s %a'

       Availability: Mixmaster

       This variable describes the format of a remailer line on the mixmaster chain
       selection screen.  The following printf(3)-like sequences are supported:

             %n
                   The running number on the menu.

             %c
                   Remailer capabilities.

             %s
                   The remailer's short name.

             %a
                   The remailer's e-mail address.

       _6_._4_._1_4_0  _m_i_x_m_a_s_t_e_r

       Type: path

       Default: 'mixmaster'

       Availability: Mixmaster

       This variable contains the path to the Mixmaster binary on your system.  It is
       used with various sets of parameters to gather the list of known remailers, and
       to finally send a message through the mixmaster chain.

       _6_._4_._1_4_1  _m_o_v_e

       Type: quadoption

       Default: ask-no

       Controls whether or not Mutt-ng will move read messages from your spool mailbox
       to your ``_$_m_b_o_x (section 6.4.124  , page 110)'' mailbox, or as a result of a
       ``_m_b_o_x_-_h_o_o_k (section 3.13  , page 33)'' command.

       _6_._4_._1_4_2  _m_s_g_i_d___f_o_r_m_a_t

       Type: string

       Default: '%Y%m%d%h%M%s.G%P%p'

       This is the format for the ``local part'' of the Message-Id: header field gen-
       erated by Mutt-ng. If this variable is empty, no Message-Id: headers will be
       generated. The '%' character marks that certain data will be added to the
       string, similar to printf(3). The following characters are allowed:

       The Mutt Next Generation E-Mail Client                                      116

             %d
                   the current day of month

             %h
                   the current hour

             %m
                   the current month

             %M
                   the current minute

             %O
                   the current UNIX timestamp (octal)

             %p
                   the process ID

             %P
                   the current Message-ID prefix (a character rotating with every Mes-
                   sage-ID being generated)

             %r
                   a random integer value (decimal)

             %R
                   a random integer value (hexadecimal)

             %s
                   the current second

             %T
                   the current UNIX timestamp (decimal)

             %X
                   the current UNIX timestamp (hexadecimal)

             %Y
                   the current year (Y2K compliant)

             %%
                   the '%' character

       NNoottee:: Please only change this setting if you know what you are doing.  Also
       make sure to consult RFC2822 to produce technically _v_a_l_i_d strings.

       _6_._4_._1_4_3  _n_a_r_r_o_w___t_r_e_e

       Type: boolean

       Default: no

       This variable, when _s_e_t, makes the thread tree narrower, allowing deeper
       threads to fit on the screen.

       The Mutt Next Generation E-Mail Client                                      117

       _6_._4_._1_4_4  _n_n_t_p___a_s_k___f_o_l_l_o_w_u_p___t_o

       Type: boolean

       Default: no

       Availability: NNTP

       If _s_e_t, Mutt-ng will prompt you for the Followup-To: header field before edit-
       ing the body of an outgoing news article.

       _6_._4_._1_4_5  _n_n_t_p___a_s_k___x___c_o_m_m_e_n_t___t_o

       Type: boolean

       Default: no

       Availability: NNTP

       If _s_e_t, Mutt-ng will prompt you for the X-Comment-To: header field before edit-
       ing the body of an outgoing news article.

       _6_._4_._1_4_6  _n_n_t_p___c_a_c_h_e___d_i_r

       Type: path

       Default: '~/.muttng'

       Availability: NNTP

       This variable points to directory where Mutt-ng will cache news article head-
       ers. If _u_n_s_e_t, headers will not be saved at all and will be reloaded each time
       when you enter a newsgroup.

       As for the header caching in connection with IMAP and/or Maildir, this drasti-
       cally increases speed and lowers traffic.

       _6_._4_._1_4_7  _n_n_t_p___c_a_t_c_h_u_p

       Type: quadoption

       Default: ask-yes

       Availability: NNTP

       If this variable is _s_e_t, Mutt-ng will mark all articles in a newsgroup as read
       when you leaving it.

       _6_._4_._1_4_8  _n_n_t_p___c_o_n_t_e_x_t

       Type: number

       Default: 1000

       The Mutt Next Generation E-Mail Client                                      118

       Availability: NNTP

       This variable controls how many news articles to cache per newsgroup (if
       caching is enabled, see _$_n_n_t_p___c_a_c_h_e___d_i_r (section 6.4.146  , page 116)) and how
       many news articles to show in the ``index'' menu.

       If there're more articles than defined with _$_n_n_t_p___c_o_n_t_e_x_t (section 6.4.148  ,
       page 116), all older ones will be removed/not shown in the index.

       _6_._4_._1_4_9  _n_n_t_p___f_o_l_l_o_w_u_p___t_o___p_o_s_t_e_r

       Type: quadoption

       Default: ask-yes

       Availability: NNTP

       If this variable is _s_e_t and the keyword 'poster' is present in the Followup-To:
       header field, a follow-up to the newsgroup is not permitted.  The message will
       be mailed to the submitter of the message via mail.

       _6_._4_._1_5_0  _n_n_t_p___g_r_o_u_p___i_n_d_e_x___f_o_r_m_a_t

       Type: string

       Default: '%4C %M%N %5s  %-45.45f %d'

       Availability: NNTP

       This variable allows you to customize the newsgroup browser display to your
       personal taste.  This string is similar to ``_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  ,
       page 105)'', but has its own set of printf(3)-like sequences:

            %C      current newsgroup number
            %d      description of newsgroup (retrieved from server)
            %f      newsgroup name
            %M      ``-'' if newsgroup not allowed for direct post (moderated for example)
            %N      ``N'' if newsgroup is new, ``u'' if unsubscribed, blank otherwise
            %n      number of new articles in newsgroup
            %s      number of unread articles in newsgroup
            %>X     right justify the rest of the string and pad with character "X"
            %|X     pad to the end of the line with character "X"

       _6_._4_._1_5_1  _n_n_t_p___h_o_s_t

       Type: string

       Default: ''

       Availability: NNTP

       This variable specifies the name (or address) of the NNTP server to be used.

       The Mutt Next Generation E-Mail Client                                      119

       It defaults to the value specified via the environment variable $NNTPSERVER or
       contained in the file /etc/nntpserver.

       You can also specify a username and an alternative port for each newsserver,
       e.g.

       [nntp[s]://][username[:password]@]newsserver[:port]

       NNoottee:: Using a password as shown and stored in a configuration file presents a
       security risk since the superuser of your machine may read it regardless of the
       file's permissions.

       _6_._4_._1_5_2  _n_n_t_p___i_n_e_w_s

       Type: path

       Default: ''

       Availability: NNTP

       If _s_e_t, specifies the program and arguments used to deliver news posted by
       Mutt-ng.  Otherwise, Mutt-ng posts article using current connection.  The fol-
       lowing printf(3)-style sequence is understood:

            %s      newsserver name

       Example: set inews='/usr/local/bin/inews -hS'

       _6_._4_._1_5_3  _n_n_t_p___l_o_a_d___d_e_s_c_r_i_p_t_i_o_n

       Type: boolean

       Default: yes

       Availability: NNTP

       This variable controls whether or not descriptions for newsgroups are to be
       loaded when subscribing to a newsgroup.

       _6_._4_._1_5_4  _n_n_t_p___m_a_i_l___c_h_e_c_k

       Type: number

       Default: 60

       Availability: NNTP

       The time in seconds until any operations on a newsgroup except posting a new
       article will cause a recheck for new news. If set to 0, Mutt-ng will recheck on
       each operation in index (stepping, read article, etc.).

       The Mutt Next Generation E-Mail Client                                      120

       _6_._4_._1_5_5  _n_n_t_p___m_i_m_e___s_u_b_j_e_c_t

       Type: boolean

       Default: yes

       Availability: NNTP

       If _u_n_s_e_t, an 8-bit ``Subject:'' header field in a news article will not be
       encoded according to RFC2047.

       NNoottee:: Only change this setting if you know what you are doing.

       _6_._4_._1_5_6  _n_n_t_p___n_e_w_s_r_c

       Type: path

       Default: '~/.newsrc'

       Availability: NNTP

       This file contains information about subscribed newsgroup and articles read so
       far.

       To ease the use of multiple news servers, the following printf(3)-style
       sequence is understood:

            %s      newsserver name

       _6_._4_._1_5_7  _n_n_t_p___p_a_s_s

       Type: string

       Default: ''

       Availability: NNTP

       Your password for NNTP account.

       NNoottee:: Storing passwords in a configuration file presents a security risk since
       the superuser of your machine may read it regardless of the file's permissions.

       _6_._4_._1_5_8  _n_n_t_p___p_o_s_t___m_o_d_e_r_a_t_e_d

       Type: quadoption

       Default: ask-yes

       Availability: NNTP

       If set to _y_e_s, Mutt-ng will post articles to newsgroup that have not permis-
       sions to post (e.g. moderated).

       The Mutt Next Generation E-Mail Client                                      121

       NNoottee:: if the newsserver does not support posting to that newsgroup or a group
       is totally read-only, that posting will not have any effect.

       _6_._4_._1_5_9  _n_n_t_p___r_e_c_o_n_n_e_c_t

       Type: quadoption

       Default: ask-yes

       Availability: NNTP

       Controls whether or not Mutt-ng will try to reconnect to a newsserver when the
       was connection lost.

       _6_._4_._1_6_0  _n_n_t_p___s_a_v_e___u_n_s_u_b_s_c_r_i_b_e_d

       Type: boolean

       Default: no

       Availability: NNTP

       When _s_e_t, info about unsubscribed newsgroups will be saved into the ``newsrc''
       file and into the news cache.

       _6_._4_._1_6_1  _n_n_t_p___s_h_o_w___n_e_w___n_e_w_s

       Type: boolean

       Default: yes

       Availability: NNTP

       If _s_e_t, the newsserver will be asked for new newsgroups on entering the
       browser.  Otherwise, it will be done only once for a newsserver.  Also controls
       whether or not the number of new articles of subscribed newsgroups will be
       checked.

       _6_._4_._1_6_2  _n_n_t_p___s_h_o_w___o_n_l_y___u_n_r_e_a_d

       Type: boolean

       Default: no

       Availability: NNTP

       If _s_e_t, only subscribed newsgroups that contain unread articles will be dis-
       played in the newsgroup browser.

       _6_._4_._1_6_3  _n_n_t_p___u_s_e_r

       Type: string

       Default: ''

       The Mutt Next Generation E-Mail Client                                      122

       Availability: NNTP

       Your login name on the NNTP server.  If _u_n_s_e_t and the server requires authen-
       tification, Mutt-ng will prompt you for your account name.

       _6_._4_._1_6_4  _n_n_t_p___x___c_o_m_m_e_n_t___t_o

       Type: boolean

       Default: no

       Availability: NNTP

       If _s_e_t, Mutt-ng will add a ``X-Comment-To:'' header field (that contains full
       name of the original article author) to articles that you followup to.

       _6_._4_._1_6_5  _o_p_e_r_a_t_i_n_g___s_y_s_t_e_m

       Type: string

       Default: ''

       This specifies the operating system name for the User-Agent: header field. If
       this is _u_n_s_e_t, it will be set to the operating system name that uname(2)
       returns. If uname(2) fails, ``UNIX'' will be used.

       It may, for example, look as: ``mutt-ng 1.5.9i (Linux)''.

       _6_._4_._1_6_6  _p_a_g_e_r

       Type: path

       Default: 'builtin'

       This variable specifies which pager you would like to use to view messages.
       ``builtin'' means to use the builtin pager, otherwise this variable should
       specify the pathname of the external pager you would like to use.

       Using an external pager may have some disadvantages: Additional keystrokes are
       necessary because you can't call Mutt-ng functions directly from the pager, and
       screen resizes cause lines longer than the screen width to be badly formatted
       in the help menu.

       _6_._4_._1_6_7  _p_a_g_e_r___c_o_n_t_e_x_t

       Type: number

       Default: 0

       This variable controls the number of lines of context that are given when dis-
       playing the next or previous page in the internal pager.  By default, Mutt-ng
       will display the line after the last one on the screen at the top of the next
       page (0 lines of context).

       The Mutt Next Generation E-Mail Client                                      123

       _6_._4_._1_6_8  _p_a_g_e_r___f_o_r_m_a_t

       Type: string

       Default: '-%Z- %C/%m: %-20.20n   %s'

       This variable controls the format of the one-line message ``status'' displayed
       before each message in either the internal or an external pager.  The valid
       sequences are listed in the ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105)''
       section.

       _6_._4_._1_6_9  _p_a_g_e_r___i_n_d_e_x___l_i_n_e_s

       Type: number

       Default: 0

       Determines the number of lines of a mini-index which is shown when in the
       pager.  The current message, unless near the top or bottom of the folder, will
       be roughly one third of the way down this mini-index, giving the reader the
       context of a few messages before and after the message.  This is useful, for
       example, to determine how many messages remain to be read in the current
       thread.  One of the lines is reserved for the status bar from the index, so a
       _p_a_g_e_r___i_n_d_e_x___l_i_n_e_s of 6 will only show 5 lines of the actual index.  A value of
       0 results in no index being shown.  If the number of messages in the current
       folder is less than _p_a_g_e_r___i_n_d_e_x___l_i_n_e_s, then the index will only use as many
       lines as it needs.

       _6_._4_._1_7_0  _p_a_g_e_r___s_t_o_p

       Type: boolean

       Default: no

       When _s_e_t, the internal-pager will nnoott move to the next message when you are at
       the end of a message and invoke the _n_e_x_t_-_p_a_g_e function.

       _6_._4_._1_7_1  _p_g_p___a_u_t_o___d_e_c_o_d_e

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will automatically attempt to decrypt traditional PGP messages
       whenever the user performs an operation which ordinarily would result in the
       contents of the message being operated on.  For example, if the user displays a
       pgp-traditional message which has not been manually checked with the check-tra-
       ditional-pgp function, Mutt-ng will automatically check the message for tradi-
       tional pgp.

       _6_._4_._1_7_2  _p_g_p___a_u_t_o_i_n_l_i_n_e

       Type: boolean

       The Mutt Next Generation E-Mail Client                                      124

       Default: no

       This option controls whether Mutt-ng generates old-style inline (traditional)
       PGP encrypted or signed messages under certain circumstances.  This can be
       overridden by use of the _p_g_p_-_m_e_n_u, when inline is not required.

       Note that Mutt-ng might automatically use PGP/MIME for messages which consist
       of more than a single MIME part.  Mutt-ng can be configured to ask before send-
       ing PGP/MIME messages when inline (traditional) would not work.  See also:
       ``_$_p_g_p___m_i_m_e___a_u_t_o (section 6.4.188  , page 126)''.

       Also note that using the old-style PGP message format is ssttrroonnggllyy ddeepprreeccaatteedd.
       (PGP only)

       _6_._4_._1_7_3  _p_g_p___c_h_e_c_k___e_x_i_t

       Type: boolean

       Default: yes

       If _s_e_t, Mutt-ng will check the exit code of the PGP subprocess when signing or
       encrypting.  A non-zero exit code means that the subprocess failed.  (PGP only)

       _6_._4_._1_7_4  _p_g_p___c_l_e_a_r_s_i_g_n___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This format is used to create a old-style ``clearsigned'' PGP message.

       Note that the use of this format is ssttrroonnggllyy ddeepprreeccaatteedd.  (PGP only)

       _6_._4_._1_7_5  _p_g_p___d_e_c_o_d_e___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This format strings specifies a command which is used to decode application/pgp
       attachments.

       The PGP command formats have their own set of printf(3)-like sequences:

             %p
                   Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
                   string otherwise. Note: This may be used with a %? construct.

             %f
                   Expands to the name of a file containing a message.

             %s
                   Expands to the name of a file containing the signature part of a
                   multipart/signed attachment when verifying it.

       The Mutt Next Generation E-Mail Client                                      125

             %a
                   The value of _$_p_g_p___s_i_g_n___a_s (section 6.4.192  , page 127).

             %r
                   One or more key IDs.

       For examples on how to configure these formats for the various versions of PGP
       which are floating around, see the pgp*.rc and gpg.rc files in the samples/
       subdirectory which has been installed on your system alongside the documenta-
       tion.  (PGP only)

       _6_._4_._1_7_6  _p_g_p___d_e_c_r_y_p_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to decrypt a PGP encrypted message.  (PGP only)

       _6_._4_._1_7_7  _p_g_p___e_n_c_r_y_p_t___o_n_l_y___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to encrypt a body part without signing it.  (PGP only)

       _6_._4_._1_7_8  _p_g_p___e_n_c_r_y_p_t___s_i_g_n___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to both sign and encrypt a body part.  (PGP only)

       _6_._4_._1_7_9  _p_g_p___e_n_t_r_y___f_o_r_m_a_t

       Type: string

       Default: '%4n %t%f %4l/0x%k %-4a %2c %u'

       This variable allows you to customize the PGP key selection menu to your per-
       sonal taste. This string is similar to ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page
       105)'', but has its own set of printf(3)-like sequences:

             %n
                   number

             %k
                   key id

             %u
                   user id

       The Mutt Next Generation E-Mail Client                                      126

             %a
                   algorithm

             %l
                   key length

             %f
                   flags

             %c
                   capabilities

             %t
                   trust/validity of the key-uid association

             %[<s>]
                   date of the key where <s> is an strftime(3) expression

       (PGP only)

       _6_._4_._1_8_0  _p_g_p___e_x_p_o_r_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to export a public key from the user's key ring.  (PGP
       only)

       _6_._4_._1_8_1  _p_g_p___g_e_t_k_e_y_s___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is invoked whenever Mutt-ng will need public key information.  %r
       is the only printf(3)-like sequence used with this format.  (PGP only)

       _6_._4_._1_8_2  _p_g_p___g_o_o_d___s_i_g_n

       Type: regular expression

       Default: ''

       If you assign a text to this variable, then a PGP signature is only considered
       verified if the output from _$_p_g_p___v_e_r_i_f_y___c_o_m_m_a_n_d (section 6.4.198  , page 129)
       contains the text. Use this variable if the exit code from the command is 0
       even for bad signatures.  (PGP only)

       _6_._4_._1_8_3  _p_g_p___i_g_n_o_r_e___s_u_b_k_e_y_s

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                      127

       Setting this variable will cause Mutt-ng to ignore OpenPGP subkeys. Instead,
       the principal key will inherit the subkeys' capabilities. _U_n_s_e_t this if you
       want to play interesting key selection games.  (PGP only)

       _6_._4_._1_8_4  _p_g_p___i_m_p_o_r_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to import a key from a message into the user's public key
       ring.  (PGP only)

       _6_._4_._1_8_5  _p_g_p___l_i_s_t___p_u_b_r_i_n_g___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to list the public key ring's contents.  The output format
       must be analogous to the one used by gpg --list-keys --with-colons.

       This format is also generated by the pgpring utility which comes with Mutt-ng.
       (PGP only)

       _6_._4_._1_8_6  _p_g_p___l_i_s_t___s_e_c_r_i_n_g___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to list the secret key ring's contents.  The output format
       must be analogous to the one used by gpg --list-keys --with-colons.

       This format is also generated by the pgpring utility which comes with Mutt-ng.
       (PGP only)

       _6_._4_._1_8_7  _p_g_p___l_o_n_g___i_d_s

       Type: boolean

       Default: no

       If _s_e_t, use 64 bit PGP key IDs. _U_n_s_e_t uses the normal 32 bit Key IDs.  (PGP
       only)

       _6_._4_._1_8_8  _p_g_p___m_i_m_e___a_u_t_o

       Type: quadoption

       Default: ask-yes

       This option controls whether Mutt-ng will prompt you for automatically sending
       a (signed/encrypted) message using PGP/MIME when inline (traditional) fails

       The Mutt Next Generation E-Mail Client                                      128

       (for any reason).

       Also note that using the old-style PGP message format is ssttrroonnggllyy ddeepprreeccaatteedd.
       (PGP only)

       _6_._4_._1_8_9  _p_g_p___r_e_p_l_y_i_n_l_i_n_e

       Type: boolean

       Default: no

       Setting this variable will cause Mutt-ng to always attempt to create an inline
       (traditional) message when replying to a message which is PGP encrypted/signed
       inline.  This can be overridden by use of the _p_g_p_-_m_e_n_u, when inline is not
       required.  This option does not automatically detect if the (replied-to) mes-
       sage is inline; instead it relies on Mutt-ng internals for previously
       checked/flagged messages.

       Note that Mutt-ng might automatically use PGP/MIME for messages which consist
       of more than a single MIME part.  Mutt-ng can be configured to ask before send-
       ing PGP/MIME messages when inline (traditional) would not work.  See also:
       ``_$_p_g_p___m_i_m_e___a_u_t_o (section 6.4.188  , page 126)''.

       Also note that using the old-style PGP message format is ssttrroonnggllyy ddeepprreeccaatteedd.
       (PGP only)

       _6_._4_._1_9_0  _p_g_p___r_e_t_a_i_n_a_b_l_e___s_i_g_s

       Type: boolean

       Default: no

       If _s_e_t, signed and encrypted messages will consist of nested multipart/signed
       and multipart/encrypted body parts.

       This is useful for applications like encrypted and signed mailing lists, where
       the outer layer (multipart/encrypted) can be easily removed, while the inner
       multipart/signed part is retained.  (PGP only)

       _6_._4_._1_9_1  _p_g_p___s_h_o_w___u_n_u_s_a_b_l_e

       Type: boolean

       Default: yes

       If _s_e_t, Mutt-ng will display non-usable keys on the PGP key selection menu.
       This includes keys which have been revoked, have expired, or have been marked
       as ``disabled'' by the user.  (PGP only)

       _6_._4_._1_9_2  _p_g_p___s_i_g_n___a_s

       Type: string

       Default: ''

       The Mutt Next Generation E-Mail Client                                      129

       If you have more than one key pair, this option allows you to specify which of
       your private keys to use.  It is recommended that you use the keyid form to
       specify your key (e.g., ``0x00112233'').  (PGP only)

       _6_._4_._1_9_3  _p_g_p___s_i_g_n___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to create the detached PGP signature for a multi-
       part/signed PGP/MIME body part.  (PGP only)

       _6_._4_._1_9_4  _p_g_p___s_o_r_t___k_e_y_s

       Type: sort order

       Default: address

       Specifies how the entries in the ``pgp keys'' menu are sorted. The following
       are legal values:

             address
                   sort alphabetically by user id

             keyid
                   sort alphabetically by key id

             date
                   sort by key creation date

             trust
                   sort by the trust of the key

       If you prefer reverse order of the above values, prefix it with ``reverse-''.
       (PGP only)

       _6_._4_._1_9_5  _p_g_p___s_t_r_i_c_t___e_n_c

       Type: boolean

       Default: yes

       If _s_e_t, Mutt-ng will automatically encode PGP/MIME signed messages as quoted-
       printable.  Please note that unsetting this variable may lead to problems with
       non-verifyable PGP signatures, so only change this if you know what you are
       doing.  (PGP only)

       _6_._4_._1_9_6  _p_g_p___t_i_m_e_o_u_t

       Type: number

       Default: 300

       The Mutt Next Generation E-Mail Client                                      130

       The number of seconds after which a cached passphrase will expire if not used.
       Default: 300.  (PGP only)

       _6_._4_._1_9_7  _p_g_p___u_s_e___g_p_g___a_g_e_n_t

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will use a possibly-running gpg-agent process.  (PGP only)

       _6_._4_._1_9_8  _p_g_p___v_e_r_i_f_y___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to verify PGP signatures.  (PGP only)

       _6_._4_._1_9_9  _p_g_p___v_e_r_i_f_y___k_e_y___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to verify key information from the key selection menu.
       (PGP only)

       _6_._4_._2_0_0  _p_i_p_e___d_e_c_o_d_e

       Type: boolean

       Default: no

       Used in connection with the _p_i_p_e_-_m_e_s_s_a_g_e command.  When _u_n_s_e_t, Mutt-ng will
       pipe the messages without any preprocessing. When _s_e_t, Mutt-ng will weed head-
       ers and will attempt to PGP/MIME decode the messages first.

       _6_._4_._2_0_1  _p_i_p_e___s_e_p

       Type: string

       Default: '\n'

       The separator to add between messages when piping a list of tagged messages to
       an external Unix command.

       _6_._4_._2_0_2  _p_i_p_e___s_p_l_i_t

       Type: boolean

       Default: no

       Used in connection with the _p_i_p_e_-_m_e_s_s_a_g_e command and the ``tag- prefix'' or

       The Mutt Next Generation E-Mail Client                                      131

       ``tag-prefix-cond'' operators.  If this variable is _u_n_s_e_t, when piping a list
       of tagged messages Mutt-ng will concatenate the messages and will pipe them as
       a single folder.  When _s_e_t, Mutt-ng will pipe the messages one by one.  In both
       cases the messages are piped in the current sorted order, and the ``_$_p_i_p_e___s_e_p
       (section 6.4.201  , page 129)'' separator is added after each message.

       _6_._4_._2_0_3  _p_o_p___a_u_t_h___t_r_y___a_l_l

       Type: boolean

       Default: yes

       Availability: POP

       If _s_e_t, Mutt-ng will try all available methods. When _u_n_s_e_t, Mutt-ng will only
       fall back to other authentication methods if the previous methods are unavail-
       able. If a method is available but authentication fails, Mutt-ng will not con-
       nect to the POP server.

       _6_._4_._2_0_4  _p_o_p___a_u_t_h_e_n_t_i_c_a_t_o_r_s

       Type: string

       Default: ''

       Availability: POP

       This is a colon-delimited list of authentication methods Mutt-ng may attempt to
       use to log in to an POP server, in the order Mutt-ng should try them.  Authen-
       tication methods are either ``user'', ``apop'' or any SASL mechanism, eg
       ``digest-md5'', ``gssapi'' or ``cram-md5''.

       This parameter is case-insensitive. If this parameter is _u_n_s_e_t (the default)
       Mutt-ng will try all available methods, in order from most-secure to least-
       secure.

       Example: set pop_authenticators='digest-md5:apop:user'

       _6_._4_._2_0_5  _p_o_p___d_e_l_e_t_e

       Type: quadoption

       Default: ask-no

       Availability: POP

       If _s_e_t, Mutt-ng will delete successfully downloaded messages from the POP
       server when using the ``fetch-mail'' function.  When _u_n_s_e_t, Mutt-ng will down-
       load messages but also leave them on the POP server.

       _6_._4_._2_0_6  _p_o_p___h_o_s_t

       Type: string

       The Mutt Next Generation E-Mail Client                                      132

       Default: ''

       Availability: POP

       The name of your POP server for the ``fetch-mail'' function.  You can also
       specify an alternative port, username and password, i.e.:

       [pop[s]://][username[:password]@]popserver[:port]

       NNoottee:: Storing passwords in a configuration file presents a security risk since
       the superuser of your machine may read it regardless of the file's permissions.

       _6_._4_._2_0_7  _p_o_p___l_a_s_t

       Type: boolean

       Default: no

       Availability: POP

       If this variable is _s_e_t, Mutt-ng will try to use the ``LAST'' POP command for
       retrieving only unread messages from the POP server when using the ``fetch-
       mail'' function.

       _6_._4_._2_0_8  _p_o_p___m_a_i_l___c_h_e_c_k

       Type: number

       Default: 60

       Availability: POP

       This variable configures how often (in seconds) POP should look for new mail.

       _6_._4_._2_0_9  _p_o_p___p_a_s_s

       Type: string

       Default: ''

       Availability: POP

       Specifies the password for your POP account.  If _u_n_s_e_t, Mutt-ng will prompt you
       for your password when you open POP mailbox.

       NNoottee:: Storing passwords in a configuration file presents a security risk since
       the superuser of your machine may read it regardless of the file's permissions.

       _6_._4_._2_1_0  _p_o_p___r_e_c_o_n_n_e_c_t

       Type: quadoption

       Default: ask-yes

       The Mutt Next Generation E-Mail Client                                      133

       Availability: POP

       Controls whether or not Mutt-ng will try to reconnect to a POP server when the
       connection is lost.

       _6_._4_._2_1_1  _p_o_p___u_s_e_r

       Type: string

       Default: ''

       Availability: POP

       Your login name on the POP server.

       This variable defaults to your user name on the local machine.

       _6_._4_._2_1_2  _p_o_s_t___i_n_d_e_n_t___s_t_r_i_n_g

       Type: string

       Default: ''

       Similar to the ``_$_a_t_t_r_i_b_u_t_i_o_n (section 6.4.15  , page 84)'' variable, Mutt-ng
       will append this string after the inclusion of a message which is being replied
       to.

       _6_._4_._2_1_3  _p_o_s_t_p_o_n_e

       Type: quadoption

       Default: ask-yes

       Controls whether or not messages are saved in the ``_$_p_o_s_t_p_o_n_e_d (section
       6.4.214  , page 132)'' mailbox when you elect not to send immediately.

       _6_._4_._2_1_4  _p_o_s_t_p_o_n_e_d

       Type: path

       Default: '~/postponed'

       Mutt-ng allows you to indefinitely ``_p_o_s_t_p_o_n_e (section 6.4.213  , page 132)
       sending a message'' which you are editing.  When you choose to postpone a mes-
       sage, Mutt-ng saves it in the mailbox specified by this variable.  Also see the
       ``_$_p_o_s_t_p_o_n_e (section 6.4.213  , page 132)'' variable.

       _6_._4_._2_1_5  _p_r_e_c_o_n_n_e_c_t

       Type: string

       Default: ''

       If _s_e_t, a shell command to be executed if Mutt-ng fails to establish a

       The Mutt Next Generation E-Mail Client                                      134

       connection to the server. This is useful for setting up secure connections,
       e.g. with ssh(1). If the command returns a  nonzero status, Mutt-ng gives up
       opening the server. Example:

       preconnect='ssh -f -q -L 1234:mailhost.net:143 mailhost.net sleep 20 <
       /dev/null > /dev/null'

       Mailbox ``foo'' on mailhost.net can now be reached as ``{localhost:1234}foo''.

       NNoottee:: For this example to work, you must be able to log in to the remote
       machine without having to enter a password.

       _6_._4_._2_1_6  _p_r_i_n_t

       Type: quadoption

       Default: ask-no

       Controls whether or not Mutt-ng really prints messages.  This is set to _a_s_k_-_n_o
       by default, because some people accidentally hit ``p'' often.

       _6_._4_._2_1_7  _p_r_i_n_t___c_o_m_m_a_n_d

       Type: path

       Default: 'lpr'

       This specifies the command pipe that should be used to print messages.

       _6_._4_._2_1_8  _p_r_i_n_t___d_e_c_o_d_e

       Type: boolean

       Default: yes

       Used in connection with the print-message command.  If this option is _s_e_t, the
       message is decoded before it is passed to the external command specified by
       _$_p_r_i_n_t___c_o_m_m_a_n_d (section 6.4.217  , page 133).  If this option is _u_n_s_e_t, no pro-
       cessing will be applied to the message when printing it.  The latter setting
       may be useful if you are using some advanced printer filter which is able to
       properly format e-mail messages for printing.

       _6_._4_._2_1_9  _p_r_i_n_t___s_p_l_i_t

       Type: boolean

       Default: no

       Used in connection with the print-message command.  If this option is _s_e_t, the
       command specified by _$_p_r_i_n_t___c_o_m_m_a_n_d (section 6.4.217  , page 133) is executed
       once for each message which is to be printed.  If this option is _u_n_s_e_t, the
       command specified by _$_p_r_i_n_t___c_o_m_m_a_n_d (section 6.4.217  , page 133) is executed
       only once, and all the messages are concatenated, with a form feed as the mes-
       sage separator.

       The Mutt Next Generation E-Mail Client                                      135

       Those who use the enscript(1) program's mail-printing mode will most likely
       want to set this option.

       _6_._4_._2_2_0  _p_r_o_m_p_t___a_f_t_e_r

       Type: boolean

       Default: yes

       If you use an _e_x_t_e_r_n_a_l ``_$_p_a_g_e_r (section 6.4.166  , page 121)'', setting this
       variable will cause Mutt-ng to prompt you for a command when the pager exits
       rather than returning to the index menu.  If _u_n_s_e_t, Mutt-ng will return to the
       index menu when the external pager exits.

       _6_._4_._2_2_1  _q_u_e_r_y___c_o_m_m_a_n_d

       Type: path

       Default: ''

       This specifies the command that Mutt-ng will use to make external address
       queries.  The string should contain a %s, which will be substituted with the
       query string the user types.  See ``_q_u_e_r_y (section 4.7  , page 55)'' for more
       information.

       _6_._4_._2_2_2  _q_u_i_t

       Type: quadoption

       Default: yes

       This variable controls whether ``quit'' and ``exit'' actually quit from Mutt-
       ng.  If it set to _y_e_s, they do quit, if it is set to _n_o, they have no effect,
       and if it is set to _a_s_k_-_y_e_s or _a_s_k_-_n_o, you are prompted for confirmation when
       you try to quit.

       _6_._4_._2_2_3  _q_u_o_t_e___e_m_p_t_y

       Type: boolean

       Default: yes

       Controls whether or not empty lines will be quoted using ``_i_n_d_e_n_t___s_t_r_i_n_g (sec-
       tion 6.4.109  , page 105)''.

       _6_._4_._2_2_4  _q_u_o_t_e___q_u_o_t_e_d

       Type: boolean

       Default: no

       Controls how quoted lines will be quoted. If _s_e_t, one quote character will be
       added to the end of existing prefix.  Otherwise, quoted lines will be prepended
       by ``_i_n_d_e_n_t___s_t_r_i_n_g (section 6.4.109  , page 105)''.

       The Mutt Next Generation E-Mail Client                                      136

       _6_._4_._2_2_5  _q_u_o_t_e___r_e_g_e_x_p

       Type: regular expression

       Default: '^([ \t]*[|>:}#])+'

       A regular expression used in the internal-pager to determine quoted sections of
       text in the body of a message.

       NNoottee:: In order to use the _q_u_o_t_e_dxx patterns in the internal pager, you need to
       set this to a regular expression that matches _e_x_a_c_t_l_y the quote characters at
       the beginning of quoted lines.

       _6_._4_._2_2_6  _r_e_a_d___i_n_c

       Type: number

       Default: 10

       If set to a value greater than 0, Mutt-ng will display which message it is cur-
       rently on when reading a mailbox.  The message is printed after _r_e_a_d___i_n_c mes-
       sages have been read (e.g., if set to 25, Mutt-ng will print a message when it
       reads message 25, and then again when it gets to message 50).  This variable is
       meant to indicate progress when reading large mailboxes which may take some
       time.  When set to 0, only a single message will appear before the reading the
       mailbox.

       Also see the ``_$_w_r_i_t_e___i_n_c (section 6.4.339  , page 162)'' variable.

       _6_._4_._2_2_7  _r_e_a_d___o_n_l_y

       Type: boolean

       Default: no

       If set, all folders are opened in read-only mode.

       _6_._4_._2_2_8  _r_e_a_l_n_a_m_e

       Type: string

       Default: ''

       This variable specifies what ``real'' or ``personal'' name should be used when
       sending messages.

       By default, this is the GECOS field from /etc/passwd.

       _N_o_t_e_: This variable will _n_o_t be used when the user has set a real name in the
       _$_f_r_o_m (section 6.4.74  , page 97) variable.

       _6_._4_._2_2_9  _r_e_c_a_l_l

       Type: quadoption

       The Mutt Next Generation E-Mail Client                                      137

       Default: ask-yes

       Controls whether or not Mutt-ng recalls postponed messages when composing a new
       message.  Also see ``_$_p_o_s_t_p_o_n_e_d (section 6.4.214  , page 132)''.

       Setting this variable to _y_e_s is not generally useful, and thus not recommended.

       _6_._4_._2_3_0  _r_e_c_o_r_d

       Type: path

       Default: ''

       This specifies the file into which your outgoing messages should be appended.
       (This is meant as the primary method for saving a copy of your messages, but
       another way to do this is using the ``_m_y___h_d_r (section 3.15  , page 34)'' com-
       mand to create a Bcc: header field with your email address in it.)

       The value of _$_r_e_c_o_r_d _(_s_e_c_t_i_o_n _6_._4_._2_3_0  _, _p_a_g_e _1_3_6_) is overridden by the
       ``_$_f_o_r_c_e___n_a_m_e (section 6.4.68  , page 96)'' and ``_$_s_a_v_e___n_a_m_e (section
       6.4.241  , page 138)'' variables, and the ``_f_c_c_-_h_o_o_k (section 3.18  , page
       35)'' command.

       _6_._4_._2_3_1  _r_e_p_l_y___r_e_g_e_x_p

       Type: regular expression

       Default: '^(re([\[0-9\]+])*|aw):[ \t]*'

       A regular expression used to recognize reply messages when threading and reply-
       ing. The default value corresponds to the English ``Re:'' and the German
       ``Aw:''.

       _6_._4_._2_3_2  _r_e_p_l_y___s_e_l_f

       Type: boolean

       Default: no

       If _u_n_s_e_t and you are replying to a message sent by you, Mutt-ng will assume
       that you want to reply to the recipients of that message rather than to your-
       self.

       _6_._4_._2_3_3  _r_e_p_l_y___t_o

       Type: quadoption

       Default: ask-yes

       If _s_e_t, when replying to a message, Mutt-ng will use the address listed in the
       ``Reply-To:'' header field as the recipient of the reply.  If _u_n_s_e_t, it will
       use the address in the ``From:'' header field instead.

       This option is useful for reading a mailing list that sets the ``Reply-To:''

       The Mutt Next Generation E-Mail Client                                      138

       header field to the list address and you want to send a private message to the
       author of a message.

       _6_._4_._2_3_4  _r_e_s_o_l_v_e

       Type: boolean

       Default: yes

       When set, the cursor will be automatically advanced to the next (possibly
       undeleted) message whenever a command that modifies the current message is exe-
       cuted.

       _6_._4_._2_3_5  _r_e_v_e_r_s_e___a_l_i_a_s

       Type: boolean

       Default: no

       This variable controls whether or not Mutt-ng will display the ``personal''
       name from your aliases in the index menu if it finds an alias that matches the
       message's sender.  For example, if you have the following alias:

       alias juser abd30425@somewhere.net (Joe User)

       and then you receive mail which contains the following header:

       From: abd30425@somewhere.net

       It would be displayed in the index menu as ``Joe User'' instead of
       ``abd30425@somewhere.net.''  This is useful when the person's e-mail address is
       not human friendly (like CompuServe addresses).

       _6_._4_._2_3_6  _r_e_v_e_r_s_e___n_a_m_e

       Type: boolean

       Default: no

       It may sometimes arrive that you receive mail to a certain machine, move the
       messages to another machine, and reply to some the messages from there.  If
       this variable is _s_e_t, the default From: line of the reply messages is built
       using the address where you received the messages you are replying to iiff that
       address matches your alternates.  If the variable is _u_n_s_e_t, or the address that
       would be used doesn't match your alternates, the From: line will use your
       address on the current machine.

       _6_._4_._2_3_7  _r_e_v_e_r_s_e___r_e_a_l_n_a_m_e

       Type: boolean

       Default: yes

       This variable fine-tunes the behaviour of the _r_e_v_e_r_s_e___n_a_m_e (section 6.4.236  ,

       The Mutt Next Generation E-Mail Client                                      139

       page 137) feature.  When it is _s_e_t, Mutt-ng will use the address from incoming
       messages as-is, possibly including eventual real names.  When it is _u_n_s_e_t,
       Mutt-ng will override any such real names with the setting of the _r_e_a_l_n_a_m_e
       (section 6.4.228  , page 135) variable.

       _6_._4_._2_3_8  _r_f_c_2_0_4_7___p_a_r_a_m_e_t_e_r_s

       Type: boolean

       Default: no

       When this variable is _s_e_t, Mutt-ng will decode RFC-2047-encoded MIME parame-
       ters. You want to set this variable when Mutt-ng suggests you to save attach-
       ments to files named like this:

       =?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=

       When this variable is _s_e_t interactively, the change doesn't have the desired
       effect before you have changed folders.

       Note that this use of RFC 2047's encoding is explicitly, prohibited by the
       standard, but nevertheless encountered in the wild.

       Also note that setting this parameter will _n_o_t have the effect that Mutt-ng
       _g_e_n_e_r_a_t_e_s this kind of encoding.  Instead, Mutt-ng will unconditionally use the
       encoding specified in RFC 2231.

       _6_._4_._2_3_9  _s_a_v_e___a_d_d_r_e_s_s

       Type: boolean

       Default: no

       If _s_e_t, Mutt-ng will take the sender's full address when choosing a default
       folder for saving a mail. If ``_$_s_a_v_e___n_a_m_e (section 6.4.241  , page 138)'' or
       ``_$_f_o_r_c_e___n_a_m_e (section 6.4.68  , page 96)'' is _s_e_t too, the selection of the
       fcc folder will be changed as well.

       _6_._4_._2_4_0  _s_a_v_e___e_m_p_t_y

       Type: boolean

       Default: yes

       When _u_n_s_e_t, mailboxes which contain no saved messages will be removed when
       closed (the exception is ``_$_s_p_o_o_l_f_i_l_e (section 6.4.296  , page 151)'' which is
       never removed).  If _s_e_t, mailboxes are never removed.

       NNoottee:: This only applies to mbox and MMDF folders, Mutt-ng does not delete MH
       and Maildir directories.

       _6_._4_._2_4_1  _s_a_v_e___n_a_m_e

       Type: boolean

       The Mutt Next Generation E-Mail Client                                      140

       Default: no

       This variable controls how copies of outgoing messages are saved.  When set, a
       check is made to see if a mailbox specified by the recipient address exists
       (this is done by searching for a mailbox in the ``_$_f_o_l_d_e_r (section 6.4.64  ,
       page 94)'' directory with the _u_s_e_r_n_a_m_e part of the recipient address).  If the
       mailbox exists, the outgoing message will be saved to that mailbox, otherwise
       the message is saved to the ``_$_r_e_c_o_r_d (section 6.4.230  , page 136)'' mailbox.

       Also see the ``_$_f_o_r_c_e___n_a_m_e (section 6.4.68  , page 96)'' variable.

       _6_._4_._2_4_2  _s_c_o_r_e

       Type: boolean

       Default: yes

       When this variable is _u_n_s_e_t, scoring is turned off.  This can be useful to
       selectively disable scoring for certain folders when the ``_$_s_c_o_r_e___t_h_r_e_s_h_-
       _o_l_d___d_e_l_e_t_e (section 6.4.243  , page 139)'' variable and friends are used.

       _6_._4_._2_4_3  _s_c_o_r_e___t_h_r_e_s_h_o_l_d___d_e_l_e_t_e

       Type: number

       Default: -1

       Messages which have been assigned a score equal to or lower than the value of
       this variable are automatically marked for deletion by Mutt-ng.  Since Mutt-ng
       scores are always greater than or equal to zero, the default setting of this
       variable will never mark a message for deletion.

       _6_._4_._2_4_4  _s_c_o_r_e___t_h_r_e_s_h_o_l_d___f_l_a_g

       Type: number

       Default: 9999

       Messages which have been assigned a score greater than or equal to this vari-
       able's value are automatically marked ``flagged''.

       _6_._4_._2_4_5  _s_c_o_r_e___t_h_r_e_s_h_o_l_d___r_e_a_d

       Type: number

       Default: -1

       Messages which have been assigned a score equal to or lower than the value of
       this variable are automatically marked as read by Mutt-ng.  Since Mutt-ng
       scores are always greater than or equal to zero, the default setting of this
       variable will never mark a message read.

       _6_._4_._2_4_6  _s_e_n_d___c_h_a_r_s_e_t

       The Mutt Next Generation E-Mail Client                                      141

       Type: string

       Default: 'us-ascii:iso-8859-1:utf-8'

       A list of character sets for outgoing messages. Mutt-ng will use the first
       character set into which the text can be converted exactly.  If your ``_$_c_h_a_r_s_e_t
       (section 6.4.24  , page 86)'' is not iso-8859-1 and recipients may not under-
       stand UTF-8, it is advisable to include in the list an appropriate widely used
       standard character set (such as iso-8859-2, koi8-r or iso-2022-jp) either
       instead of or after iso-8859-1.

       _6_._4_._2_4_7  _s_e_n_d_m_a_i_l

       Type: path

       Default: '/usr/sbin/sendmail -oem -oi'

       Specifies the program and arguments used to deliver mail sent by Mutt-ng.
       Mutt-ng expects that the specified program interprets additional arguments as
       recipient addresses.

       _6_._4_._2_4_8  _s_e_n_d_m_a_i_l___w_a_i_t

       Type: number

       Default: 0

       Specifies the number of seconds to wait for the ``_$_s_e_n_d_m_a_i_l (section 6.4.247  ,
       page 140)'' process to finish before giving up and putting delivery in the
       background.

       Mutt-ng interprets the value of this variable as follows:

             >0
                   number of seconds to wait for sendmail to finish before continuing

             0
                   wait forever for sendmail to finish

             <0
                   always put sendmail in the background without waiting

       Note that if you specify a value other than 0, the output of the child process
       will be put in a temporary file.  If there is some error, you will be informed
       as to where to find the output.

       _6_._4_._2_4_9  _s_h_e_l_l

       Type: path

       Default: ''

       Command to use when spawning a subshell.  By default, the user's login shell
       from /etc/passwd is used.

       The Mutt Next Generation E-Mail Client                                      142

       _6_._4_._2_5_0  _s_i_d_e_b_a_r___b_o_u_n_d_a_r_y

       Type: string

       Default: '.'

       When the sidebar is displayed and _$_s_i_d_e_b_a_r___s_h_o_r_t_e_n___h_i_e_r_a_r_c_h_y (section
       6.4.254  , page 142) is _s_e_t, this variable specifies the characters at which to
       split a folder name into ``hierarchy items.''

       _6_._4_._2_5_1  _s_i_d_e_b_a_r___d_e_l_i_m

       Type: string

       Default: '|'

       This specifies the delimiter between the sidebar (if visible) and other
       screens.

       _6_._4_._2_5_2  _s_i_d_e_b_a_r___n_e_w_m_a_i_l___o_n_l_y

       Type: boolean

       Default: no

       If _s_e_t, only folders with new mail will be shown in the sidebar.

       _6_._4_._2_5_3  _s_i_d_e_b_a_r___n_u_m_b_e_r___f_o_r_m_a_t

       Type: string

       Default: '%m%?n?(%n)?%?f?[%f]?'

       This variable controls how message counts are printed when the sidebar is
       enabled. If this variable is _e_m_p_t_y (_a_n_d _o_n_l_y _i_f), no numbers will be printed
       _a_n_d mutt-ng won't frequently count mail (which may be a great speedup esp. with
       mbox-style mailboxes.)

       The following printf(3)-like sequences are supported all of which may be
       printed non-zero:

             %d
                   Number of deleted messages. 1)

             %F
                   Number of flagged messages.

             %m
                   Total number of messages.

             %M
                   Total number of messages shown, i.e. not hidden by a limit. 1)

       The Mutt Next Generation E-Mail Client                                      143

             %n
                   Number of new messages.

             %t
                   Number of tagged messages. 1)

       1) These expandos only have a non-zero value for the current mailbox and will
       always be zero otherwise.

       _6_._4_._2_5_4  _s_i_d_e_b_a_r___s_h_o_r_t_e_n___h_i_e_r_a_r_c_h_y

       Type: boolean

       Default: no

       When _s_e_t, the ``hierarchy'' of the sidebar entries will be shortened only if
       they cannot be printed in full length (because ``_$_s_i_d_e_b_a_r___w_i_d_t_h (section
       6.4.256  , page 142)'' is set to a too low value). For example, if the news-
       group name ``de.alt.sysadmin.recovery'' doesn't fit on the screen, it'll get
       shortened ``d.a.s.recovery'' while ``de.alt.d0'' still would and thus will not
       get shortened.

       At which characters this compression is done is controled via the _$_s_i_d_e_-
       _b_a_r___b_o_u_n_d_a_r_y (section 6.4.250  , page 140) variable.

       _6_._4_._2_5_5  _s_i_d_e_b_a_r___v_i_s_i_b_l_e

       Type: boolean

       Default: no

       This specifies whether or not to show the sidebar (a list of folders specified
       with the ``mailboxes'' command).

       _6_._4_._2_5_6  _s_i_d_e_b_a_r___w_i_d_t_h

       Type: number

       Default: 0

       The width of the sidebar.

       _6_._4_._2_5_7  _s_i_g___d_a_s_h_e_s

       Type: boolean

       Default: yes

       If set, a line containing ``-- '' (dash, dash, space) will be inserted before
       your ``_$_s_i_g_n_a_t_u_r_e (section 6.4.259  , page 143)''.  It is ssttrroonnggllyy recommended
       that you not unset this variable unless your ``signature'' contains just your
       name. The reason for this is because many software packages use ``-- \n'' to
       detect your signature.

       The Mutt Next Generation E-Mail Client                                      144

       For example, Mutt-ng has the ability to highlight the signature in a different
       color in the builtin pager.

       _6_._4_._2_5_8  _s_i_g___o_n___t_o_p

       Type: boolean

       Default: no

       If _s_e_t, the signature will be included before any quoted or forwarded text.  It
       is ssttrroonnggllyy recommended that you do not set this variable unless you really
       know what you are doing, and are prepared to take some heat from netiquette
       guardians.

       _6_._4_._2_5_9  _s_i_g_n_a_t_u_r_e

       Type: path

       Default: '~/.signature'

       Specifies the filename of your signature, which is appended to all outgoing
       messages.   If the filename ends with a pipe (``|''), it is assumed that file-
       name is a shell command and input should be read from its stdout.

       _6_._4_._2_6_0  _s_i_g_n_o_f_f___s_t_r_i_n_g

       Type: string

       Default: ''

       If _s_e_t, this string will be inserted before the signature. This is useful for
       people that want to sign off every message they send with their name.

       If you want to insert your website's URL, additional contact information or
       witty quotes into your mails, better use a signature file instead of the sig-
       noff string.

       _6_._4_._2_6_1  _s_i_m_p_l_e___s_e_a_r_c_h

       Type: string

       Default: '~f %s | ~s %s'

       Specifies how Mutt-ng should expand a simple search into a real search pattern.
       A simple search is one that does not contain any of the ~ operators.  See
       ``_p_a_t_t_e_r_n_s (section 6.2  , page 77)'' for more information on search patterns.

       For example, if you simply type ``joe'' at a search or limit prompt, Mutt-ng
       will automatically expand it to the value specified by this variable.  For the
       default value it would be:

       ~f joe | ~s joe

       The Mutt Next Generation E-Mail Client                                      145

       _6_._4_._2_6_2  _s_l_e_e_p___t_i_m_e

       Type: number

       Default: 1

       Specifies time, in seconds, to pause while displaying certain informational
       messages, while moving from folder to folder and after expunging messages from
       the current folder.  The default is to pause one second, so a value of zero for
       this option suppresses the pause.

       _6_._4_._2_6_3  _s_m_a_r_t___w_r_a_p

       Type: boolean

       Default: yes

       Controls the display of lines longer than the screen width in the internal
       pager. If _s_e_t, long lines are wrapped at a word boundary.  If _u_n_s_e_t, lines are
       simply wrapped at the screen edge. Also see the ``_$_m_a_r_k_e_r_s (section 6.4.121  ,
       page 110)'' variable.

       _6_._4_._2_6_4  _s_m_i_l_e_y_s

       Type: regular expression

       Default: '(>From )|(:[-^]?[][)(><}{|/DP])'

       The _p_a_g_e_r uses this variable to catch some common false positives of
       ``_$_q_u_o_t_e___r_e_g_e_x_p (section 6.4.225  , page 134)'', most notably smileys in the
       beginning of a line

       _6_._4_._2_6_5  _s_m_i_m_e___a_s_k___c_e_r_t___l_a_b_e_l

       Type: boolean

       Default: yes

       This flag controls whether you want to be asked to enter a label for a certifi-
       cate about to be added to the database or not. It is _s_e_t by default.  (S/MIME
       only)

       _6_._4_._2_6_6  _s_m_i_m_e___c_a___l_o_c_a_t_i_o_n

       Type: path

       Default: ''

       This variable contains the name of either a directory, or a file which contains
       trusted certificates for use with OpenSSL.  (S/MIME only)

       _6_._4_._2_6_7  _s_m_i_m_e___c_e_r_t_i_f_i_c_a_t_e_s

       Type: path

       The Mutt Next Generation E-Mail Client                                      146

       Default: ''

       Since there is no pubring/secring as with PGP, Mutt-ng has to handle storage
       and retrieval of keys by itself. This is very basic right now, and keys and
       certificates are stored in two different directories, both named as the hash-
       value retrieved from OpenSSL. There is an index file which contains mailbox-
       address keyid pairs, and which can be manually edited. This one points to the
       location of the certificates.  (S/MIME only)

       _6_._4_._2_6_8  _s_m_i_m_e___d_e_c_r_y_p_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This format string specifies a command which is used to decrypt application/x-
       pkcs7-mime attachments.

       The OpenSSL command formats have their own set of printf(3)-like sequences sim-
       ilar to PGP's:

             %f
                   Expands to the name of a file containing a message.

             %s
                   Expands to the name of a file containing the signature part of a
                   multipart/signed attachment when verifying it.

             %k
                   The key-pair specified with _$_s_m_i_m_e___d_e_f_a_u_l_t___k_e_y (section 6.4.270  ,
                   page 145)

             %c
                   One or more certificate IDs.

             %a
                   The algorithm used for encryption.

             %C
                   CA location:  Depending on whether _$_s_m_i_m_e___c_a___l_o_c_a_t_i_o_n (section
                   6.4.266  , page 144) points to a directory or file, this expands to
                   '-CApath _$_s_m_i_m_e___c_a___l_o_c_a_t_i_o_n (section 6.4.266  , page 144)' or
                   '-CAfile _$_s_m_i_m_e___c_a___l_o_c_a_t_i_o_n (section 6.4.266  , page 144)'.

       For examples on how to configure these formats, see the smime.rc in the sam-
       ples/ subdirectory which has been installed on your system alongside the docu-
       mentation.  (S/MIME only)

       _6_._4_._2_6_9  _s_m_i_m_e___d_e_c_r_y_p_t___u_s_e___d_e_f_a_u_l_t___k_e_y

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                      147

       If _s_e_t (default) this tells Mutt-ng to use the default key for decryption. Oth-
       erwise, if manage multiple certificate-key-pairs, Mutt-ng will try to use the
       mailbox-address to determine the key to use. It will ask you to supply a key,
       if it can't find one.  (S/MIME only)

       _6_._4_._2_7_0  _s_m_i_m_e___d_e_f_a_u_l_t___k_e_y

       Type: string

       Default: ''

       This is the default key-pair to use for signing. This must be set to the keyid
       (the hash-value that OpenSSL generates) to work properly (S/MIME only)

       _6_._4_._2_7_1  _s_m_i_m_e___e_n_c_r_y_p_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to create encrypted S/MIME messages.  (S/MIME only)

       _6_._4_._2_7_2  _s_m_i_m_e___e_n_c_r_y_p_t___w_i_t_h

       Type: string

       Default: ''

       This sets the algorithm that should be used for encryption.  Valid choices are
       ``des'', ``des3'', ``rc2-40'', ``rc2-64'', ``\frc2-128''.

       If _u_n_s_e_t ``_3_d_e_s'' (TripleDES) is used.  (S/MIME only)

       _6_._4_._2_7_3  _s_m_i_m_e___g_e_t___c_e_r_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to extract X509 certificates from a PKCS7 structure.
       (S/MIME only)

       _6_._4_._2_7_4  _s_m_i_m_e___g_e_t___c_e_r_t___e_m_a_i_l___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to extract the mail address(es) used for storing X509 cer-
       tificates, and for verification purposes (to check whether the certificate was
       issued for the sender's mailbox).  (S/MIME only)

       _6_._4_._2_7_5  _s_m_i_m_e___g_e_t___s_i_g_n_e_r___c_e_r_t___c_o_m_m_a_n_d

       The Mutt Next Generation E-Mail Client                                      148

       Type: string

       Default: ''

       This command is used to extract only the signers X509 certificate from a S/MIME
       signature, so that the certificate's owner may get compared to the email's
       ``From:'' header field.  (S/MIME only)

       _6_._4_._2_7_6  _s_m_i_m_e___i_m_p_o_r_t___c_e_r_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to import a certificate via smime_keysng.  (S/MIME only)

       _6_._4_._2_7_7  _s_m_i_m_e___i_s___d_e_f_a_u_l_t

       Type: boolean

       Default: no

       The default behaviour of Mutt-ng is to use PGP on all auto-sign/encryption
       operations. To override and to use OpenSSL instead this must be _s_e_t.

       However, this has no effect while replying, since Mutt-ng will automatically
       select the same application that was used to sign/encrypt the original message.

       (Note that this variable can be overridden by unsetting _$_c_r_y_p_t___a_u_t_o_s_m_i_m_e (sec-
       tion 6.4.37  , page 89).)  (S/MIME only)

       _6_._4_._2_7_8  _s_m_i_m_e___k_e_y_s

       Type: path

       Default: ''

       Since there is no pubring/secring as with PGP, Mutt-ng has to handle storage ad
       retrieval of keys/certs by itself. This is very basic right now, and stores
       keys and certificates in two different directories, both named as the hash-
       value retrieved from OpenSSL. There is an index file which contains mailbox-
       address keyid pair, and which can be manually edited. This one points to the
       location of the private keys.  (S/MIME only)

       _6_._4_._2_7_9  _s_m_i_m_e___p_k_7_o_u_t___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to extract PKCS7 structures of S/MIME signatures, in order
       to extract the public X509 certificate(s).  (S/MIME only)

       The Mutt Next Generation E-Mail Client                                      149

       _6_._4_._2_8_0  _s_m_i_m_e___s_i_g_n___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to created S/MIME signatures of type multipart/signed,
       which can be read by all mail clients.  (S/MIME only)

       _6_._4_._2_8_1  _s_m_i_m_e___s_i_g_n___o_p_a_q_u_e___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to created S/MIME signatures of type application/x-
       pkcs7-signature, which can only be handled by mail clients supporting the
       S/MIME extension.  (S/MIME only)

       _6_._4_._2_8_2  _s_m_i_m_e___t_i_m_e_o_u_t

       Type: number

       Default: 300

       The number of seconds after which a cached passphrase will expire if not used.
       (S/MIME only)

       _6_._4_._2_8_3  _s_m_i_m_e___v_e_r_i_f_y___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to verify S/MIME signatures of type multipart/signed.
       (S/MIME only)

       _6_._4_._2_8_4  _s_m_i_m_e___v_e_r_i_f_y___o_p_a_q_u_e___c_o_m_m_a_n_d

       Type: string

       Default: ''

       This command is used to verify S/MIME signatures of type application/x-
       pkcs7-mime.  (S/MIME only)

       _6_._4_._2_8_5  _s_m_t_p___a_u_t_h___p_a_s_s_w_o_r_d

       Type: string

       Default: ''

       Availability: SMTP

       The Mutt Next Generation E-Mail Client                                      150

       Defines the password to use with SMTP AUTH.  If ``_$_s_m_t_p___a_u_t_h___u_s_e_r_n_a_m_e (section
       6.4.286  , page 148)'' is set, but this variable is not, you will be prompted
       for a password when sending.

       NNoottee:: Storing passwords in a configuration file presents a security risk since
       the superuser of your machine may read it regardless of the file's permissions.

       _6_._4_._2_8_6  _s_m_t_p___a_u_t_h___u_s_e_r_n_a_m_e

       Type: string

       Default: ''

       Availability: SMTP

       Defines the username to use with SMTP AUTH.  Setting this variable will cause
       Mutt-ng to attempt to use SMTP AUTH when sending.

       _6_._4_._2_8_7  _s_m_t_p___h_o_s_t

       Type: string

       Default: ''

       Availability: SMTP

       Defines the SMTP host which will be used to deliver mail, as opposed to invok-
       ing the sendmail binary.  Setting this variable overrides the value of ``_$_s_e_n_d_-
       _m_a_i_l (section 6.4.247  , page 140)'', and any associated variables.

       _6_._4_._2_8_8  _s_m_t_p___p_o_r_t

       Type: number

       Default: 25

       Availability: SMTP

       Defines the port that the SMTP host is listening on for mail delivery.  Must be
       specified as a number.

       Defaults to 25, the standard SMTP port, but RFC 2476-compliant SMTP servers
       will probably desire 587, the mail submission port.

       _6_._4_._2_8_9  _s_m_t_p___u_s_e___t_l_s

       Type: string

       Default: ''

       Availability: SMTP (and SSL)

       Defines wether to use STARTTLS. If this option is set to ``_r_e_q_u_i_r_e_d'' and the
       server does not support STARTTLS or there is an error in the TLS Handshake, the

       The Mutt Next Generation E-Mail Client                                      151

       connection will fail. Setting this to ``_e_n_a_b_l_e_d'' will try to start TLS and
       continue without TLS in case of an error.  Muttng still needs to have SSL sup-
       port enabled in order to use it.

       _6_._4_._2_9_0  _s_o_r_t

       Type: sort order

       Default: date

       Specifies how to sort messages in the _i_n_d_e_x menu.  Valid values are:

               date or date-sent
               date-received
               from
               mailbox-order (unsorted)
               score
               size
               spam
               subject
               threads
               to

       You may optionally use the ``reverse-'' prefix to specify reverse sorting order
       (example: set sort=reverse-date-sent).

       _6_._4_._2_9_1  _s_o_r_t___a_l_i_a_s

       Type: sort order

       Default: alias

       Specifies how the entries in the ``alias'' menu are sorted.  The following are
       legal values:

               address (sort alphabetically by email address)
               alias (sort alphabetically by alias name)
               unsorted (leave in order specified in .muttrc)

       _6_._4_._2_9_2  _s_o_r_t___a_u_x

       Type: sort order

       Default: date

       When sorting by threads, this variable controls how threads are sorted in rela-
       tion to other threads, and how the branches of the thread trees are sorted.
       This can be set to any value that ``_$_s_o_r_t (section 6.4.290  , page 149)'' can,
       except threads (in that case, Mutt-ng will just use date-sent).  You can also
       specify the ``last-'' prefix in addition to ``reverse-'' prefix, but last- must

       The Mutt Next Generation E-Mail Client                                      152

       come after reverse-.  The last- prefix causes messages to be sorted against its
       siblings by which has the last descendant, using the rest of sort_aux as an
       ordering.

       For instance, set sort_aux=last-date-received would mean that if a new message
       is received in a thread, that thread becomes the last one displayed (or the
       first, if you have set sort=reverse-threads.)

       NNoottee:: For reversed ``_$_s_o_r_t (section 6.4.290  , page 149)'' order _$_s_o_r_t___a_u_x
       (section 6.4.292  , page 150) is reversed again (which is not the right thing
       to do, but kept to not break any existing configuration setting).

       _6_._4_._2_9_3  _s_o_r_t___b_r_o_w_s_e_r

       Type: sort order

       Default: alpha

       Specifies how to sort entries in the file browser.  By default, the entries are
       sorted alphabetically.  Valid values:

               alpha (alphabetically)
               date
               size
               unsorted

       You may optionally use the ``reverse-'' prefix to specify reverse sorting order
       (example: set sort_browser=reverse-date).

       _6_._4_._2_9_4  _s_o_r_t___r_e

       Type: boolean

       Default: yes

       This variable is only useful when sorting by threads with ``_$_s_t_r_i_c_t___t_h_r_e_a_d_s
       (section 6.4.311  , page 157)'' _u_n_s_e_t. In that case, it changes the heuristic
       Mutt-ng uses to thread messages by subject.  With _$_s_o_r_t___r_e (section 6.4.294  ,
       page 151) _s_e_t, Mutt-ng will only attach a message as the child of another mes-
       sage by subject if the subject of the child message starts with a substring
       matching the setting of ``_$_r_e_p_l_y___r_e_g_e_x_p (section 6.4.231  , page 136)''. With
       _$_s_o_r_t___r_e (section 6.4.294  , page 151) _u_n_s_e_t, Mutt-ng will attach the message
       whether or not this is the case, as long as the non-``_$_r_e_p_l_y___r_e_g_e_x_p (section
       6.4.231  , page 136)'' parts of both messages are identical.

       _6_._4_._2_9_5  _s_p_a_m___s_e_p_a_r_a_t_o_r

       Type: string

       Default: ','

       ``_s_p_a_m___s_e_p_a_r_a_t_o_r (section 6.4.295  , page 151)'' controls what happens when

       The Mutt Next Generation E-Mail Client                                      153

       multiple spam headers are matched: if _u_n_s_e_t, each successive header will over-
       write any previous matches value for the spam label. If _s_e_t, each successive
       match will append to the previous, using ``_s_p_a_m___s_e_p_a_r_a_t_o_r (section 6.4.295  ,
       page 151)'' as a separator.

       _6_._4_._2_9_6  _s_p_o_o_l_f_i_l_e

       Type: path

       Default: ''

       If your spool mailbox is in a non-default place where Mutt-ng cannot find it,
       you can specify its location with this variable.  Mutt-ng will automatically
       set this variable to the value of the environment variable $MAIL if it is not
       set.

       _6_._4_._2_9_7  _s_s_l___c_a___c_e_r_t_i_f_i_c_a_t_e_s___f_i_l_e

       Type: path

       Default: ''

       This variable specifies a file containing trusted CA certificates.  Any server
       certificate that is signed with one of these CA certificates are also automati-
       cally accepted.

       Example: set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt

       _6_._4_._2_9_8  _s_s_l___c_l_i_e_n_t___c_e_r_t

       Type: path

       Default: ''

       Availability: SSL

       The file containing a client certificate and its associated private key.

       _6_._4_._2_9_9  _s_s_l___f_o_r_c_e___t_l_s

       Type: boolean

       Default: no

       If this variable is _s_e_t, mutt-ng will require that all connections to remote
       servers be encrypted. Furthermore it will attempt to negotiate TLS even if the
       server does not advertise the capability, since it would otherwise have to
       abort the connection anyway. This option supersedes ``_$_s_s_l___s_t_a_r_t_t_l_s (section
       6.4.301  , page 152)''.

       _6_._4_._3_0_0  _s_s_l___m_i_n___d_h___p_r_i_m_e___b_i_t_s

       Type: number

       The Mutt Next Generation E-Mail Client                                      154

       Default: 0

       Availability: GNUTLS

       This variable specifies the minimum acceptable prime size (in bits) for use in
       any Diffie-Hellman key exchange. A value of 0 will use the default from the
       GNUTLS library.

       _6_._4_._3_0_1  _s_s_l___s_t_a_r_t_t_l_s

       Type: quadoption

       Default: yes

       Availability: SSL or GNUTLS

       If _s_e_t (the default), Mutt-ng will attempt to use STARTTLS on servers advertis-
       ing the capability. When _u_n_s_e_t, Mutt-ng will not attempt to use STARTTLS
       regardless of the server's capabilities.

       _6_._4_._3_0_2  _s_s_l___u_s_e___s_s_l_v_2

       Type: boolean

       Default: yes

       Availability: SSL

       This variables specifies whether to attempt to use SSLv2 in the SSL authentica-
       tion process.

       _6_._4_._3_0_3  _s_s_l___u_s_e___s_s_l_v_3

       Type: boolean

       Default: yes

       Availability: SSL or GNUTLS

       This variables specifies whether to attempt to use SSLv3 in the SSL authentica-
       tion process.

       _6_._4_._3_0_4  _s_s_l___u_s_e___t_l_s_v_1

       Type: boolean

       Default: yes

       Availability: SSL or GNUTLS

       This variables specifies whether to attempt to use TLSv1 in the SSL authentica-
       tion process.

       The Mutt Next Generation E-Mail Client                                      155

       _6_._4_._3_0_5  _s_s_l___u_s_e_s_y_s_t_e_m_c_e_r_t_s

       Type: boolean

       Default: yes

       Availability: SSL

       If set to _y_e_s, Mutt-ng will use CA certificates in the system-wide certificate
       store when checking if server certificate is signed by a trusted CA.

       _6_._4_._3_0_6  _s_t_a_t_u_s___c_h_a_r_s

       Type: string

       Default: '-*%A'

       Controls the characters used by the ``%r'' indicator in ``_$_s_t_a_t_u_s___f_o_r_m_a_t (sec-
       tion 6.4.307  , page 154)''. The first character is used when the mailbox is
       unchanged. The second is used when the mailbox has been changed, and it needs
       to be resynchronized. The third is used if the mailbox is in read-only mode, or
       if the mailbox will not be written when exiting that mailbox (You can toggle
       whether to write changes to a mailbox with the toggle-write operation, bound by
       default to ``%'').  The fourth  is used to indicate that the current folder has
       been opened in attach-message mode (Certain operations like composing a new
       mail, replying, forwarding, etc. are not permitted in this mode).

       _6_._4_._3_0_7  _s_t_a_t_u_s___f_o_r_m_a_t

       Type: string

       Default: '-%r-Mutt-ng: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d?
       Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l?
       %l?]---(%s/%S)-%>-(%P)---'

       Controls the format of the status line displayed in the _i_n_d_e_x menu.  This
       string is similar to ``_$_i_n_d_e_x___f_o_r_m_a_t (section 6.4.110  , page 105)'', but has
       its own set of printf(3)-like sequences:

             %b
                   number of mailboxes with new mail *

             %B
                   the short pathname of the current mailbox

             %d
                   number of deleted messages *

             %f
                   the full pathname of the current mailbox

             %F
                   number of flagged messages *

       The Mutt Next Generation E-Mail Client                                      156

             %h
                   local hostname

             %l
                   size (in bytes) of the current mailbox *

             %L
                   size (in bytes) of the messages shown (i.e., which match the cur-
                   rent limit) *

             %m
                   the number of messages in the mailbox *

             %M
                   the number of messages shown (i.e., which match the current limit)
                   *

             %n
                   number of new messages in the mailbox *

             %o
                   number of old unread messages *

             %p
                   number of postponed messages *

             %P
                   percentage of the way through the index

             %r
                   modified/read-only/won't-write/attach-message indicator, according
                   to _$_s_t_a_t_u_s___c_h_a_r_s (section 6.4.306  , page 154)

             %s
                   current sorting mode (_$_s_o_r_t (section 6.4.290  , page 149))

             %S
                   current aux sorting method (_$_s_o_r_t___a_u_x (section 6.4.292  , page
                   150))

             %t
                   number of tagged messages *

             %u
                   number of unread messages *

             %v
                   Mutt-ng version string

             %V
                   currently active limit pattern, if any *

             %>X
                   right justify the rest of the string and pad with 'X'

       The Mutt Next Generation E-Mail Client                                      157

             %|X
                   pad to the end of the line with 'X'

       * = can be optionally printed if nonzero

       Some of the above sequences can be used to optionally print a string if their
       value is nonzero.  For example, you may only want to see the number of flagged
       messages if such messages exist, since zero is not particularly meaningful.  To
       optionally print a string based upon one of the above sequences, the following
       construct is used

       %?<sequence_char>?<optional_string>?

       where _s_e_q_u_e_n_c_e___c_h_a_r is a character from the table above, and _o_p_t_i_o_n_a_l___s_t_r_i_n_g is
       the string you would like printed if _s_e_q_u_e_n_c_e___c_h_a_r is nonzero.  _o_p_t_i_o_n_a_l___s_t_r_i_n_g
       mmaayy contain other sequences as well as normal text, but you may nnoott nest
       optional strings.

       Here is an example illustrating how to optionally print the number of new mes-
       sages in a mailbox:

       %?n?%n new messages.?

       Additionally you can switch between two strings, the first one, if a value is
       zero, the second one, if the value is nonzero, by using the following con-
       struct:

       %?<sequence_char>?<if_string>&<else_string>?

       You can additionally force the result of any printf(3)-like sequence to be low-
       ercase by prefixing the sequence character with an underscore (_) sign.  For
       example, if you want to display the local hostname in lowercase, you would use:

       %_h

       If you prefix the sequence character with a colon (:) character, Mutt-ng will
       replace any dots in the expansion by underscores. This might be helpful with
       IMAP folders that don't like dots in folder names.

       _6_._4_._3_0_8  _s_t_a_t_u_s___o_n___t_o_p

       Type: boolean

       Default: no

       Setting this variable causes the ``status bar'' to be displayed on the first
       line of the screen rather than near the bottom.

       _6_._4_._3_0_9  _s_t_r_i_c_t___m_a_i_l_t_o

       Type: boolean

       Default: yes

       The Mutt Next Generation E-Mail Client                                      158

       With mailto: style links, a body as well as arbitrary header information may be
       embedded. This may lead to (user) headers being overwriten without note if
       ``_$_e_d_i_t___h_e_a_d_e_r_s (section 6.4.54  , page 92)'' is unset.

       If this variable is _s_e_t, mutt-ng is strict and allows anything to be changed.
       If it's _u_n_s_e_t, all headers given will be prefixed with ``X-Mailto-'' and the
       message including headers will be shown in the editor regardless of what
       ``_$_e_d_i_t___h_e_a_d_e_r_s (section 6.4.54  , page 92)'' is set to.

       _6_._4_._3_1_0  _s_t_r_i_c_t___m_i_m_e

       Type: boolean

       Default: yes

       When _u_n_s_e_t, non MIME-compliant messages that doesn't have any charset indica-
       tion in the ``Content-Type:'' header field can be displayed (non MIME-compliant
       messages are often generated by old mailers or buggy mailers like MS Outlook
       Express).  See also _$_a_s_s_u_m_e_d___c_h_a_r_s_e_t (section 6.4.11  , page 82).

       This option also replaces linear-white-space between encoded-word and *text to
       a single space to prevent the display of MIME-encoded ``Subject:'' header field
       from being devided into multiple lines.

       _6_._4_._3_1_1  _s_t_r_i_c_t___t_h_r_e_a_d_s

       Type: boolean

       Default: no

       If _s_e_t, threading will only make use of the ``In-Reply-To:'' and ``Refer-
       ences:'' header fields when you ``_$_s_o_r_t (section 6.4.290  , page 149)'' by mes-
       sage threads.  By default, messages with the same subject are grouped together
       in ``pseudo threads.''  This may not always be desirable, such as in a personal
       mailbox where you might have several unrelated messages with the subject ``hi''
       which will get grouped together.

       _6_._4_._3_1_2  _s_t_r_i_p___w_a_s

       Type: boolean

       Default: no

       When _s_e_t, mutt-ng will remove the trailing part of the ``Subject:'' line which
       matches _$_s_t_r_i_p___w_a_s___r_e_g_e_x (section 6.4.313  , page 157) when replying. This is
       useful to properly react on subject changes and reduce ``subject noise.'' (esp.
       in Usenet)

       _6_._4_._3_1_3  _s_t_r_i_p___w_a_s___r_e_g_e_x

       Type: regular expression

       Default: '\([Ww][Aa][RrSs]: .*\)[ ]*$'

       The Mutt Next Generation E-Mail Client                                      159

       When non-empty and _$_s_t_r_i_p___w_a_s (section 6.4.312  , page 157) is _s_e_t, mutt-ng
       will remove this trailing part of the ``Subject'' line when replying if it
       won't be empty afterwards.

       _6_._4_._3_1_4  _s_t_u_f_f___q_u_o_t_e_d

       Type: boolean

       Default: no

       If _s_e_t, attachments with flowed format will have their quoting ``stuffed'',
       i.e. a space will be inserted between the quote characters and the actual text.

       _6_._4_._3_1_5  _s_u_s_p_e_n_d

       Type: boolean

       Default: yes

       When _u_n_s_e_t, Mutt-ng won't stop when the user presses the terminal's _s_u_s_p key,
       usually CTRL+Z. This is useful if you run Mutt-ng inside an xterm using a com-
       mand like ``xterm -e muttng.''

       _6_._4_._3_1_6  _t_e_x_t___f_l_o_w_e_d

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will generate text/plain; format=flowed attachments.  This
       format is easier to handle for some mailing software, and generally just looks
       like ordinary text.  To actually make use of this format's features, you'll
       need support in your editor.

       Note that _$_i_n_d_e_n_t___s_t_r_i_n_g (section 6.4.109  , page 105) is ignored when this
       option is set.

       _6_._4_._3_1_7  _t_h_o_r_o_u_g_h___s_e_a_r_c_h

       Type: boolean

       Default: no

       Affects the ~b and ~h search operations described in section ``_p_a_t_t_e_r_n_s (sec-
       tion 6.2  , page 77)'' above.  If _s_e_t, the headers and attachments of messages
       to be searched are decoded before searching.  If _u_n_s_e_t, messages are searched
       as they appear in the folder.

       _6_._4_._3_1_8  _t_h_r_e_a_d___r_e_c_e_i_v_e_d

       Type: boolean

       Default: no

       The Mutt Next Generation E-Mail Client                                      160

       When _s_e_t, Mutt-ng uses the date received rather than the date sent to thread
       messages by subject.

       _6_._4_._3_1_9  _t_i_l_d_e

       Type: boolean

       Default: no

       When _s_e_t, the internal-pager will pad blank lines to the bottom of the screen
       with a tilde (~).

       _6_._4_._3_2_0  _t_i_m_e_o_u_t

       Type: number

       Default: 600

       This variable controls the _n_u_m_b_e_r _o_f _s_e_c_o_n_d_s Mutt-ng will wait for a key to be
       pressed in the main menu before timing out and checking for new mail.  A value
       of zero or less will cause Mutt-ng to never time out.

       _6_._4_._3_2_1  _t_m_p_d_i_r

       Type: path

       Default: ''

       This variable allows you to specify where Mutt-ng will place its temporary
       files needed for displaying and composing messages.  If this variable is not
       set, the environment variable $TMPDIR is used.  If $TMPDIR is not set then
       '/tmp' is used.

       _6_._4_._3_2_2  _t_o___c_h_a_r_s

       Type: string

       Default: ' +TCFL'

       Controls the character used to indicate mail addressed to you.  The first char-
       acter is the one used when the mail is NOT addressed to your address (default:
       space).  The second is used when you are the only recipient of the message
       (default: +).  The third is when your address appears in the ``To:'' header
       field, but you are not the only recipient of the message (default: T).  The
       fourth character is used when your address is specified in the ``Cc:'' header
       field, but you are not the only recipient.  The fifth character is used to
       indicate mail that was sent by _y_o_u.  The sixth character is used to indicate
       when a mail was sent to a mailing-list you're subscribe to (default: L).

       _6_._4_._3_2_3  _t_r_a_s_h

       Type: path

       Default: ''

       The Mutt Next Generation E-Mail Client                                      161

       If _s_e_t, this variable specifies the path of the trash folder where the mails
       marked for deletion will be moved, instead of being irremediably purged.

       NNoottee: When you delete a message in the trash folder, it is really deleted, so
       that there is no way to recover mail.

       _6_._4_._3_2_4  _t_u_n_n_e_l

       Type: string

       Default: ''

       Setting this variable will cause Mutt-ng to open a pipe to a command instead of
       a raw socket. You may be able to use this to set up preauthenticated connec-
       tions to your IMAP/POP3 server. Example:

       tunnel='ssh -q mailhost.net /usr/local/libexec/imapd'

       NNoottee:: For this example to work you must be able to log in to the remote machine
       without having to enter a password.

       _6_._4_._3_2_5  _u_m_a_s_k

       Type: number

       Default: 0077

       This sets the umask that will be used by Mutt-ng when creating all kinds of
       files. If _u_n_s_e_t, the default value is 077.

       _6_._4_._3_2_6  _u_n_c_o_l_l_a_p_s_e___j_u_m_p

       Type: boolean

       Default: no

       When _s_e_t, Mutt-ng will jump to the next unread message, if any, when the cur-
       rent thread is _u_ncollapsed.

       _6_._4_._3_2_7  _u_s_e___8_b_i_t_m_i_m_e

       Type: boolean

       Default: no

       WWaarrnniinngg:: do not set this variable unless you are using a version of sendmail
       which supports the -B8BITMIME flag (such as sendmail 8.8.x) or you may not be
       able to send mail.

       When _s_e_t, Mutt-ng will invoke ``_$_s_e_n_d_m_a_i_l (section 6.4.247  , page 140)'' with
       the -B8BITMIME flag when sending 8-bit messages to enable ESMTP negotiation.

       _6_._4_._3_2_8  _u_s_e___d_o_m_a_i_n

       The Mutt Next Generation E-Mail Client                                      162

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will qualify all local addresses (ones without the @host por-
       tion) with the value of ``_$_h_o_s_t_n_a_m_e (section 6.4.89  , page 100)''.  If _u_n_s_e_t,
       no addresses will be qualified.

       _6_._4_._3_2_9  _u_s_e___f_r_o_m

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will generate the ``From:'' header field when sending mes-
       sages. If _u_n_s_e_t, no ``From:'' header field will be generated unless the user
       explicitly sets one using the ``_m_y___h_d_r (section 3.15  , page 34)'' command.

       _6_._4_._3_3_0  _u_s_e___i_d_n

       Type: boolean

       Default: yes

       Availability: IDN

       When _s_e_t, Mutt-ng will show you international domain names decoded.

       NNoottee:: You can use IDNs for addresses even if this is _u_n_s_e_t.  This variable only
       affects decoding.

       _6_._4_._3_3_1  _u_s_e___i_p_v_6

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will look for IPv6 addresses of hosts it tries to contact.
       If this option is _u_n_s_e_t, Mutt-ng will restrict itself to IPv4 addresses.  Nor-
       mally, the default should work.

       _6_._4_._3_3_2  _u_s_e_r___a_g_e_n_t

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will add a ``User-Agent:'' header to outgoing messages, indi-
       cating which version of Mutt-ng was used for composing them.

       _6_._4_._3_3_3  _v_i_s_u_a_l

       Type: path

       The Mutt Next Generation E-Mail Client                                      163

       Default: ''

       Specifies the visual editor to invoke when the _~_v command is given in the
       builtin editor.

       _6_._4_._3_3_4  _w_a_i_t___k_e_y

       Type: boolean

       Default: yes

       Controls whether Mutt-ng will ask you to press a key after _s_h_e_l_l_- _e_s_c_a_p_e, _p_i_p_e_-
       _m_e_s_s_a_g_e, _p_i_p_e_-_e_n_t_r_y, _p_r_i_n_t_-_m_e_s_s_a_g_e, and _p_r_i_n_t_-_e_n_t_r_y commands.

       It is also used when viewing attachments with ``_a_u_t_o___v_i_e_w (section 5.4  , page
       74)'', provided that the corresponding mailcap entry has a needsterminal flag,
       and the external program is interactive.

       When _s_e_t, Mutt-ng will always ask for a key. When _u_n_s_e_t, Mutt-ng will wait for
       a key only if the external command returned a non-zero status.

       _6_._4_._3_3_5  _w_e_e_d

       Type: boolean

       Default: yes

       When _s_e_t, Mutt-ng will weed headers when displaying, forwarding, printing, or
       replying to messages.

       _6_._4_._3_3_6  _w_r_a_p___s_e_a_r_c_h

       Type: boolean

       Default: yes

       Controls whether searches wrap around the end of the mailbox.

       When _s_e_t, searches will wrap around the first (or last) message. When _u_n_s_e_t,
       searches will not wrap.

       _6_._4_._3_3_7  _w_r_a_p_m_a_r_g_i_n

       Type: number

       Default: 0

       Controls the size of the margin remaining at the right side of the terminal
       when Mutt-ng's pager does smart wrapping.

       _6_._4_._3_3_8  _w_r_i_t_e___b_c_c

       Type: boolean

       The Mutt Next Generation E-Mail Client                                      164

       Default: yes

       Controls whether Mutt-ng writes out the Bcc header when preparing messages to
       be sent.  Exim users may wish to _u_n_s_e_t this.

       _6_._4_._3_3_9  _w_r_i_t_e___i_n_c

       Type: number

       Default: 10

       When writing a mailbox, a message will be printed every _w_r_i_t_e___i_n_c messages to
       indicate progress.  If set to 0, only a single message will be displayed before
       writing a mailbox.

       Also see the ``_$_r_e_a_d___i_n_c (section 6.4.226  , page 135)'' variable.

       _6_._4_._3_4_0  _x_t_e_r_m___i_c_o_n

       Type: string

       Default: 'M%?n?AIL&ail?'

       Controls the format of the X11 icon title, as long as _$_x_t_e_r_m___s_e_t___t_i_t_l_e_s (sec-
       tion 6.4.342  , page 163) is _s_e_t. This string is identical in formatting to the
       one used by ``_$_s_t_a_t_u_s___f_o_r_m_a_t (section 6.4.307  , page 154)''.

       _6_._4_._3_4_1  _x_t_e_r_m___l_e_a_v_e

       Type: string

       Default: ''

       If _$_x_t_e_r_m___s_e_t___t_i_t_l_e_s (section 6.4.342  , page 163) is _s_e_t, this string will be
       used to set the title when leaving mutt-ng. For terminal-based programs,
       there's no easy and portable way to read the current title so mutt-ng cannot
       read it upon startup and restore it when exiting.

       Based on the xterm FAQ, the following might work:

       set xterm_leave = '`test x$DISPLAY != x && xprop -id $WINDOWID | grep WM_NAME |
       cut -d ''' -f 2`'

       _6_._4_._3_4_2  _x_t_e_r_m___s_e_t___t_i_t_l_e_s

       Type: boolean

       Default: no

       Controls whether Mutt-ng sets the xterm title bar and icon name (as long as
       you're in an appropriate terminal). The default must be _u_n_s_e_t to force in the
       validity checking.

       The Mutt Next Generation E-Mail Client                                      165

       _6_._4_._3_4_3  _x_t_e_r_m___t_i_t_l_e

       Type: string

       Default: 'Mutt-ng with %?m?%m messages&no messages?%?n? [%n New]?'

       Controls the format of the title bar of the xterm provided that
       _$_x_t_e_r_m___s_e_t___t_i_t_l_e_s (section 6.4.342  , page 163) has been _s_e_t. This string is
       identical in formatting to the one used by ``_$_s_t_a_t_u_s___f_o_r_m_a_t (section 6.4.307  ,
       page 154)''.

       _6_._5  _F_u_n_c_t_i_o_n_s

       The following is the list of available functions listed by the mapping in which
       they are available.  The default key setting is given, and an explanation of
       what the function does.  The key bindings of these functions can be changed
       with the _b_i_n_d (section 3.4  , page 24) command.

       _6_._5_._1  _g_e_n_e_r_i_c

       The _g_e_n_e_r_i_c menu is not a real menu, but specifies common functions (such as
       movement) available in all menus except for _p_a_g_e_r and _e_d_i_t_o_r.  Changing set-
       tings for this menu will affect the default bindings for all menus (except as
       noted).

       The Mutt Next Generation E-Mail Client                                      166

            bottom-page                L   move to the bottom of the page
            current-bottom     not bound   move current entry to bottom of page
            current-middle     not bound   move current entry to middle of page
            current-top        not bound   move current entry to top of page
            enter-command              :   enter a muttngrc command
            exit                       q   exit this menu
            first-entry                =   move to the first entry
            half-down                  ]   scroll down 1/2 page
            half-up                    [   scroll up 1/2 page
            help                       ?   this screen
            jump                  number   jump to an index number
            last-entry                 *   move to the last entry
            middle-page                M   move to the middle of the page
            next-entry                 j   move to the next entry
            next-line                  >   scroll down one line
            next-page                  z   move to the next page
            previous-entry             k   move to the previous entry
            previous-line              <   scroll up one line
            previous-page              Z   move to the previous page
            refresh                   ^L   clear and redraw the screen
            search                     /   search for a regular expression
            search-next                n   search for next match
            search-opposite    not bound   search for next match in opposite direction
            search-reverse         ESC /   search backwards for a regular expression
            select-entry             RET   select the current entry
            shell-escape               !   run a program in a subshell
            tag-entry                  t   toggle the tag on the current entry
            tag-prefix                 ;   apply next command to tagged entries
            tag-prefix-cond    not bound   apply next function ONLY to tagged messages
            top-page                   H   move to the top of the page
            what-key           not bound   display the keycode for a key press

       _6_._5_._2  _i_n_d_e_x

       The Mutt Next Generation E-Mail Client                                      167

            bounce-message             b   remail a message to another user
            change-folder              c   open a different folder
            change-folder-readonly ESC c   open a different folder in read only mode
            check-traditional-pgp  ESC P   check for classic pgp
            clear-flag                 W   clear a status flag from a message
            copy-message               C   copy a message to a file/mailbox
            create-alias               a   create an alias from a message sender
            decode-copy            ESC C   decode a message and copy it to a file/mailbox
            decode-save            ESC s   decode a message and save it to a file/mailbox
            delete-message             d   delete the current entry
            delete-pattern             D   delete messages matching a pattern
            delete-subthread       ESC d   delete all messages in subthread
            delete-thread             ^D   delete all messages in thread
            display-address            @   display full address of sender
            display-toggle-weed        h   display message and toggle header weeding
            display-message          RET   display a message
            edit                       e   edit the current message
            edit-type                 ^E   edit the current message's Content-Type
            exit                       x   exit without saving changes
            extract-keys              ^K   extract PGP public keys
            fetch-mail                 G   retrieve mail from POP server
            flag-message               F   toggle a message's 'important' flag
            forget-passphrase         ^F   wipe PGP passphrase from memory
            forward-message            f   forward a message with comments
            group-reply                g   reply to all recipients
            limit                      l   show only messages matching a pattern
            list-reply                 L   reply to specified mailing list
            mail                       m   compose a new mail message
            mail-key               ESC k   mail a PGP public key
            next-new                 TAB   jump to the next new message
            next-subthread         ESC n   jump to the next subthread
            next-thread               ^N   jump to the next thread
            next-undeleted             j   move to the next undeleted message
            next-unread        not bound   jump to the next unread message
            parent-message             P   jump to parent message in thread
            pipe-message               |   pipe message/attachment to a shell command
            previous-new         ESC TAB   jump to the previous new message
            previous-page              Z   move to the previous page
            previous-subthread     ESC p   jump to previous subthread
            previous-thread           ^P   jump to previous thread
            previous-undeleted         k   move to the last undelete message
            previous-unread    not bound   jump to the previous unread message
            print-message              p   print the current entry
            query                      Q   query external program for addresses
            quit                       q   save changes to mailbox and quit
            read-subthread         ESC r   mark the current subthread as read
            read-thread               ^R   mark the current thread as read
            recall-message             R   recall a postponed message
            reply                      r   reply to a message
            resend-message         ESC e   resend message and preserve MIME structure
            save-message               s   save message/attachment to a file
            set-flag                   w   set a status flag on a message
            show-version               V   show the Mutt-ng version number and date
            show-limit             ESC l   show currently active limit pattern, if any

       The Mutt Next Generation E-Mail Client                                      168

            sort-mailbox               o   sort messages
            sort-reverse               O   sort messages in reverse order
            sync-mailbox               $   save changes to mailbox
            tag-pattern                T   tag messages matching a pattern
            tag-thread             ESC t   tag/untag all messages in the current thread
            toggle-new                 N   toggle a message's 'new' flag
            toggle-write               %   toggle whether the mailbox will be rewritten
            undelete-message           u   undelete the current entry
            undelete-pattern           U   undelete messages matching a pattern
            undelete-subthread     ESC u   undelete all messages in subthread
            undelete-thread           ^U   undelete all messages in thread
            untag-pattern             ^T   untag messages matching a pattern
            view-attachments           v   show MIME attachments

       _6_._5_._3  _p_a_g_e_r

       The Mutt Next Generation E-Mail Client                                      169

            bottom             not bound   jump to the bottom of the message
            bounce-message             b   remail a message to another user
            change-folder              c   open a different folder
            change-folder-readonly ESC c   open a different folder in read only mode
            check-traditional-pgp  ESC P   check for classic pgp
            copy-message               C   copy a message to a file/mailbox
            create-alias               a   create an alias from a message sender
            decode-copy            ESC C   decode a message and copy it to a file/mailbox
            decode-save            ESC s   decode a message and save it to a file/mailbox
            delete-message             d   delete the current entry
            delete-subthread       ESC d   delete all messages in subthread
            delete-thread             ^D   delete all messages in thread
            display-address            @   display full address of sender
            display-toggle-weed        h   display message and toggle header weeding
            edit                       e   edit the current message
            edit-type                 ^E   edit the current message's Content-Type
            enter-command              :   enter a muttngrc command
            exit                       i   return to the main-menu
            extract-keys              ^K   extract PGP public keys
            flag-message               F   toggle a message's 'important' flag
            forget-passphrase         ^F   wipe PGP passphrase from memory
            forward-message            f   forward a message with comments
            group-reply                g   reply to all recipients
            half-up            not bound   move up one-half page
            half-down          not bound   move down one-half page
            help                       ?   this screen
            list-reply                 L   reply to specified mailing list
            mail                       m   compose a new mail message
            mail-key               ESC k   mail a PGP public key
            mark-as-new                N   toggle a message's 'new' flag
            next-line                RET   scroll down one line
            next-entry                 J   move to the next entry
            next-new                 TAB   jump to the next new message
            next-page                      move to the next page
            next-subthread         ESC n   jump to the next subthread
            next-thread               ^N   jump to the next thread
            next-undeleted             j   move to the next undeleted message
            next-unread        not bound   jump to the next unread message
            parent-message             P   jump to parent message in thread
            pipe-message               |   pipe message/attachment to a shell command
            previous-line      BackSpace   scroll up one line
            previous-entry             K   move to the previous entry
            previous-new       not bound   jump to the previous new message
            previous-page              -   move to the previous page
            previous-subthread     ESC p   jump to previous subthread
            previous-thread           ^P   jump to previous thread
            previous-undeleted         k   move to the last undelete message
            previous-unread    not bound   jump to the previous unread message
            print-message              p   print the current entry
            quit                       Q   save changes to mailbox and quit
            read-subthread         ESC r   mark the current subthread as read
            read-thread               ^R   mark the current thread as read
            recall-message             R   recall a postponed message
            redraw-screen             ^L   clear and redraw the screen

       The Mutt Next Generation E-Mail Client                                      170

            reply                      r   reply to a message
            save-message               s   save message/attachment to a file
            search                     /   search for a regular expression
            search-next                n   search for next match
            search-opposite    not bound   search for next match in opposite direction
            search-reverse         ESC /   search backwards for a regular expression
            search-toggle              \   toggle search pattern coloring
            shell-escape               !   invoke a command in a subshell
            show-version               V   show the Mutt-ng version number and date
            skip-quoted                S   skip beyond quoted text
            sync-mailbox               $   save changes to mailbox
            tag-message                t   tag a message
            toggle-quoted              T   toggle display of quoted text
            top                        ^   jump to the top of the message
            undelete-message           u   undelete the current entry
            undelete-subthread     ESC u   undelete all messages in subthread
            undelete-thread           ^U   undelete all messages in thread
            view-attachments           v   show MIME attachments

       _6_._5_._4  _a_l_i_a_s

            search                     /   search for a regular expression
            search-next                n   search for next match
            search-reverse         ESC /   search backwards for a regular expression

       _6_._5_._5  _q_u_e_r_y

            create-alias               a   create an alias from a message sender
            mail                       m   compose a new mail message
            query                      Q   query external program for addresses
            query-append               A   append new query results to current results
            search                     /   search for a regular expression
            search-next                n   search for next match
            search-opposite    not bound   search for next match in opposite direction
            search-reverse         ESC /   search backwards for a regular expression

       _6_._5_._6  _a_t_t_a_c_h

       The Mutt Next Generation E-Mail Client                                      171

            bounce-message             b   remail a message to another user
            collapse-parts             v   toggle display of subparts
            delete-entry               d   delete the current entry
            display-toggle-weed        h   display message and toggle header weeding
            edit-type                 ^E   edit the current entry's Content-Type
            extract-keys              ^K   extract PGP public keys
            forward-message            f   forward a message with comments
            group-reply                g   reply to all recipients
            list-reply                 L   reply to specified mailing list
            pipe-entry                 |   pipe message/attachment to a shell command
            print-entry                p   print the current entry
            reply                      r   reply to a message
            resend-message         ESC e   resend message and preserve MIME structure
            save-entry                 s   save message/attachment to a file
            undelete-entry             u   undelete the current entry
            view-attach              RET   view attachment using mailcap entry if necessary
            view-mailcap               m   force viewing of attachment using mailcap
            view-text                  T   view attachment as text

       _6_._5_._7  _c_o_m_p_o_s_e

       The Mutt Next Generation E-Mail Client                                      172

            attach-file                a   attach a file(s) to this message
            attach-message             A   attach message(s) to this message
            attach-key             ESC k   attach a PGP public key
            copy-file                  C   save message/attachment to a file
            detach-file                D   delete the current entry
            display-toggle-weed        h   display message and toggle header weeding
            edit-bcc                   b   edit the BCC list
            edit-cc                    c   edit the CC list
            edit-description           d   edit attachment description
            edit-encoding             ^E   edit attachment transfer-encoding
            edit-fcc                   f   enter a file to save a copy of this message in
            edit-from              ESC f   edit the from: field
            edit-file               ^X e   edit the file to be attached
            edit-headers               E   edit the message with headers
            edit                       e   edit the message
            edit-mime                  m   edit attachment using mailcap entry
            edit-reply-to              r   edit the Reply-To field
            edit-subject               s   edit the subject of this message
            edit-to                    t   edit the TO list
            edit-type                 ^T   edit attachment type
            filter-entry               F   filter attachment through a shell command
            forget-passphrase         ^F   wipe PGP passphrase from memory
            ispell                     i   run ispell on the message
            new-mime                   n   compose new attachment using mailcap entry
            pgp-menu                   p   show PGP options
            pipe-entry                 |   pipe message/attachment to a shell command
            postpone-message           P   save this message to send later
            print-entry                l   print the current entry
            rename-file                R   rename/move an attached file
            send-message               y   send the message
            toggle-unlink              u   toggle whether to delete file after sending it
            view-attach              RET   view attachment using mailcap entry if necessary
            write-fcc         w   write the message to a folder

       _6_._5_._8  _p_o_s_t_p_o_n_e

            delete-entry               d   delete the current entry
            undelete-entry             u   undelete the current entry

       _6_._5_._9  _b_r_o_w_s_e_r

       The Mutt Next Generation E-Mail Client                                      173

            change-dir                 c   change directories
            check-new                TAB   check mailboxes for new mail
            enter-mask                 m   enter a file mask
            search                     /   search for a regular expression
            search-next                n   search for next match
            search-reverse         ESC /   search backwards for a regular expression
            select-new                 N   select a new file in this directory
            sort                       o   sort messages
            sort-reverse               O   sort messages in reverse order
            toggle-mailboxes         TAB   toggle whether to browse mailboxes or all files
            view-file              SPACE   view file
            subscribe                  s   subscribe to current mailbox (IMAP Only)
            unsubscribe                u   unsubscribe to current mailbox (IMAP Only)
            toggle-subscribed          T   toggle view all/subscribed mailboxes (IMAP Only)

       _6_._5_._1_0  _p_g_p

            view-name                  %   view the key's user id
            verify-key                 c   verify a PGP public key

       _6_._5_._1_1  _e_d_i_t_o_r

            backspace          BackSpace   delete the char in front of the cursor
            backward-char             ^B   move the cursor one character to the left
            backward-word          ESC b   move the cursor to the previous word
            bol                       ^A   jump to the beginning of the line
            buffy-cycle            Space   cycle among incoming mailboxes
            capitalize-word        ESC c   uppercase the first character in the word
            complete                 TAB   complete filename or alias
            complete-query            ^T   complete address with query
            delete-char               ^D   delete the char under the cursor
            downcase-word          ESC l   lowercase all characters in current word
            eol                       ^E   jump to the end of the line
            forward-char              ^F   move the cursor one character to the right
            forward-word           ESC f   move the cursor to the next word
            history-down       not bound   scroll down through the history list
            history-up         not bound   scroll up through the history list
            kill-eol                  ^K   delete chars from cursor to end of line
            kill-eow               ESC d   delete chars from cursor to end of word
            kill-line                 ^U   delete all chars on the line
            kill-word                 ^W   delete the word in front of the cursor
            quote-char                ^V   quote the next typed key
            transpose-chars    not bound   transpose character under cursor with previous
            upcase-word            ESC u   uppercase all characters in current word

       _7_.  _M_i_s_c_e_l_l_a_n_y

       The Mutt Next Generation E-Mail Client                                      174

       _7_._1  _A_c_k_n_o_w_l_e_d_g_m_e_n_t_s

       Kari Hurtta <kari.hurtta@fmi.fi> co-developed the original MIME parsing code
       back in the ELM-ME days.

       The following people have been very helpful to the development of Mutt:

       Vikas Agnihotri <vikasa@writeme.com>,

       Francois Berjon <Francois.Berjon@aar.alcatel-alsthom.fr>,

       Aric Blumer <aric@fore.com>,

       John Capo <jc@irbs.com>,

       David Champion <dgc@uchicago.edu,

       Brendan Cully <brendan@kublai.com>,

       Liviu Daia <daia@stoilow.imar.ro>,

       Thomas E. Dickey <dickey@herndon4.his.com>,

       David DeSimone <fox@convex.hp.com>,

       Nickolay N. Dudorov <nnd@wint.itfs.nsk.su>,

       Ruslan Ermilov <ru@freebsd.org>,

       Edmund Grimley Evans <edmundo@rano.org,

       Michael Finken <finken@conware.de>,

       Sven Guckes <guckes@math.fu-berlin.de>,

       Lars Hecking <lhecking@nmrc.ie>,

       Mark Holloman <holloman@nando.net>,

       Andreas Holzmann <holzmann@fmi.uni-passau.de>,

       Marco d'Itri <md@linux.it>,

       Bjrn Jacke <bjacke@suse.com>,

       Byrial Jensen <byrial@image.dk>,

       David Jeske <jeske@igcom.net>,

       Christophe Kalt <kalt@hugo.int-evry.fr>,

       Tommi Komulainen <Tommi.Komulainen@iki.fi>,

       Felix von Leitner (a.k.a ``Fefe'') <leitner@math.fu-berlin.de>,

       The Mutt Next Generation E-Mail Client                                      175

       Brandon Long <blong@fiction.net>,

       Jimmy Mkel <jmy@flashback.net>,

       Lars Marowsky-Bree <lmb@pointer.in-minden.de>,

       Thomas ``Mike'' Michlmayr <mike@cosy.sbg.ac.at>,

       Andrew W. Nosenko <awn@bcs.zp.ua>,

       David O'Brien <obrien@Nuxi.cs.ucdavis.edu>,

       Clint Olsen <olsenc@ichips.intel.com>,

       Park Myeong Seok <pms@romance.kaist.ac.kr>,

       Thomas Parmelan <tom@ankh.fr.eu.org>,

       Ollivier Robert <roberto@keltia.freenix.fr>,

       Thomas Roessler <roessler@does-not-exist.org>,

       Roland Rosenfeld <roland@spinnaker.de>,

       TAKIZAWA Takashi <taki@luna.email.ne.jp>,

       Allain Thivillon <Allain.Thivillon@alma.fr>,

       Gero Treuner <gero@faveve.uni-stuttgart.de>,

       Vsevolod Volkov <vvv@lucky.net>,

       Ken Weinert <kenw@ihs.com>

       Mutt-ng is developed by the following people:

       Andreas Krennmair <ak@synflood.at>

       Nico Golde <nico@ngolde.de>

       Rocco Rutte <pdmef@cs.tu-berlin.de>

       The following people have been very helpful to the development of  Mutt-ng:

       Iain Lea <iain@bricbrac.de>

       Andreas Kneib <akneib@gmx.net>

       Carsten Schoelzki <cjs@weisshuhn.de>

       Elimar Riesebieter <riesebie@lxtec.de>

       _7_._2  _A_b_o_u_t _t_h_i_s _d_o_c_u_m_e_n_t

       The Mutt Next Generation E-Mail Client                                      176

       This document was written in SGML, and then rendered using the sgml-tools pack-
       age.

       The Mutt Next Generation E-Mail Client                                      177

                                          CONTENTS

       1.  Introduction   .......................................................... 1
           1.1   Overview   ........................................................ 1
           1.2   Mutt-ng Home Page   ............................................... 1
           1.3   Mailing Lists   ................................................... 1
           1.4   Software Distribution Sites   ..................................... 2
           1.5   IRC   ............................................................. 2
           1.6   Weblog   .......................................................... 2
           1.7   Copyright   ....................................................... 2

       2.  Getting Started     ..................................................... 2
           2.1   Basic Concepts       .............................................. 2
                 2.1.1    Screens and Menus           3
                 2.1.2    Configuration           3
                 2.1.3    Functions           3
                 2.1.4    Interaction           4
                 2.1.5    Modularization           4
                 2.1.6    Patterns           4
           2.2   Screens and Menus       ........................................... 4
                 2.2.1    Index          4
                 2.2.2    Pager          5
                 2.2.3    File Browser           5
                 2.2.4    Sidebar           5
                 2.2.5    Help           5
                 2.2.6    Compose Menu             6
                 2.2.7    Alias Menu             6
                 2.2.8    Attachment Menu             6
                 2.2.9    Key Menu             6
           2.3   Moving Around in Menus   .......................................... 6
           2.4   Editing Input Fields   ............................................ 7
           2.5   Reading Mail - The Index and Pager   .............................. 8
                 2.5.1    The Message Index   8
                 2.5.2    The Pager   9
                 2.5.3    Threaded Mode   11
                 2.5.4    Miscellaneous Functions   11
           2.6   Sending Mail   ................................................... 14
                 2.6.1    Composing new messages     14
                 2.6.2    Replying         16
                 2.6.3    Editing the message header     17
                 2.6.4    Using Mutt-ng with PGP     18
                 2.6.5    Sending anonymous messages via mixmaster     19
           2.7   Forwarding and Bouncing Mail   ................................... 19
           2.8   Postponing Mail   ................................................ 20

       3.  Configuration   ........................................................ 21
           3.1   Locations of Configuration Files   ............................... 21
           3.2   Syntax of Initialization Files   ................................. 21
           3.3   Defining/Using aliases   ......................................... 23
           3.4   Changing the default key bindings   .............................. 24
           3.5   Defining aliases for character sets    ........................... 26

                                              i

           3.6   Setting variables based upon mailbox   ........................... 26
           3.7   Keyboard macros   ................................................ 27
           3.8   Using color and mono video attributes   .......................... 28
           3.9   Ignoring (weeding) unwanted message headers   .................... 30
           3.10  Alternative addresses   .......................................... 31
           3.11  Format = Flowed   ................................................ 31
           3.12  Mailing lists   .................................................. 32
           3.13  Using Multiple spool mailboxes   ................................. 33
           3.14  Defining mailboxes which receive mail   .......................... 34
           3.15  User defined headers   ........................................... 34
           3.16  Defining the order of headers when viewing messages   ............ 35
           3.17  Specify default save filename   .................................. 35
           3.18  Specify default Fcc: mailbox when composing   .................... 36
           3.19  Specify default save filename and default Fcc: mailbox at once   . 36
           3.20  Change settings based upon message recipients   .................. 36
           3.21  Change settings before formatting a message   .................... 37
           3.22  Choosing the cryptographic key of the recipient   ................ 37
           3.23  Adding key sequences to the keyboard buffer   .................... 38
           3.24  Executing functions   ............................................ 38
           3.25  Message Scoring   ................................................ 38
           3.26  Spam detection   ................................................. 39
           3.27  Setting variables   .............................................. 41
           3.28  Reading initialization commands from another file   .............. 42
           3.29  Removing hooks   ................................................. 42
           3.30  Sharing Setups       ............................................. 43
                 3.30.1   Character Sets         43
                 3.30.2   Modularization           43
                 3.30.3   Conditional parts         43

       4.  Advanced Usage   ....................................................... 45
           4.1   Regular Expressions   ............................................ 45
           4.2   Patterns   ....................................................... 48
                 4.2.1    Complex Patterns    48
                 4.2.2    Patterns and Dates    49
           4.3   Format Strings       ............................................. 50
                 4.3.1    Introduction           50
                 4.3.2    Conditional Expansion           51
                 4.3.3    Modifications and Padding           52
           4.4   Using Tags   ..................................................... 53
           4.5   Using Hooks   .................................................... 53
                 4.5.1    Message Matching in Hooks   54
           4.6   Using the sidebar   .............................................. 54
           4.7   External Address Queries   ....................................... 55
           4.8   Mailbox Formats   ................................................ 56
           4.9   Mailbox Shortcuts   .............................................. 57
           4.10  Handling Mailing Lists   ......................................... 57
           4.11  Editing threads   ................................................ 59
                 4.11.1   Linking threads   59
                 4.11.2   Breaking threads   59
           4.12  Delivery Status Notification (DSN) Support   ..................... 59
           4.13  POP3 Support (OPTIONAL)   ........................................ 59
           4.14  IMAP Support (OPTIONAL)   ........................................ 60
                 4.14.1   The Folder Browser   61

                                              ii

                 4.14.2   Authentication   61
           4.15  NNTP Support (OPTIONAL)   ........................................ 62
                 4.15.1   Again: Scoring       62
           4.16  Managing multiple IMAP/POP/NNTP accounts (OPTIONAL)   ............ 63
           4.17  Start a WWW Browser on URLs (EXTERNAL)   ......................... 63
           4.18  Compressed folders Support (OPTIONAL)   .......................... 64
                 4.18.1   Open a compressed mailbox for reading   64
                 4.18.2   Write a compressed mailbox   65
                 4.18.3   Append a message to a compressed mailbox   65
                 4.18.4   Encrypted folders   66

       5.  Mutt-ng's MIME Support   ............................................... 66
           5.1   Using MIME in Mutt   ............................................. 67
                 5.1.1    Viewing MIME messages in the pager   67
                 5.1.2    The Attachment Menu   67
                 5.1.3    The Compose Menu   67
           5.2   MIME Type configuration with mime.types   ........................ 68
           5.3   MIME Viewer configuration with mailcap   ......................... 69
                 5.3.1    The Basics of the mailcap file   69
                 5.3.2    Secure use of mailcap   70
                 5.3.3    Advanced mailcap Usage   71
                 5.3.4    Example mailcap files   74
           5.4   MIME Autoview   .................................................. 75
           5.5   MIME Multipart/Alternative   ..................................... 76
           5.6   MIME Lookup   .................................................... 76

       6.  Reference   ............................................................ 77
           6.1   Command line options   ........................................... 77
           6.2   Patterns   ....................................................... 78
           6.3   Configuration Commands   ......................................... 79
           6.4   Configuration variables .......................................... 81
                 6.4.1    abort_nosubject   81
                 6.4.2    abort_unmodified   81
                 6.4.3    alias_file   81
                 6.4.4    alias_format   81
                 6.4.5    allow_8bit   82
                 6.4.6    allow_ansi   82
                 6.4.7    arrow_cursor   82
                 6.4.8    ascii_chars   83
                 6.4.9    askbcc   83
                 6.4.10   askcc   83
                 6.4.11   assumed_charset   83
                 6.4.12   attach_format   83
                 6.4.13   attach_sep   84
                 6.4.14   attach_split   85
                 6.4.15   attribution   85
                 6.4.16   auto_tag   85
                 6.4.17   autoedit   85
                 6.4.18   beep   85
                 6.4.19   beep_new   86
                 6.4.20   bounce   86
                 6.4.21   bounce_delivered   86
                 6.4.22   braille_friendly   86

                                             iii

                 6.4.23   certificate_file   86
                 6.4.24   charset   87
                 6.4.25   check_new   87
                 6.4.26   collapse_unread   87
                 6.4.27   compose_format   87
                 6.4.28   config_charset   88
                 6.4.29   confirmappend   88
                 6.4.30   confirmcreate   88
                 6.4.31   connect_timeout   88
                 6.4.32   content_type   88
                 6.4.33   copy   89
                 6.4.34   crypt_autoencrypt   89
                 6.4.35   crypt_autopgp   89
                 6.4.36   crypt_autosign   89
                 6.4.37   crypt_autosmime   90
                 6.4.38   crypt_replyencrypt   90
                 6.4.39   crypt_replysign   90
                 6.4.40   crypt_replysignencrypted   90
                 6.4.41   crypt_timestamp   90
                 6.4.42   crypt_use_gpgme   91
                 6.4.43   crypt_verify_sig   91
                 6.4.44   date_format   91
                 6.4.45   default_hook   91
                 6.4.46   delete   92
                 6.4.47   delete_untag   92
                 6.4.48   digest_collapse   92
                 6.4.49   display_filter   92
                 6.4.50   dotlock_program   92
                 6.4.51   dsn_notify   93
                 6.4.52   dsn_return   93
                 6.4.53   duplicate_threads   93
                 6.4.54   edit_headers   93
                 6.4.55   editor   93
                 6.4.56   encode_from   94
                 6.4.57   entropy_file   94
                 6.4.58   envelope_from   94
                 6.4.59   escape   94
                 6.4.60   fast_reply   94
                 6.4.61   fcc_attach   95
                 6.4.62   fcc_clear   95
                 6.4.63   file_charset   95
                 6.4.64   folder   95
                 6.4.65   folder_format   96
                 6.4.66   followup_to   96
                 6.4.67   force_buffy_check   97
                 6.4.68   force_name   97
                 6.4.69   forward_decode   97
                 6.4.70   forward_decrypt   97
                 6.4.71   forward_edit   98
                 6.4.72   forward_format   98
                 6.4.73   forward_quote   98
                 6.4.74   from   98
                 6.4.75   gecos_mask   98

                                              iv

                 6.4.76   hdrs   99
                 6.4.77   header   99
                 6.4.78   header_cache   99
                 6.4.79   header_cache_compress   100
                 6.4.80   help   100
                 6.4.81   hidden_host   100
                 6.4.82   hide_limited   100
                 6.4.83   hide_missing   100
                 6.4.84   hide_thread_subject   101
                 6.4.85   hide_top_limited   101
                 6.4.86   hide_top_missing   101
                 6.4.87   history   101
                 6.4.88   honor_followup_to   101
                 6.4.89   hostname   101
                 6.4.90   ignore_list_reply_to   102
                 6.4.91   imap_authenticators   102
                 6.4.92   imap_check_subscribed   102
                 6.4.93   imap_delim_chars   102
                 6.4.94   imap_headers   103
                 6.4.95   imap_home_namespace   103
                 6.4.96   imap_keepalive   103
                 6.4.97   imap_list_subscribed   104
                 6.4.98   imap_login   104
                 6.4.99   imap_mail_check   104
                 6.4.100  imap_pass   104
                 6.4.101  imap_passive   105
                 6.4.102  imap_peek   105
                 6.4.103  imap_reconnect   105
                 6.4.104  imap_servernoise   105
                 6.4.105  imap_user   105
                 6.4.106  implicit_autoview   106
                 6.4.107  include   106
                 6.4.108  include_onlyfirst   106
                 6.4.109  indent_string   106
                 6.4.110  index_format   106
                 6.4.111  ispell   109
                 6.4.112  keep_flagged   109
                 6.4.113  list_reply   109
                 6.4.114  locale   110
                 6.4.115  mail_check   110
                 6.4.116  mailcap_path   110
                 6.4.117  mailcap_sanitize   110
                 6.4.118  maildir_header_cache_verify   110
                 6.4.119  maildir_trash   111
                 6.4.120  mark_old   111
                 6.4.121  markers   111
                 6.4.122  mask   111
                 6.4.123  max_line_length   112
                 6.4.124  mbox   112
                 6.4.125  mbox_type   112
                 6.4.126  menu_context   112
                 6.4.127  menu_move_off   112
                 6.4.128  menu_scroll   112

                                              v

                 6.4.129  message_format   113
                 6.4.130  meta_key   113
                 6.4.131  metoo   113
                 6.4.132  mh_purge   113
                 6.4.133  mh_seq_flagged   113
                 6.4.134  mh_seq_replied   114
                 6.4.135  mh_seq_unseen   114
                 6.4.136  mime_forward   114
                 6.4.137  mime_forward_decode   114
                 6.4.138  mime_forward_rest   114
                 6.4.139  mix_entry_format   114
                 6.4.140  mixmaster   115
                 6.4.141  move   115
                 6.4.142  msgid_format   115
                 6.4.143  narrow_tree   116
                 6.4.144  nntp_ask_followup_to   117
                 6.4.145  nntp_ask_x_comment_to   117
                 6.4.146  nntp_cache_dir   117
                 6.4.147  nntp_catchup   117
                 6.4.148  nntp_context   117
                 6.4.149  nntp_followup_to_poster   118
                 6.4.150  nntp_group_index_format   118
                 6.4.151  nntp_host   118
                 6.4.152  nntp_inews   119
                 6.4.153  nntp_load_description   119
                 6.4.154  nntp_mail_check   119
                 6.4.155  nntp_mime_subject   120
                 6.4.156  nntp_newsrc   120
                 6.4.157  nntp_pass   120
                 6.4.158  nntp_post_moderated   120
                 6.4.159  nntp_reconnect   121
                 6.4.160  nntp_save_unsubscribed   121
                 6.4.161  nntp_show_new_news   121
                 6.4.162  nntp_show_only_unread   121
                 6.4.163  nntp_user   121
                 6.4.164  nntp_x_comment_to   122
                 6.4.165  operating_system   122
                 6.4.166  pager   122
                 6.4.167  pager_context   122
                 6.4.168  pager_format   123
                 6.4.169  pager_index_lines   123
                 6.4.170  pager_stop   123
                 6.4.171  pgp_auto_decode   123
                 6.4.172  pgp_autoinline   123
                 6.4.173  pgp_check_exit   124
                 6.4.174  pgp_clearsign_command   124
                 6.4.175  pgp_decode_command   124
                 6.4.176  pgp_decrypt_command   125
                 6.4.177  pgp_encrypt_only_command   125
                 6.4.178  pgp_encrypt_sign_command   125
                 6.4.179  pgp_entry_format   125
                 6.4.180  pgp_export_command   126
                 6.4.181  pgp_getkeys_command   126

                                              vi

                 6.4.182  pgp_good_sign   126
                 6.4.183  pgp_ignore_subkeys   126
                 6.4.184  pgp_import_command   127
                 6.4.185  pgp_list_pubring_command   127
                 6.4.186  pgp_list_secring_command   127
                 6.4.187  pgp_long_ids   127
                 6.4.188  pgp_mime_auto   127
                 6.4.189  pgp_replyinline   128
                 6.4.190  pgp_retainable_sigs   128
                 6.4.191  pgp_show_unusable   128
                 6.4.192  pgp_sign_as   128
                 6.4.193  pgp_sign_command   129
                 6.4.194  pgp_sort_keys   129
                 6.4.195  pgp_strict_enc   129
                 6.4.196  pgp_timeout   129
                 6.4.197  pgp_use_gpg_agent   130
                 6.4.198  pgp_verify_command   130
                 6.4.199  pgp_verify_key_command   130
                 6.4.200  pipe_decode   130
                 6.4.201  pipe_sep   130
                 6.4.202  pipe_split   130
                 6.4.203  pop_auth_try_all   131
                 6.4.204  pop_authenticators   131
                 6.4.205  pop_delete   131
                 6.4.206  pop_host   131
                 6.4.207  pop_last   132
                 6.4.208  pop_mail_check   132
                 6.4.209  pop_pass   132
                 6.4.210  pop_reconnect   132
                 6.4.211  pop_user   133
                 6.4.212  post_indent_string   133
                 6.4.213  postpone   133
                 6.4.214  postponed   133
                 6.4.215  preconnect   133
                 6.4.216  print   134
                 6.4.217  print_command   134
                 6.4.218  print_decode   134
                 6.4.219  print_split   134
                 6.4.220  prompt_after   135
                 6.4.221  query_command   135
                 6.4.222  quit   135
                 6.4.223  quote_empty   135
                 6.4.224  quote_quoted   135
                 6.4.225  quote_regexp   136
                 6.4.226  read_inc   136
                 6.4.227  read_only   136
                 6.4.228  realname   136
                 6.4.229  recall   136
                 6.4.230  record   137
                 6.4.231  reply_regexp   137
                 6.4.232  reply_self   137
                 6.4.233  reply_to   137
                 6.4.234  resolve   138

                                             vii

                 6.4.235  reverse_alias   138
                 6.4.236  reverse_name   138
                 6.4.237  reverse_realname   138
                 6.4.238  rfc2047_parameters   139
                 6.4.239  save_address   139
                 6.4.240  save_empty   139
                 6.4.241  save_name   139
                 6.4.242  score   140
                 6.4.243  score_threshold_delete   140
                 6.4.244  score_threshold_flag   140
                 6.4.245  score_threshold_read   140
                 6.4.246  send_charset   140
                 6.4.247  sendmail   141
                 6.4.248  sendmail_wait   141
                 6.4.249  shell   141
                 6.4.250  sidebar_boundary   142
                 6.4.251  sidebar_delim   142
                 6.4.252  sidebar_newmail_only   142
                 6.4.253  sidebar_number_format   142
                 6.4.254  sidebar_shorten_hierarchy   143
                 6.4.255  sidebar_visible   143
                 6.4.256  sidebar_width   143
                 6.4.257  sig_dashes   143
                 6.4.258  sig_on_top   144
                 6.4.259  signature   144
                 6.4.260  signoff_string   144
                 6.4.261  simple_search   144
                 6.4.262  sleep_time   145
                 6.4.263  smart_wrap   145
                 6.4.264  smileys   145
                 6.4.265  smime_ask_cert_label   145
                 6.4.266  smime_ca_location   145
                 6.4.267  smime_certificates   145
                 6.4.268  smime_decrypt_command   146
                 6.4.269  smime_decrypt_use_default_key   146
                 6.4.270  smime_default_key   147
                 6.4.271  smime_encrypt_command   147
                 6.4.272  smime_encrypt_with   147
                 6.4.273  smime_get_cert_command   147
                 6.4.274  smime_get_cert_email_command   147
                 6.4.275  smime_get_signer_cert_command   147
                 6.4.276  smime_import_cert_command   148
                 6.4.277  smime_is_default   148
                 6.4.278  smime_keys   148
                 6.4.279  smime_pk7out_command   148
                 6.4.280  smime_sign_command   149
                 6.4.281  smime_sign_opaque_command   149
                 6.4.282  smime_timeout   149
                 6.4.283  smime_verify_command   149
                 6.4.284  smime_verify_opaque_command   149
                 6.4.285  smtp_auth_password   149
                 6.4.286  smtp_auth_username   150
                 6.4.287  smtp_host   150

                                             viii

                 6.4.288  smtp_port   150
                 6.4.289  smtp_use_tls   150
                 6.4.290  sort   151
                 6.4.291  sort_alias   151
                 6.4.292  sort_aux   151
                 6.4.293  sort_browser   152
                 6.4.294  sort_re   152
                 6.4.295  spam_separator   152
                 6.4.296  spoolfile   153
                 6.4.297  ssl_ca_certificates_file   153
                 6.4.298  ssl_client_cert   153
                 6.4.299  ssl_force_tls   153
                 6.4.300  ssl_min_dh_prime_bits   153
                 6.4.301  ssl_starttls   154
                 6.4.302  ssl_use_sslv2   154
                 6.4.303  ssl_use_sslv3   154
                 6.4.304  ssl_use_tlsv1   154
                 6.4.305  ssl_usesystemcerts   155
                 6.4.306  status_chars   155
                 6.4.307  status_format   155
                 6.4.308  status_on_top   157
                 6.4.309  strict_mailto   157
                 6.4.310  strict_mime   158
                 6.4.311  strict_threads   158
                 6.4.312  strip_was   158
                 6.4.313  strip_was_regex   158
                 6.4.314  stuff_quoted   159
                 6.4.315  suspend   159
                 6.4.316  text_flowed   159
                 6.4.317  thorough_search   159
                 6.4.318  thread_received   159
                 6.4.319  tilde   160
                 6.4.320  timeout   160
                 6.4.321  tmpdir   160
                 6.4.322  to_chars   160
                 6.4.323  trash   160
                 6.4.324  tunnel   161
                 6.4.325  umask   161
                 6.4.326  uncollapse_jump   161
                 6.4.327  use_8bitmime   161
                 6.4.328  use_domain   161
                 6.4.329  use_from   162
                 6.4.330  use_idn   162
                 6.4.331  use_ipv6   162
                 6.4.332  user_agent   162
                 6.4.333  visual   162
                 6.4.334  wait_key   163
                 6.4.335  weed   163
                 6.4.336  wrap_search   163
                 6.4.337  wrapmargin   163
                 6.4.338  write_bcc   163
                 6.4.339  write_inc   164
                 6.4.340  xterm_icon   164

                                              ix

                 6.4.341  xterm_leave   164
                 6.4.342  xterm_set_titles   164
                 6.4.343  xterm_title   165
           6.5   Functions ....................................................... 165
                 6.5.1    generic   165
                 6.5.2    index   166
                 6.5.3    pager   168
                 6.5.4    alias   170
                 6.5.5    query   170
                 6.5.6    attach   170
                 6.5.7    compose   171
                 6.5.8    postpone   172
                 6.5.9    browser   172
                 6.5.10   pgp   173
                 6.5.11   editor   173

       7.  Miscellany ............................................................ 173
           7.1   Acknowledgments ................................................. 174
           7.2   About this document ............................................. 175

                                              x

