# vim:ft=make

# default compile type: GNU gcc
CCSTYLE?=gcc
XSLPROC?=xsltproc

# setup everything for gcc
ifeq ($(CCSTYLE),gcc)
CC?=$(call whereis,gcc,)
CXX?=$(call whereis,g++,)
AR?=$(call whereis,ar,)
RANLIB?=$(call whereis,ranlib,)
CFLAGS+=-Wall -Os -pipe -W -Wall -Wmissing-prototypes -Wmissing-declarations -Wparentheses -Wpointer-arith -Wredundant-decls -Wuninitialized -Wunused -Wno-format -Werror
CXXFLAGS+=-Wall -Os -pipe -W -Wall -Wparentheses -Wpointer-arith -Wredundant-decls -Wuninitialized -Wunused -Wno-format -Werror
DEPFLAG=-M
endif # CCSTYLE == gcc

# setup everything for SUN WSpro compilers
ifeq ($(CCSTYLE),suncc)
# overwrite by force as $(MAKE) sets $(CC)/$(CXX) already ;-(
CC=/opt/SUNWspro/bin/cc
CXX=/opt/SUNWspro/bin/CC
AR?=$(call whereis,ar,)
RANLIB?=$(call whereis,ranlib,)
CFLAGS+=-Os 
DEPFLAG=-xM1
endif

# adjust flags for DEBUG=1
ifeq ($(DEBUG),1)
CFLAGS+=-g
CXXFLAGS+=-g
LDFLAGS+=-g
endif

# get current OS into compiler flags
MYOS:=$(strip $(shell uname -s | tr 'a-z' 'A-Z' | sed 's/_.*$$//'))
CFLAGS+=-D$(MYOS)
CXXFLAGS+=-D$(MYOS)

# setup for Unit++
UNITPPDIR?=/usr
CXXFLAGS+=-I$(UNITPPDIR)/include
CFLAGS+=-I$(UNITPPDIR)/include
LDFLAGS+=-L$(UNITPPDIR)/lib

# get tools
DOXYGEN:=$(call whereis,doxygen,)
TIDY:=$(call whereis,tidy,)
XGETTEXT:=$(call whereis,xgettext,)
MSGMERGE:=$(call whereis,msgmerge,)
MSGFMT:=$(call whereis,msgfmt,)

# xsltproc(1)
ifeq ($(XSLPROC),xsltproc)
XSLTPROC:=$(call whereis,xsltproc,)
ifneq ($(XSLTPROC),)
doxslt_s=echo "$(XSLTPROC) --xinclude --nonet --stringparam l10n.gentext.default.language $(4) --stringparam html.stylesheet muttng.css -o $(3) $(2) $(1)" && $(XSLTPROC) --xinclude --nonet --stringparam l10n.gentext.default.language $(4) --stringparam html.stylesheet muttng.css -o $(3) $(2) $(1) || exit 1
doxslt_m=echo "$(XSLTPROC) --xinclude --nonet --stringparam l10n.gentext.default.language $(4) --stringparam html.stylesheet muttng.css -o $(3) $(2) $(1)" && $(XSLTPROC) --xinclude --nonet --stringparam l10n.gentext.default.language $(4) --stringparam html.stylesheet muttng.css -o $(3) $(2) $(1) || exit 1
else
doxslt_s=echo
doxslt_m=echo
endif
endif

# xalan java
ifeq ($(XSLPROC),xalanj)
XSLTPROC:=$(call whereis,xalan-j,)
ifneq ($(XSLTPROC),)
doxslt_s=echo "$(XSLTPROC) -param l10n.gentext.default.language $(4) -param html.stylesheet muttng.css -in $(1) -xsl $(2) -out $(3)" && $(XSLTPROC) -param l10n.gentext.default.language $(4) -param html.stylesheet muttng.css -in $(1) -xsl $(2) -out $(3) || exit 1
doxslt_m=echo "$(XSLTPROC) -param l10n.gentext.default.language $(4) -param html.stylesheet muttng.css -in $(1) -xsl $(2)" && $(XSLTPROC) -param l10n.gentext.default.language $(4) -param html.stylesheet muttng.css -in $(1) -xsl $(2) || exit 1
else
doxslt_s=echo
doxslt_m=echo
endif
endif

# setup TeX
LATEX=$(call whereis,latex,)
PDFLATEX=$(call whereis,pdflatex,)
MAKEINDEX=$(call whereis,makeindex,)
