<?xml version="1.0" encoding="utf-8"?>
<chapter id="building">
  <title>Übersetzen und Installieren</title>

  <section id="build-systems"> <!--{{{-->
    <title>Unterstützte Systeme</title>

    <p>
      Mutt-ng funktioniert auf folgenden Systemen:
    </p>

    <ul>
      <li>Linux: gcc ?</li>
      <li>FreeBSD: 5.x mit gcc 3.4/4.0</li>
      <li>Solaris: 5.9 mit gcc 3.4/Sun Workshop Pro 9.0</li>
    </ul>

  </section>
  <!--}}}-->

  <section id="build-requirements"> <!--{{{-->
    <title>Voraussetzungen</title>

    <p> 
      Um mutt-ng zu übersetzen, müssen die folgenden Programme
      installiert und einsatzfähig sein:
    </p>

    <ul>
      <li>GNU make. Andere make-Varianten funktionieren nicht, weil spezielle
        Konstrukte verwenden werden, die nur GNU make unterstützt.</li>
      <li>Ein C und C++ Übersetzer. Derzeit werden die 
        GNU Compiler Collection als auch Sun Microsystems' Workshop Pro
        Compiler Suite unterstützt.</li>
      <li>Für das Übersetzen und Ausführen der Testsuite wird optional
        Unit++ (siehe <web>http://unitpp.sf.net/</web>) benötigt.</li>
      <li>Für das optionale Erstellen von lokalisierten Versionen der
        Anwendungen wird GNU gettext benötigt.</li>
      <li>Für optional verschlüsstelte Verbindungen wird entweder
        OpenSSL oder GNUTLS benötigt.</li>
      <li>Zwar technisch optional aber dringend empfohlen wird die Installation
        von libiconv, die für das Konvertieren von Zeichensätzen/-kodierungen
        benötigt wird.</li>
    </ul>

    <p>
      Alle Teile sollten sich übersetzen lassen, wenn diese Bedingungen erfüllt
      sind. Weil aber einige Teile der Quellen automatisch mit Perlskripten
      erzeugt werden und diese Teile aber ebenfalls unter Versionskontrolle stehen,
      sollte Perl nicht zwingend benötigt werden. Es kann aber nicht schaden.
    </p>

    <p>
      Um entweder die Internetseiten für mutt-ng oder das Handbuch zu
      erstellen, müssen die folgenden Programme vorhanden und einsatzfähig sein:
    </p>

    <ul>
      <li>Ein XSL Prozessor. Derzeit werden <tt>xsltproc</tt> und <tt>xalan</tt>
        unterstützt, wobei mit <tt>xalan</tt> und dem XInclude-Standard noch
        Probleme beseitigt werden müssen.</li>
      <li>DocBook Stylesheets für Version 4.3.</li>
      <li>Ein LaTeX-System inklusive <man>pdflatex</man>, <man>latex</man> und
        <man>makeindex</man></li>.
    </ul>

    <p>
      Um die Dokumentation der Quellen zu erstellen, wird zusätzlich
      <man>doxygen</man> (siehe <web>http://www.doxygen.org/</web>) benötigt.
    </p>

  </section>
  <!--}}}-->

  <section id="build-config"> <!--{{{-->
    <title>Konfiguration</title>

    <p>
      Um den Übersetzungsprozess lauffähig zu machen, muss eine Datei namens
      <tt>GNUmakefile.config.mine</tt> im obersten Quellenverzeichnis erstellt
      werden, also in <tt>mutt-ng/branches/muttng-rewrite</tt>.
    </p>

    <p>
      Darin lassen sich verschiedene Optionen individuell setzen. Die wichtigsten sind:
    </p>

    <ul>
      <li><tt>CCSTYLE=(gcc|suncc)</tt>. Welche Übersetzer angenommen werden
        sollen: entweder GNU GCC oder Sun's Workshop Pro C/C++ Übersetzer.
        Vorgabe: <tt>gcc</tt>.</li>
      <li><tt>XSLPROC=(xsltproc|xalanj)</tt>. Welcher XSL Prozessor verwendet
        werden soll: entweder <man>xsltproc</man> oder Xalan Java. Vorgabe:
        <tt>xsltproc</tt>.</li>
      <li><tt>DEBUG=(0|1).</tt> Ob die Option <tt>-g</tt> and die
        Übersetzer übergeben werden soll. Dies ist für das Verwenden von
        Debuggern notwendig. Dies ist nicht das gleiche wie das Erzeugen von
        Debugausgaben in mutt-ng (, was gegenwärtig nicht abgeschaltet werden
        kann). Vorgabe: <tt>0</tt>.</li>
      <li><tt>UNITPPDIR=/path</tt>. Pfad in dem Unit++ (siehe
        <web>http://unitpp.sf.net/</web>) für die Testsuite installiert
        ist. Vorgabe: <tt>/usr</tt>.</li>
      <li><tt>OPENSSLDIR=/path</tt>. Pfad in dem OpenSSL
        installiert ist. Dies wird für verschlüsselte Verbindungen benötigt.
        Wenn kein Wert gegeben ist, wird OpenSSL nicht verwendet.
        Vorgabe: keine.</li>
      <li><tt>LIBICONVDIR=/path</tt>. Pfad in dem libiconv installiert ist,
        die für Konvertierungen zwischen Zeichensätzen/-kodierungen
        benötigt wird. Wird kein Wert angegeben, wird libiconv nicht
        verwendet. Vorgabe: keine.</li>
      <li><tt>DOCLANGUAGES=[|list|all]</tt>. In welchen Sprachen die
        Dokumentation erstellt wird. Ist ein leerer Wert gegeben wird nur
        Englisch erstellt. Wenn eine Liste angebeben ist, werden alle
        enthaltenen Sprachen erstellt (Beispiel: "<tt>en de</tt>").
        Wird das spezielle Wort <tt>all</tt> angebeben, werden alle
        verfügbaren Sprachen erstellt. Vorgabe: <tt>all</tt>.</li>
    </ul>

  </section>
  <!--}}}-->

  <section id="build-app"> <!--{{{-->
    <title>Anwendungen übersetzen</title>

    <p>
      Das Übersetzunen der Anwendungen sollte recht einfach sein:
    </p>

    <ol>
      <li>Nach der Lektüre <docref type="Abschnitt" href="build-config">wie man das Übersetzen
          konfiguriert</docref>, muss zunächst <tt>GNUmakefile.config.mine</tt>
        entsprechend bearbeitet werden.</li>
      <li>Im obersten Verzeichnis führt man
        <pre>
$ make sysconf</pre>
        danach als ersten Befehl aus. Es werden verrückte Fehlermeldungen
        kommen falls nicht.</li>
      <li>Wenn nicht mit einem Fehler abgebrochen wurde (was nicht passieren
        sollte), führt man
        <pre>
$ make depend</pre>
        ebenfalls im obersten Verzeichnis aus.</li>
      <li>Wenn immernoch alles ohne Fehler lief, führt man nur noch 
        <tt>make</tt> aus, um alles zu übersetzen.</li>
    </ol>

    <p>
      Sollte irgendeiner dieser Schritte fehl schlagen,
      bitten wir um Nachricht an die Entwickler über die E-Mail-Adresse
      <email>mutt-ng-devel@lists.berlios.de</email>.
    </p>
 
  </section> <!--}}}-->

</chapter>
