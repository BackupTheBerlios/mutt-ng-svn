# vim:ft=make:

include ./GNUmakefile.whereis
include ./GNUmakefile.config.mine
include ./GNUmakefile.config

# this tries to compile a test programm to detect a feature
# usage $(call testing,[source file],[function name],[preprocessor define],[config file])
testing=echo -n "Testing for working $(2)()..." && \
	(($(CC) $(CFLAGS) -o $(CURDIR)/a.out ./src/sysconf/$(1) >/dev/null 2>&1 && \
	  echo "\#define $(3) 1" || \
	  echo "\#define $(3) 0") >> $(4)) && \
	(grep "$(3) 1" $(4) >/dev/null 2>&1 && (echo " yes") || \
	  (echo " no")) ; rm -rf $(CURDIR)/a.out

all:
	@ true

.SILENT: sysconf sysconf_core

sysconf: sysconf_core sysconf_libmuttng sysconf_muttng

sysconf_core:
	rm -rf ./src/core/core_features.h a.out
	echo "#ifndef CORE_FEATURES_H" >> ./src/core/core_features.h
	echo "#define CORE_FEATURES_H" >> ./src/core/core_features.h
	$(call testing,test_alloca.c,alloca,HAVE_ALLOCA,./src/core/core_features.h)
	$(call testing,test_mmap.c,mmap,HAVE_MMAP,./src/core/core_features.h)
	$(call testing,test_strsep.c,strsep,HAVE_STRSEP,./src/core/core_features.h)
ifneq ($(DEBUG),)
	echo "#define HAVE_DEBUG 1" >> ./src/core/core_features.h
else
	echo "#define HAVE_DEBUG 0" >> ./src/core/core_features.h
endif
	echo "#endif /* !CORE_FEATURES_H */" >> ./src/core/core_features.h
	rm -rf a.out

sysconf_libmuttng:
	@ true

sysconf_muttng:
	@ true
